
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.UsuarioScalarFieldEnum = {
  id_usuario: 'id_usuario',
  nome: 'nome',
  email: 'email',
  senha_hash: 'senha_hash',
  id_tipo_usuario: 'id_tipo_usuario',
  ativo: 'ativo',
  criado_em: 'criado_em',
  CPF: 'CPF'
};

exports.Prisma.Tipo_usuarioScalarFieldEnum = {
  id_tipo_usuario: 'id_tipo_usuario',
  descricao: 'descricao'
};

exports.Prisma.ProdutoScalarFieldEnum = {
  id_produto: 'id_produto',
  nome: 'nome',
  descricao: 'descricao',
  categoria: 'categoria',
  codigo_publico: 'codigo_publico',
  preco_unitario: 'preco_unitario',
  unidade_medida: 'unidade_medida',
  id_fornecedor: 'id_fornecedor'
};

exports.Prisma.EstoqueScalarFieldEnum = {
  id_estoque: 'id_estoque',
  id_produto: 'id_produto',
  id_sala: 'id_sala',
  quantidade_atual: 'quantidade_atual',
  quantidade_minima: 'quantidade_minima',
  ultima_atualizacao: 'ultima_atualizacao',
  status: 'status'
};

exports.Prisma.FinanceiroScalarFieldEnum = {
  id_financeiro: 'id_financeiro',
  tipo: 'tipo',
  descricao: 'descricao',
  valor: 'valor',
  data_movimento: 'data_movimento',
  status: 'status'
};

exports.Prisma.CompraScalarFieldEnum = {
  id_compra: 'id_compra',
  id_produto: 'id_produto',
  id_fornecedor: 'id_fornecedor',
  id_financeiro: 'id_financeiro',
  id_usuario: 'id_usuario',
  data_pedido: 'data_pedido',
  data_recebimento: 'data_recebimento',
  valor_total: 'valor_total',
  origem: 'origem',
  observacoes: 'observacoes'
};

exports.Prisma.SalaScalarFieldEnum = {
  id_sala: 'id_sala',
  nome_sala: 'nome_sala',
  descricao: 'descricao',
  capacidade: 'capacidade',
  localizacao: 'localizacao'
};

exports.Prisma.MovimentacaoScalarFieldEnum = {
  id_movimentacao: 'id_movimentacao',
  id_produto: 'id_produto',
  id_usuario: 'id_usuario',
  tipo_movimentacao: 'tipo_movimentacao',
  origem: 'origem',
  data_movimento: 'data_movimento',
  status: 'status',
  observacao: 'observacao'
};

exports.Prisma.AlertaScalarFieldEnum = {
  id_alerta: 'id_alerta',
  id_produto: 'id_produto',
  tipo_alerta: 'tipo_alerta',
  mensagem: 'mensagem'
};

exports.Prisma.Previsao_demandaScalarFieldEnum = {
  id_previsao: 'id_previsao',
  id_produto: 'id_produto',
  data_prevista: 'data_prevista',
  demanda_prevista: 'demanda_prevista',
  id_financeiro: 'id_financeiro',
  confianca_modelo: 'confianca_modelo'
};

exports.Prisma.FornecedorScalarFieldEnum = {
  id_fornecedor: 'id_fornecedor',
  nome: 'nome',
  cnpj: 'cnpj',
  telefone: 'telefone',
  email: 'email',
  endereco: 'endereco'
};

exports.Prisma.Historico_previsaoScalarFieldEnum = {
  id_historico: 'id_historico',
  id_produto: 'id_produto',
  id_previsao: 'id_previsao',
  id_financeiro: 'id_financeiro',
  demanda_real: 'demanda_real',
  diferenca: 'diferenca',
  precisao_modelo: 'precisao_modelo'
};

exports.Prisma.RelatorioScalarFieldEnum = {
  id_relatorio: 'id_relatorio',
  id_usuario: 'id_usuario',
  tipo_relatorio: 'tipo_relatorio',
  caminho_arquivo: 'caminho_arquivo',
  gerado_por: 'gerado_por',
  gerado_em: 'gerado_em',
  status: 'status'
};

exports.Prisma.GarantiaScalarFieldEnum = {
  id_garantia: 'id_garantia',
  id_produto: 'id_produto',
  id_usuario: 'id_usuario',
  data_inicio: 'data_inicio',
  data_fim: 'data_fim',
  descricao: 'descricao',
  status: 'status'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  usuario: 'usuario',
  tipo_usuario: 'tipo_usuario',
  produto: 'produto',
  estoque: 'estoque',
  financeiro: 'financeiro',
  compra: 'compra',
  sala: 'sala',
  movimentacao: 'movimentacao',
  alerta: 'alerta',
  previsao_demanda: 'previsao_demanda',
  fornecedor: 'fornecedor',
  historico_previsao: 'historico_previsao',
  relatorio: 'relatorio',
  garantia: 'garantia'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
