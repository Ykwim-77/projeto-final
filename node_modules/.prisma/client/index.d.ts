
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model usuario
 * 
 */
export type usuario = $Result.DefaultSelection<Prisma.$usuarioPayload>
/**
 * Model tipo_usuario
 * 
 */
export type tipo_usuario = $Result.DefaultSelection<Prisma.$tipo_usuarioPayload>
/**
 * Model produto
 * 
 */
export type produto = $Result.DefaultSelection<Prisma.$produtoPayload>
/**
 * Model estoque
 * 
 */
export type estoque = $Result.DefaultSelection<Prisma.$estoquePayload>
/**
 * Model financeiro
 * 
 */
export type financeiro = $Result.DefaultSelection<Prisma.$financeiroPayload>
/**
 * Model compra
 * 
 */
export type compra = $Result.DefaultSelection<Prisma.$compraPayload>
/**
 * Model sala
 * 
 */
export type sala = $Result.DefaultSelection<Prisma.$salaPayload>
/**
 * Model movimentacao
 * 
 */
export type movimentacao = $Result.DefaultSelection<Prisma.$movimentacaoPayload>
/**
 * Model alerta
 * 
 */
export type alerta = $Result.DefaultSelection<Prisma.$alertaPayload>
/**
 * Model previsao_demanda
 * 
 */
export type previsao_demanda = $Result.DefaultSelection<Prisma.$previsao_demandaPayload>
/**
 * Model fornecedor
 * 
 */
export type fornecedor = $Result.DefaultSelection<Prisma.$fornecedorPayload>
/**
 * Model historico_previsao
 * 
 */
export type historico_previsao = $Result.DefaultSelection<Prisma.$historico_previsaoPayload>
/**
 * Model relatorio
 * 
 */
export type relatorio = $Result.DefaultSelection<Prisma.$relatorioPayload>
/**
 * Model garantia
 * 
 */
export type garantia = $Result.DefaultSelection<Prisma.$garantiaPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Usuarios
 * const usuarios = await prisma.usuario.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Usuarios
   * const usuarios = await prisma.usuario.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.usuario`: Exposes CRUD operations for the **usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.usuarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tipo_usuario`: Exposes CRUD operations for the **tipo_usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tipo_usuarios
    * const tipo_usuarios = await prisma.tipo_usuario.findMany()
    * ```
    */
  get tipo_usuario(): Prisma.tipo_usuarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.produto`: Exposes CRUD operations for the **produto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Produtos
    * const produtos = await prisma.produto.findMany()
    * ```
    */
  get produto(): Prisma.produtoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.estoque`: Exposes CRUD operations for the **estoque** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Estoques
    * const estoques = await prisma.estoque.findMany()
    * ```
    */
  get estoque(): Prisma.estoqueDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.financeiro`: Exposes CRUD operations for the **financeiro** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Financeiros
    * const financeiros = await prisma.financeiro.findMany()
    * ```
    */
  get financeiro(): Prisma.financeiroDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.compra`: Exposes CRUD operations for the **compra** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Compras
    * const compras = await prisma.compra.findMany()
    * ```
    */
  get compra(): Prisma.compraDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sala`: Exposes CRUD operations for the **sala** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Salas
    * const salas = await prisma.sala.findMany()
    * ```
    */
  get sala(): Prisma.salaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.movimentacao`: Exposes CRUD operations for the **movimentacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Movimentacaos
    * const movimentacaos = await prisma.movimentacao.findMany()
    * ```
    */
  get movimentacao(): Prisma.movimentacaoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.alerta`: Exposes CRUD operations for the **alerta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Alertas
    * const alertas = await prisma.alerta.findMany()
    * ```
    */
  get alerta(): Prisma.alertaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.previsao_demanda`: Exposes CRUD operations for the **previsao_demanda** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Previsao_demandas
    * const previsao_demandas = await prisma.previsao_demanda.findMany()
    * ```
    */
  get previsao_demanda(): Prisma.previsao_demandaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.fornecedor`: Exposes CRUD operations for the **fornecedor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Fornecedors
    * const fornecedors = await prisma.fornecedor.findMany()
    * ```
    */
  get fornecedor(): Prisma.fornecedorDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.historico_previsao`: Exposes CRUD operations for the **historico_previsao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Historico_previsaos
    * const historico_previsaos = await prisma.historico_previsao.findMany()
    * ```
    */
  get historico_previsao(): Prisma.historico_previsaoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.relatorio`: Exposes CRUD operations for the **relatorio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Relatorios
    * const relatorios = await prisma.relatorio.findMany()
    * ```
    */
  get relatorio(): Prisma.relatorioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.garantia`: Exposes CRUD operations for the **garantia** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Garantias
    * const garantias = await prisma.garantia.findMany()
    * ```
    */
  get garantia(): Prisma.garantiaDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.17.1
   * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    usuario: 'usuario',
    tipo_usuario: 'tipo_usuario',
    produto: 'produto',
    estoque: 'estoque',
    financeiro: 'financeiro',
    compra: 'compra',
    sala: 'sala',
    movimentacao: 'movimentacao',
    alerta: 'alerta',
    previsao_demanda: 'previsao_demanda',
    fornecedor: 'fornecedor',
    historico_previsao: 'historico_previsao',
    relatorio: 'relatorio',
    garantia: 'garantia'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "usuario" | "tipo_usuario" | "produto" | "estoque" | "financeiro" | "compra" | "sala" | "movimentacao" | "alerta" | "previsao_demanda" | "fornecedor" | "historico_previsao" | "relatorio" | "garantia"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      usuario: {
        payload: Prisma.$usuarioPayload<ExtArgs>
        fields: Prisma.usuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          findFirst: {
            args: Prisma.usuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          findMany: {
            args: Prisma.usuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>[]
          }
          create: {
            args: Prisma.usuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          createMany: {
            args: Prisma.usuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.usuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>[]
          }
          delete: {
            args: Prisma.usuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          update: {
            args: Prisma.usuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          deleteMany: {
            args: Prisma.usuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.usuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.usuarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>[]
          }
          upsert: {
            args: Prisma.usuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.usuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.usuarioCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
      tipo_usuario: {
        payload: Prisma.$tipo_usuarioPayload<ExtArgs>
        fields: Prisma.tipo_usuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tipo_usuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_usuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tipo_usuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_usuarioPayload>
          }
          findFirst: {
            args: Prisma.tipo_usuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_usuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tipo_usuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_usuarioPayload>
          }
          findMany: {
            args: Prisma.tipo_usuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_usuarioPayload>[]
          }
          create: {
            args: Prisma.tipo_usuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_usuarioPayload>
          }
          createMany: {
            args: Prisma.tipo_usuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.tipo_usuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_usuarioPayload>[]
          }
          delete: {
            args: Prisma.tipo_usuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_usuarioPayload>
          }
          update: {
            args: Prisma.tipo_usuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_usuarioPayload>
          }
          deleteMany: {
            args: Prisma.tipo_usuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tipo_usuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.tipo_usuarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_usuarioPayload>[]
          }
          upsert: {
            args: Prisma.tipo_usuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_usuarioPayload>
          }
          aggregate: {
            args: Prisma.Tipo_usuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTipo_usuario>
          }
          groupBy: {
            args: Prisma.tipo_usuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tipo_usuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.tipo_usuarioCountArgs<ExtArgs>
            result: $Utils.Optional<Tipo_usuarioCountAggregateOutputType> | number
          }
        }
      }
      produto: {
        payload: Prisma.$produtoPayload<ExtArgs>
        fields: Prisma.produtoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.produtoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produtoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.produtoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produtoPayload>
          }
          findFirst: {
            args: Prisma.produtoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produtoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.produtoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produtoPayload>
          }
          findMany: {
            args: Prisma.produtoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produtoPayload>[]
          }
          create: {
            args: Prisma.produtoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produtoPayload>
          }
          createMany: {
            args: Prisma.produtoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.produtoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produtoPayload>[]
          }
          delete: {
            args: Prisma.produtoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produtoPayload>
          }
          update: {
            args: Prisma.produtoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produtoPayload>
          }
          deleteMany: {
            args: Prisma.produtoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.produtoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.produtoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produtoPayload>[]
          }
          upsert: {
            args: Prisma.produtoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produtoPayload>
          }
          aggregate: {
            args: Prisma.ProdutoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProduto>
          }
          groupBy: {
            args: Prisma.produtoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProdutoGroupByOutputType>[]
          }
          count: {
            args: Prisma.produtoCountArgs<ExtArgs>
            result: $Utils.Optional<ProdutoCountAggregateOutputType> | number
          }
        }
      }
      estoque: {
        payload: Prisma.$estoquePayload<ExtArgs>
        fields: Prisma.estoqueFieldRefs
        operations: {
          findUnique: {
            args: Prisma.estoqueFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estoquePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.estoqueFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estoquePayload>
          }
          findFirst: {
            args: Prisma.estoqueFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estoquePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.estoqueFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estoquePayload>
          }
          findMany: {
            args: Prisma.estoqueFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estoquePayload>[]
          }
          create: {
            args: Prisma.estoqueCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estoquePayload>
          }
          createMany: {
            args: Prisma.estoqueCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.estoqueCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estoquePayload>[]
          }
          delete: {
            args: Prisma.estoqueDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estoquePayload>
          }
          update: {
            args: Prisma.estoqueUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estoquePayload>
          }
          deleteMany: {
            args: Prisma.estoqueDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.estoqueUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.estoqueUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estoquePayload>[]
          }
          upsert: {
            args: Prisma.estoqueUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estoquePayload>
          }
          aggregate: {
            args: Prisma.EstoqueAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEstoque>
          }
          groupBy: {
            args: Prisma.estoqueGroupByArgs<ExtArgs>
            result: $Utils.Optional<EstoqueGroupByOutputType>[]
          }
          count: {
            args: Prisma.estoqueCountArgs<ExtArgs>
            result: $Utils.Optional<EstoqueCountAggregateOutputType> | number
          }
        }
      }
      financeiro: {
        payload: Prisma.$financeiroPayload<ExtArgs>
        fields: Prisma.financeiroFieldRefs
        operations: {
          findUnique: {
            args: Prisma.financeiroFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$financeiroPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.financeiroFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$financeiroPayload>
          }
          findFirst: {
            args: Prisma.financeiroFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$financeiroPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.financeiroFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$financeiroPayload>
          }
          findMany: {
            args: Prisma.financeiroFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$financeiroPayload>[]
          }
          create: {
            args: Prisma.financeiroCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$financeiroPayload>
          }
          createMany: {
            args: Prisma.financeiroCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.financeiroCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$financeiroPayload>[]
          }
          delete: {
            args: Prisma.financeiroDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$financeiroPayload>
          }
          update: {
            args: Prisma.financeiroUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$financeiroPayload>
          }
          deleteMany: {
            args: Prisma.financeiroDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.financeiroUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.financeiroUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$financeiroPayload>[]
          }
          upsert: {
            args: Prisma.financeiroUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$financeiroPayload>
          }
          aggregate: {
            args: Prisma.FinanceiroAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFinanceiro>
          }
          groupBy: {
            args: Prisma.financeiroGroupByArgs<ExtArgs>
            result: $Utils.Optional<FinanceiroGroupByOutputType>[]
          }
          count: {
            args: Prisma.financeiroCountArgs<ExtArgs>
            result: $Utils.Optional<FinanceiroCountAggregateOutputType> | number
          }
        }
      }
      compra: {
        payload: Prisma.$compraPayload<ExtArgs>
        fields: Prisma.compraFieldRefs
        operations: {
          findUnique: {
            args: Prisma.compraFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compraPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.compraFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compraPayload>
          }
          findFirst: {
            args: Prisma.compraFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compraPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.compraFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compraPayload>
          }
          findMany: {
            args: Prisma.compraFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compraPayload>[]
          }
          create: {
            args: Prisma.compraCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compraPayload>
          }
          createMany: {
            args: Prisma.compraCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.compraCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compraPayload>[]
          }
          delete: {
            args: Prisma.compraDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compraPayload>
          }
          update: {
            args: Prisma.compraUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compraPayload>
          }
          deleteMany: {
            args: Prisma.compraDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.compraUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.compraUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compraPayload>[]
          }
          upsert: {
            args: Prisma.compraUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compraPayload>
          }
          aggregate: {
            args: Prisma.CompraAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCompra>
          }
          groupBy: {
            args: Prisma.compraGroupByArgs<ExtArgs>
            result: $Utils.Optional<CompraGroupByOutputType>[]
          }
          count: {
            args: Prisma.compraCountArgs<ExtArgs>
            result: $Utils.Optional<CompraCountAggregateOutputType> | number
          }
        }
      }
      sala: {
        payload: Prisma.$salaPayload<ExtArgs>
        fields: Prisma.salaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.salaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$salaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.salaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$salaPayload>
          }
          findFirst: {
            args: Prisma.salaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$salaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.salaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$salaPayload>
          }
          findMany: {
            args: Prisma.salaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$salaPayload>[]
          }
          create: {
            args: Prisma.salaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$salaPayload>
          }
          createMany: {
            args: Prisma.salaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.salaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$salaPayload>[]
          }
          delete: {
            args: Prisma.salaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$salaPayload>
          }
          update: {
            args: Prisma.salaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$salaPayload>
          }
          deleteMany: {
            args: Prisma.salaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.salaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.salaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$salaPayload>[]
          }
          upsert: {
            args: Prisma.salaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$salaPayload>
          }
          aggregate: {
            args: Prisma.SalaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSala>
          }
          groupBy: {
            args: Prisma.salaGroupByArgs<ExtArgs>
            result: $Utils.Optional<SalaGroupByOutputType>[]
          }
          count: {
            args: Prisma.salaCountArgs<ExtArgs>
            result: $Utils.Optional<SalaCountAggregateOutputType> | number
          }
        }
      }
      movimentacao: {
        payload: Prisma.$movimentacaoPayload<ExtArgs>
        fields: Prisma.movimentacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.movimentacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$movimentacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.movimentacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$movimentacaoPayload>
          }
          findFirst: {
            args: Prisma.movimentacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$movimentacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.movimentacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$movimentacaoPayload>
          }
          findMany: {
            args: Prisma.movimentacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$movimentacaoPayload>[]
          }
          create: {
            args: Prisma.movimentacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$movimentacaoPayload>
          }
          createMany: {
            args: Prisma.movimentacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.movimentacaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$movimentacaoPayload>[]
          }
          delete: {
            args: Prisma.movimentacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$movimentacaoPayload>
          }
          update: {
            args: Prisma.movimentacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$movimentacaoPayload>
          }
          deleteMany: {
            args: Prisma.movimentacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.movimentacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.movimentacaoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$movimentacaoPayload>[]
          }
          upsert: {
            args: Prisma.movimentacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$movimentacaoPayload>
          }
          aggregate: {
            args: Prisma.MovimentacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMovimentacao>
          }
          groupBy: {
            args: Prisma.movimentacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<MovimentacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.movimentacaoCountArgs<ExtArgs>
            result: $Utils.Optional<MovimentacaoCountAggregateOutputType> | number
          }
        }
      }
      alerta: {
        payload: Prisma.$alertaPayload<ExtArgs>
        fields: Prisma.alertaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.alertaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alertaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.alertaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alertaPayload>
          }
          findFirst: {
            args: Prisma.alertaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alertaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.alertaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alertaPayload>
          }
          findMany: {
            args: Prisma.alertaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alertaPayload>[]
          }
          create: {
            args: Prisma.alertaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alertaPayload>
          }
          createMany: {
            args: Prisma.alertaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.alertaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alertaPayload>[]
          }
          delete: {
            args: Prisma.alertaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alertaPayload>
          }
          update: {
            args: Prisma.alertaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alertaPayload>
          }
          deleteMany: {
            args: Prisma.alertaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.alertaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.alertaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alertaPayload>[]
          }
          upsert: {
            args: Prisma.alertaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alertaPayload>
          }
          aggregate: {
            args: Prisma.AlertaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAlerta>
          }
          groupBy: {
            args: Prisma.alertaGroupByArgs<ExtArgs>
            result: $Utils.Optional<AlertaGroupByOutputType>[]
          }
          count: {
            args: Prisma.alertaCountArgs<ExtArgs>
            result: $Utils.Optional<AlertaCountAggregateOutputType> | number
          }
        }
      }
      previsao_demanda: {
        payload: Prisma.$previsao_demandaPayload<ExtArgs>
        fields: Prisma.previsao_demandaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.previsao_demandaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$previsao_demandaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.previsao_demandaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$previsao_demandaPayload>
          }
          findFirst: {
            args: Prisma.previsao_demandaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$previsao_demandaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.previsao_demandaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$previsao_demandaPayload>
          }
          findMany: {
            args: Prisma.previsao_demandaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$previsao_demandaPayload>[]
          }
          create: {
            args: Prisma.previsao_demandaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$previsao_demandaPayload>
          }
          createMany: {
            args: Prisma.previsao_demandaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.previsao_demandaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$previsao_demandaPayload>[]
          }
          delete: {
            args: Prisma.previsao_demandaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$previsao_demandaPayload>
          }
          update: {
            args: Prisma.previsao_demandaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$previsao_demandaPayload>
          }
          deleteMany: {
            args: Prisma.previsao_demandaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.previsao_demandaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.previsao_demandaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$previsao_demandaPayload>[]
          }
          upsert: {
            args: Prisma.previsao_demandaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$previsao_demandaPayload>
          }
          aggregate: {
            args: Prisma.Previsao_demandaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePrevisao_demanda>
          }
          groupBy: {
            args: Prisma.previsao_demandaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Previsao_demandaGroupByOutputType>[]
          }
          count: {
            args: Prisma.previsao_demandaCountArgs<ExtArgs>
            result: $Utils.Optional<Previsao_demandaCountAggregateOutputType> | number
          }
        }
      }
      fornecedor: {
        payload: Prisma.$fornecedorPayload<ExtArgs>
        fields: Prisma.fornecedorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.fornecedorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fornecedorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.fornecedorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fornecedorPayload>
          }
          findFirst: {
            args: Prisma.fornecedorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fornecedorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.fornecedorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fornecedorPayload>
          }
          findMany: {
            args: Prisma.fornecedorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fornecedorPayload>[]
          }
          create: {
            args: Prisma.fornecedorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fornecedorPayload>
          }
          createMany: {
            args: Prisma.fornecedorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.fornecedorCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fornecedorPayload>[]
          }
          delete: {
            args: Prisma.fornecedorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fornecedorPayload>
          }
          update: {
            args: Prisma.fornecedorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fornecedorPayload>
          }
          deleteMany: {
            args: Prisma.fornecedorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.fornecedorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.fornecedorUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fornecedorPayload>[]
          }
          upsert: {
            args: Prisma.fornecedorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fornecedorPayload>
          }
          aggregate: {
            args: Prisma.FornecedorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFornecedor>
          }
          groupBy: {
            args: Prisma.fornecedorGroupByArgs<ExtArgs>
            result: $Utils.Optional<FornecedorGroupByOutputType>[]
          }
          count: {
            args: Prisma.fornecedorCountArgs<ExtArgs>
            result: $Utils.Optional<FornecedorCountAggregateOutputType> | number
          }
        }
      }
      historico_previsao: {
        payload: Prisma.$historico_previsaoPayload<ExtArgs>
        fields: Prisma.historico_previsaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.historico_previsaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historico_previsaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.historico_previsaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historico_previsaoPayload>
          }
          findFirst: {
            args: Prisma.historico_previsaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historico_previsaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.historico_previsaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historico_previsaoPayload>
          }
          findMany: {
            args: Prisma.historico_previsaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historico_previsaoPayload>[]
          }
          create: {
            args: Prisma.historico_previsaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historico_previsaoPayload>
          }
          createMany: {
            args: Prisma.historico_previsaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.historico_previsaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historico_previsaoPayload>[]
          }
          delete: {
            args: Prisma.historico_previsaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historico_previsaoPayload>
          }
          update: {
            args: Prisma.historico_previsaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historico_previsaoPayload>
          }
          deleteMany: {
            args: Prisma.historico_previsaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.historico_previsaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.historico_previsaoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historico_previsaoPayload>[]
          }
          upsert: {
            args: Prisma.historico_previsaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historico_previsaoPayload>
          }
          aggregate: {
            args: Prisma.Historico_previsaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHistorico_previsao>
          }
          groupBy: {
            args: Prisma.historico_previsaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Historico_previsaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.historico_previsaoCountArgs<ExtArgs>
            result: $Utils.Optional<Historico_previsaoCountAggregateOutputType> | number
          }
        }
      }
      relatorio: {
        payload: Prisma.$relatorioPayload<ExtArgs>
        fields: Prisma.relatorioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.relatorioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$relatorioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.relatorioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$relatorioPayload>
          }
          findFirst: {
            args: Prisma.relatorioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$relatorioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.relatorioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$relatorioPayload>
          }
          findMany: {
            args: Prisma.relatorioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$relatorioPayload>[]
          }
          create: {
            args: Prisma.relatorioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$relatorioPayload>
          }
          createMany: {
            args: Prisma.relatorioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.relatorioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$relatorioPayload>[]
          }
          delete: {
            args: Prisma.relatorioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$relatorioPayload>
          }
          update: {
            args: Prisma.relatorioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$relatorioPayload>
          }
          deleteMany: {
            args: Prisma.relatorioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.relatorioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.relatorioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$relatorioPayload>[]
          }
          upsert: {
            args: Prisma.relatorioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$relatorioPayload>
          }
          aggregate: {
            args: Prisma.RelatorioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRelatorio>
          }
          groupBy: {
            args: Prisma.relatorioGroupByArgs<ExtArgs>
            result: $Utils.Optional<RelatorioGroupByOutputType>[]
          }
          count: {
            args: Prisma.relatorioCountArgs<ExtArgs>
            result: $Utils.Optional<RelatorioCountAggregateOutputType> | number
          }
        }
      }
      garantia: {
        payload: Prisma.$garantiaPayload<ExtArgs>
        fields: Prisma.garantiaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.garantiaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$garantiaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.garantiaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$garantiaPayload>
          }
          findFirst: {
            args: Prisma.garantiaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$garantiaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.garantiaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$garantiaPayload>
          }
          findMany: {
            args: Prisma.garantiaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$garantiaPayload>[]
          }
          create: {
            args: Prisma.garantiaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$garantiaPayload>
          }
          createMany: {
            args: Prisma.garantiaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.garantiaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$garantiaPayload>[]
          }
          delete: {
            args: Prisma.garantiaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$garantiaPayload>
          }
          update: {
            args: Prisma.garantiaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$garantiaPayload>
          }
          deleteMany: {
            args: Prisma.garantiaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.garantiaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.garantiaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$garantiaPayload>[]
          }
          upsert: {
            args: Prisma.garantiaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$garantiaPayload>
          }
          aggregate: {
            args: Prisma.GarantiaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateGarantia>
          }
          groupBy: {
            args: Prisma.garantiaGroupByArgs<ExtArgs>
            result: $Utils.Optional<GarantiaGroupByOutputType>[]
          }
          count: {
            args: Prisma.garantiaCountArgs<ExtArgs>
            result: $Utils.Optional<GarantiaCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale`
     */
    adapter?: runtime.SqlDriverAdapterFactory | null
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    usuario?: usuarioOmit
    tipo_usuario?: tipo_usuarioOmit
    produto?: produtoOmit
    estoque?: estoqueOmit
    financeiro?: financeiroOmit
    compra?: compraOmit
    sala?: salaOmit
    movimentacao?: movimentacaoOmit
    alerta?: alertaOmit
    previsao_demanda?: previsao_demandaOmit
    fornecedor?: fornecedorOmit
    historico_previsao?: historico_previsaoOmit
    relatorio?: relatorioOmit
    garantia?: garantiaOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsuarioCountOutputType
   */

  export type UsuarioCountOutputType = {
    compras: number
    movimentacoes: number
    relatorios: number
    garantias: number
  }

  export type UsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    compras?: boolean | UsuarioCountOutputTypeCountComprasArgs
    movimentacoes?: boolean | UsuarioCountOutputTypeCountMovimentacoesArgs
    relatorios?: boolean | UsuarioCountOutputTypeCountRelatoriosArgs
    garantias?: boolean | UsuarioCountOutputTypeCountGarantiasArgs
  }

  // Custom InputTypes
  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioCountOutputType
     */
    select?: UsuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountComprasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: compraWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountMovimentacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: movimentacaoWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountRelatoriosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: relatorioWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountGarantiasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: garantiaWhereInput
  }


  /**
   * Count Type Tipo_usuarioCountOutputType
   */

  export type Tipo_usuarioCountOutputType = {
    usuarios: number
  }

  export type Tipo_usuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | Tipo_usuarioCountOutputTypeCountUsuariosArgs
  }

  // Custom InputTypes
  /**
   * Tipo_usuarioCountOutputType without action
   */
  export type Tipo_usuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_usuarioCountOutputType
     */
    select?: Tipo_usuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tipo_usuarioCountOutputType without action
   */
  export type Tipo_usuarioCountOutputTypeCountUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usuarioWhereInput
  }


  /**
   * Count Type ProdutoCountOutputType
   */

  export type ProdutoCountOutputType = {
    estoque: number
    compras: number
    alertas: number
    previsoes: number
    historicos: number
    movimentacoes: number
    garantias: number
  }

  export type ProdutoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estoque?: boolean | ProdutoCountOutputTypeCountEstoqueArgs
    compras?: boolean | ProdutoCountOutputTypeCountComprasArgs
    alertas?: boolean | ProdutoCountOutputTypeCountAlertasArgs
    previsoes?: boolean | ProdutoCountOutputTypeCountPrevisoesArgs
    historicos?: boolean | ProdutoCountOutputTypeCountHistoricosArgs
    movimentacoes?: boolean | ProdutoCountOutputTypeCountMovimentacoesArgs
    garantias?: boolean | ProdutoCountOutputTypeCountGarantiasArgs
  }

  // Custom InputTypes
  /**
   * ProdutoCountOutputType without action
   */
  export type ProdutoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProdutoCountOutputType
     */
    select?: ProdutoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProdutoCountOutputType without action
   */
  export type ProdutoCountOutputTypeCountEstoqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: estoqueWhereInput
  }

  /**
   * ProdutoCountOutputType without action
   */
  export type ProdutoCountOutputTypeCountComprasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: compraWhereInput
  }

  /**
   * ProdutoCountOutputType without action
   */
  export type ProdutoCountOutputTypeCountAlertasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: alertaWhereInput
  }

  /**
   * ProdutoCountOutputType without action
   */
  export type ProdutoCountOutputTypeCountPrevisoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: previsao_demandaWhereInput
  }

  /**
   * ProdutoCountOutputType without action
   */
  export type ProdutoCountOutputTypeCountHistoricosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: historico_previsaoWhereInput
  }

  /**
   * ProdutoCountOutputType without action
   */
  export type ProdutoCountOutputTypeCountMovimentacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: movimentacaoWhereInput
  }

  /**
   * ProdutoCountOutputType without action
   */
  export type ProdutoCountOutputTypeCountGarantiasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: garantiaWhereInput
  }


  /**
   * Count Type FinanceiroCountOutputType
   */

  export type FinanceiroCountOutputType = {
    compras: number
    historicos: number
  }

  export type FinanceiroCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    compras?: boolean | FinanceiroCountOutputTypeCountComprasArgs
    historicos?: boolean | FinanceiroCountOutputTypeCountHistoricosArgs
  }

  // Custom InputTypes
  /**
   * FinanceiroCountOutputType without action
   */
  export type FinanceiroCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinanceiroCountOutputType
     */
    select?: FinanceiroCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * FinanceiroCountOutputType without action
   */
  export type FinanceiroCountOutputTypeCountComprasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: compraWhereInput
  }

  /**
   * FinanceiroCountOutputType without action
   */
  export type FinanceiroCountOutputTypeCountHistoricosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: historico_previsaoWhereInput
  }


  /**
   * Count Type SalaCountOutputType
   */

  export type SalaCountOutputType = {
    estoques: number
  }

  export type SalaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estoques?: boolean | SalaCountOutputTypeCountEstoquesArgs
  }

  // Custom InputTypes
  /**
   * SalaCountOutputType without action
   */
  export type SalaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalaCountOutputType
     */
    select?: SalaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SalaCountOutputType without action
   */
  export type SalaCountOutputTypeCountEstoquesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: estoqueWhereInput
  }


  /**
   * Count Type Previsao_demandaCountOutputType
   */

  export type Previsao_demandaCountOutputType = {
    historicos: number
  }

  export type Previsao_demandaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    historicos?: boolean | Previsao_demandaCountOutputTypeCountHistoricosArgs
  }

  // Custom InputTypes
  /**
   * Previsao_demandaCountOutputType without action
   */
  export type Previsao_demandaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Previsao_demandaCountOutputType
     */
    select?: Previsao_demandaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Previsao_demandaCountOutputType without action
   */
  export type Previsao_demandaCountOutputTypeCountHistoricosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: historico_previsaoWhereInput
  }


  /**
   * Count Type FornecedorCountOutputType
   */

  export type FornecedorCountOutputType = {
    compras: number
    produtos: number
  }

  export type FornecedorCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    compras?: boolean | FornecedorCountOutputTypeCountComprasArgs
    produtos?: boolean | FornecedorCountOutputTypeCountProdutosArgs
  }

  // Custom InputTypes
  /**
   * FornecedorCountOutputType without action
   */
  export type FornecedorCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FornecedorCountOutputType
     */
    select?: FornecedorCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * FornecedorCountOutputType without action
   */
  export type FornecedorCountOutputTypeCountComprasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: compraWhereInput
  }

  /**
   * FornecedorCountOutputType without action
   */
  export type FornecedorCountOutputTypeCountProdutosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: produtoWhereInput
  }


  /**
   * Models
   */

  /**
   * Model usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioAvgAggregateOutputType = {
    id_usuario: number | null
    id_tipo_usuario: number | null
  }

  export type UsuarioSumAggregateOutputType = {
    id_usuario: number | null
    id_tipo_usuario: number | null
  }

  export type UsuarioMinAggregateOutputType = {
    id_usuario: number | null
    nome: string | null
    email: string | null
    senha_hash: string | null
    id_tipo_usuario: number | null
    ativo: boolean | null
    criado_em: Date | null
    CPF: string | null
  }

  export type UsuarioMaxAggregateOutputType = {
    id_usuario: number | null
    nome: string | null
    email: string | null
    senha_hash: string | null
    id_tipo_usuario: number | null
    ativo: boolean | null
    criado_em: Date | null
    CPF: string | null
  }

  export type UsuarioCountAggregateOutputType = {
    id_usuario: number
    nome: number
    email: number
    senha_hash: number
    id_tipo_usuario: number
    ativo: number
    criado_em: number
    CPF: number
    _all: number
  }


  export type UsuarioAvgAggregateInputType = {
    id_usuario?: true
    id_tipo_usuario?: true
  }

  export type UsuarioSumAggregateInputType = {
    id_usuario?: true
    id_tipo_usuario?: true
  }

  export type UsuarioMinAggregateInputType = {
    id_usuario?: true
    nome?: true
    email?: true
    senha_hash?: true
    id_tipo_usuario?: true
    ativo?: true
    criado_em?: true
    CPF?: true
  }

  export type UsuarioMaxAggregateInputType = {
    id_usuario?: true
    nome?: true
    email?: true
    senha_hash?: true
    id_tipo_usuario?: true
    ativo?: true
    criado_em?: true
    CPF?: true
  }

  export type UsuarioCountAggregateInputType = {
    id_usuario?: true
    nome?: true
    email?: true
    senha_hash?: true
    id_tipo_usuario?: true
    ativo?: true
    criado_em?: true
    CPF?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which usuario to aggregate.
     */
    where?: usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuarioOrderByWithRelationInput | usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type usuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usuarioWhereInput
    orderBy?: usuarioOrderByWithAggregationInput | usuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: usuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _avg?: UsuarioAvgAggregateInputType
    _sum?: UsuarioSumAggregateInputType
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    id_usuario: number
    nome: string
    email: string
    senha_hash: string
    id_tipo_usuario: number
    ativo: boolean
    criado_em: Date
    CPF: string | null
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends usuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type usuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_usuario?: boolean
    nome?: boolean
    email?: boolean
    senha_hash?: boolean
    id_tipo_usuario?: boolean
    ativo?: boolean
    criado_em?: boolean
    CPF?: boolean
    tipo_usuario?: boolean | tipo_usuarioDefaultArgs<ExtArgs>
    compras?: boolean | usuario$comprasArgs<ExtArgs>
    movimentacoes?: boolean | usuario$movimentacoesArgs<ExtArgs>
    relatorios?: boolean | usuario$relatoriosArgs<ExtArgs>
    garantias?: boolean | usuario$garantiasArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type usuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_usuario?: boolean
    nome?: boolean
    email?: boolean
    senha_hash?: boolean
    id_tipo_usuario?: boolean
    ativo?: boolean
    criado_em?: boolean
    CPF?: boolean
    tipo_usuario?: boolean | tipo_usuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type usuarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_usuario?: boolean
    nome?: boolean
    email?: boolean
    senha_hash?: boolean
    id_tipo_usuario?: boolean
    ativo?: boolean
    criado_em?: boolean
    CPF?: boolean
    tipo_usuario?: boolean | tipo_usuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type usuarioSelectScalar = {
    id_usuario?: boolean
    nome?: boolean
    email?: boolean
    senha_hash?: boolean
    id_tipo_usuario?: boolean
    ativo?: boolean
    criado_em?: boolean
    CPF?: boolean
  }

  export type usuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_usuario" | "nome" | "email" | "senha_hash" | "id_tipo_usuario" | "ativo" | "criado_em" | "CPF", ExtArgs["result"]["usuario"]>
  export type usuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tipo_usuario?: boolean | tipo_usuarioDefaultArgs<ExtArgs>
    compras?: boolean | usuario$comprasArgs<ExtArgs>
    movimentacoes?: boolean | usuario$movimentacoesArgs<ExtArgs>
    relatorios?: boolean | usuario$relatoriosArgs<ExtArgs>
    garantias?: boolean | usuario$garantiasArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type usuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tipo_usuario?: boolean | tipo_usuarioDefaultArgs<ExtArgs>
  }
  export type usuarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tipo_usuario?: boolean | tipo_usuarioDefaultArgs<ExtArgs>
  }

  export type $usuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "usuario"
    objects: {
      tipo_usuario: Prisma.$tipo_usuarioPayload<ExtArgs>
      compras: Prisma.$compraPayload<ExtArgs>[]
      movimentacoes: Prisma.$movimentacaoPayload<ExtArgs>[]
      relatorios: Prisma.$relatorioPayload<ExtArgs>[]
      garantias: Prisma.$garantiaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_usuario: number
      nome: string
      email: string
      senha_hash: string
      id_tipo_usuario: number
      ativo: boolean
      criado_em: Date
      CPF: string | null
    }, ExtArgs["result"]["usuario"]>
    composites: {}
  }

  type usuarioGetPayload<S extends boolean | null | undefined | usuarioDefaultArgs> = $Result.GetResult<Prisma.$usuarioPayload, S>

  type usuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<usuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface usuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['usuario'], meta: { name: 'usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {usuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends usuarioFindUniqueArgs>(args: SelectSubset<T, usuarioFindUniqueArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Usuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {usuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends usuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, usuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends usuarioFindFirstArgs>(args?: SelectSubset<T, usuarioFindFirstArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends usuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, usuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `id_usuario`
     * const usuarioWithId_usuarioOnly = await prisma.usuario.findMany({ select: { id_usuario: true } })
     * 
     */
    findMany<T extends usuarioFindManyArgs>(args?: SelectSubset<T, usuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Usuario.
     * @param {usuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
     */
    create<T extends usuarioCreateArgs>(args: SelectSubset<T, usuarioCreateArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Usuarios.
     * @param {usuarioCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends usuarioCreateManyArgs>(args?: SelectSubset<T, usuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {usuarioCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `id_usuario`
     * const usuarioWithId_usuarioOnly = await prisma.usuario.createManyAndReturn({
     *   select: { id_usuario: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends usuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, usuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Usuario.
     * @param {usuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
     */
    delete<T extends usuarioDeleteArgs>(args: SelectSubset<T, usuarioDeleteArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Usuario.
     * @param {usuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends usuarioUpdateArgs>(args: SelectSubset<T, usuarioUpdateArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Usuarios.
     * @param {usuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends usuarioDeleteManyArgs>(args?: SelectSubset<T, usuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends usuarioUpdateManyArgs>(args: SelectSubset<T, usuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios and returns the data updated in the database.
     * @param {usuarioUpdateManyAndReturnArgs} args - Arguments to update many Usuarios.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Usuarios and only return the `id_usuario`
     * const usuarioWithId_usuarioOnly = await prisma.usuario.updateManyAndReturn({
     *   select: { id_usuario: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends usuarioUpdateManyAndReturnArgs>(args: SelectSubset<T, usuarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Usuario.
     * @param {usuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
     */
    upsert<T extends usuarioUpsertArgs>(args: SelectSubset<T, usuarioUpsertArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends usuarioCountArgs>(
      args?: Subset<T, usuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usuarioGroupByArgs['orderBy'] }
        : { orderBy?: usuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the usuario model
   */
  readonly fields: usuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tipo_usuario<T extends tipo_usuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tipo_usuarioDefaultArgs<ExtArgs>>): Prisma__tipo_usuarioClient<$Result.GetResult<Prisma.$tipo_usuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    compras<T extends usuario$comprasArgs<ExtArgs> = {}>(args?: Subset<T, usuario$comprasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$compraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    movimentacoes<T extends usuario$movimentacoesArgs<ExtArgs> = {}>(args?: Subset<T, usuario$movimentacoesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$movimentacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    relatorios<T extends usuario$relatoriosArgs<ExtArgs> = {}>(args?: Subset<T, usuario$relatoriosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$relatorioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    garantias<T extends usuario$garantiasArgs<ExtArgs> = {}>(args?: Subset<T, usuario$garantiasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$garantiaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the usuario model
   */
  interface usuarioFieldRefs {
    readonly id_usuario: FieldRef<"usuario", 'Int'>
    readonly nome: FieldRef<"usuario", 'String'>
    readonly email: FieldRef<"usuario", 'String'>
    readonly senha_hash: FieldRef<"usuario", 'String'>
    readonly id_tipo_usuario: FieldRef<"usuario", 'Int'>
    readonly ativo: FieldRef<"usuario", 'Boolean'>
    readonly criado_em: FieldRef<"usuario", 'DateTime'>
    readonly CPF: FieldRef<"usuario", 'String'>
  }
    

  // Custom InputTypes
  /**
   * usuario findUnique
   */
  export type usuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * Filter, which usuario to fetch.
     */
    where: usuarioWhereUniqueInput
  }

  /**
   * usuario findUniqueOrThrow
   */
  export type usuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * Filter, which usuario to fetch.
     */
    where: usuarioWhereUniqueInput
  }

  /**
   * usuario findFirst
   */
  export type usuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * Filter, which usuario to fetch.
     */
    where?: usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuarioOrderByWithRelationInput | usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for usuarios.
     */
    cursor?: usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * usuario findFirstOrThrow
   */
  export type usuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * Filter, which usuario to fetch.
     */
    where?: usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuarioOrderByWithRelationInput | usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for usuarios.
     */
    cursor?: usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * usuario findMany
   */
  export type usuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where?: usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuarioOrderByWithRelationInput | usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing usuarios.
     */
    cursor?: usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * usuario create
   */
  export type usuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a usuario.
     */
    data: XOR<usuarioCreateInput, usuarioUncheckedCreateInput>
  }

  /**
   * usuario createMany
   */
  export type usuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many usuarios.
     */
    data: usuarioCreateManyInput | usuarioCreateManyInput[]
  }

  /**
   * usuario createManyAndReturn
   */
  export type usuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * The data used to create many usuarios.
     */
    data: usuarioCreateManyInput | usuarioCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * usuario update
   */
  export type usuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a usuario.
     */
    data: XOR<usuarioUpdateInput, usuarioUncheckedUpdateInput>
    /**
     * Choose, which usuario to update.
     */
    where: usuarioWhereUniqueInput
  }

  /**
   * usuario updateMany
   */
  export type usuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update usuarios.
     */
    data: XOR<usuarioUpdateManyMutationInput, usuarioUncheckedUpdateManyInput>
    /**
     * Filter which usuarios to update
     */
    where?: usuarioWhereInput
    /**
     * Limit how many usuarios to update.
     */
    limit?: number
  }

  /**
   * usuario updateManyAndReturn
   */
  export type usuarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * The data used to update usuarios.
     */
    data: XOR<usuarioUpdateManyMutationInput, usuarioUncheckedUpdateManyInput>
    /**
     * Filter which usuarios to update
     */
    where?: usuarioWhereInput
    /**
     * Limit how many usuarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * usuario upsert
   */
  export type usuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the usuario to update in case it exists.
     */
    where: usuarioWhereUniqueInput
    /**
     * In case the usuario found by the `where` argument doesn't exist, create a new usuario with this data.
     */
    create: XOR<usuarioCreateInput, usuarioUncheckedCreateInput>
    /**
     * In case the usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usuarioUpdateInput, usuarioUncheckedUpdateInput>
  }

  /**
   * usuario delete
   */
  export type usuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * Filter which usuario to delete.
     */
    where: usuarioWhereUniqueInput
  }

  /**
   * usuario deleteMany
   */
  export type usuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which usuarios to delete
     */
    where?: usuarioWhereInput
    /**
     * Limit how many usuarios to delete.
     */
    limit?: number
  }

  /**
   * usuario.compras
   */
  export type usuario$comprasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compra
     */
    select?: compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compra
     */
    omit?: compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compraInclude<ExtArgs> | null
    where?: compraWhereInput
    orderBy?: compraOrderByWithRelationInput | compraOrderByWithRelationInput[]
    cursor?: compraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CompraScalarFieldEnum | CompraScalarFieldEnum[]
  }

  /**
   * usuario.movimentacoes
   */
  export type usuario$movimentacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the movimentacao
     */
    select?: movimentacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the movimentacao
     */
    omit?: movimentacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: movimentacaoInclude<ExtArgs> | null
    where?: movimentacaoWhereInput
    orderBy?: movimentacaoOrderByWithRelationInput | movimentacaoOrderByWithRelationInput[]
    cursor?: movimentacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MovimentacaoScalarFieldEnum | MovimentacaoScalarFieldEnum[]
  }

  /**
   * usuario.relatorios
   */
  export type usuario$relatoriosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the relatorio
     */
    select?: relatorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the relatorio
     */
    omit?: relatorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: relatorioInclude<ExtArgs> | null
    where?: relatorioWhereInput
    orderBy?: relatorioOrderByWithRelationInput | relatorioOrderByWithRelationInput[]
    cursor?: relatorioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RelatorioScalarFieldEnum | RelatorioScalarFieldEnum[]
  }

  /**
   * usuario.garantias
   */
  export type usuario$garantiasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the garantia
     */
    select?: garantiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the garantia
     */
    omit?: garantiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: garantiaInclude<ExtArgs> | null
    where?: garantiaWhereInput
    orderBy?: garantiaOrderByWithRelationInput | garantiaOrderByWithRelationInput[]
    cursor?: garantiaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GarantiaScalarFieldEnum | GarantiaScalarFieldEnum[]
  }

  /**
   * usuario without action
   */
  export type usuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
  }


  /**
   * Model tipo_usuario
   */

  export type AggregateTipo_usuario = {
    _count: Tipo_usuarioCountAggregateOutputType | null
    _avg: Tipo_usuarioAvgAggregateOutputType | null
    _sum: Tipo_usuarioSumAggregateOutputType | null
    _min: Tipo_usuarioMinAggregateOutputType | null
    _max: Tipo_usuarioMaxAggregateOutputType | null
  }

  export type Tipo_usuarioAvgAggregateOutputType = {
    id_tipo_usuario: number | null
  }

  export type Tipo_usuarioSumAggregateOutputType = {
    id_tipo_usuario: number | null
  }

  export type Tipo_usuarioMinAggregateOutputType = {
    id_tipo_usuario: number | null
    descricao: string | null
  }

  export type Tipo_usuarioMaxAggregateOutputType = {
    id_tipo_usuario: number | null
    descricao: string | null
  }

  export type Tipo_usuarioCountAggregateOutputType = {
    id_tipo_usuario: number
    descricao: number
    _all: number
  }


  export type Tipo_usuarioAvgAggregateInputType = {
    id_tipo_usuario?: true
  }

  export type Tipo_usuarioSumAggregateInputType = {
    id_tipo_usuario?: true
  }

  export type Tipo_usuarioMinAggregateInputType = {
    id_tipo_usuario?: true
    descricao?: true
  }

  export type Tipo_usuarioMaxAggregateInputType = {
    id_tipo_usuario?: true
    descricao?: true
  }

  export type Tipo_usuarioCountAggregateInputType = {
    id_tipo_usuario?: true
    descricao?: true
    _all?: true
  }

  export type Tipo_usuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tipo_usuario to aggregate.
     */
    where?: tipo_usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipo_usuarios to fetch.
     */
    orderBy?: tipo_usuarioOrderByWithRelationInput | tipo_usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tipo_usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipo_usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipo_usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tipo_usuarios
    **/
    _count?: true | Tipo_usuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tipo_usuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tipo_usuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tipo_usuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tipo_usuarioMaxAggregateInputType
  }

  export type GetTipo_usuarioAggregateType<T extends Tipo_usuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateTipo_usuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipo_usuario[P]>
      : GetScalarType<T[P], AggregateTipo_usuario[P]>
  }




  export type tipo_usuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tipo_usuarioWhereInput
    orderBy?: tipo_usuarioOrderByWithAggregationInput | tipo_usuarioOrderByWithAggregationInput[]
    by: Tipo_usuarioScalarFieldEnum[] | Tipo_usuarioScalarFieldEnum
    having?: tipo_usuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tipo_usuarioCountAggregateInputType | true
    _avg?: Tipo_usuarioAvgAggregateInputType
    _sum?: Tipo_usuarioSumAggregateInputType
    _min?: Tipo_usuarioMinAggregateInputType
    _max?: Tipo_usuarioMaxAggregateInputType
  }

  export type Tipo_usuarioGroupByOutputType = {
    id_tipo_usuario: number
    descricao: string
    _count: Tipo_usuarioCountAggregateOutputType | null
    _avg: Tipo_usuarioAvgAggregateOutputType | null
    _sum: Tipo_usuarioSumAggregateOutputType | null
    _min: Tipo_usuarioMinAggregateOutputType | null
    _max: Tipo_usuarioMaxAggregateOutputType | null
  }

  type GetTipo_usuarioGroupByPayload<T extends tipo_usuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tipo_usuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tipo_usuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tipo_usuarioGroupByOutputType[P]>
            : GetScalarType<T[P], Tipo_usuarioGroupByOutputType[P]>
        }
      >
    >


  export type tipo_usuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_tipo_usuario?: boolean
    descricao?: boolean
    usuarios?: boolean | tipo_usuario$usuariosArgs<ExtArgs>
    _count?: boolean | Tipo_usuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tipo_usuario"]>

  export type tipo_usuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_tipo_usuario?: boolean
    descricao?: boolean
  }, ExtArgs["result"]["tipo_usuario"]>

  export type tipo_usuarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_tipo_usuario?: boolean
    descricao?: boolean
  }, ExtArgs["result"]["tipo_usuario"]>

  export type tipo_usuarioSelectScalar = {
    id_tipo_usuario?: boolean
    descricao?: boolean
  }

  export type tipo_usuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_tipo_usuario" | "descricao", ExtArgs["result"]["tipo_usuario"]>
  export type tipo_usuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | tipo_usuario$usuariosArgs<ExtArgs>
    _count?: boolean | Tipo_usuarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type tipo_usuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type tipo_usuarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $tipo_usuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tipo_usuario"
    objects: {
      usuarios: Prisma.$usuarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_tipo_usuario: number
      descricao: string
    }, ExtArgs["result"]["tipo_usuario"]>
    composites: {}
  }

  type tipo_usuarioGetPayload<S extends boolean | null | undefined | tipo_usuarioDefaultArgs> = $Result.GetResult<Prisma.$tipo_usuarioPayload, S>

  type tipo_usuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tipo_usuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Tipo_usuarioCountAggregateInputType | true
    }

  export interface tipo_usuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tipo_usuario'], meta: { name: 'tipo_usuario' } }
    /**
     * Find zero or one Tipo_usuario that matches the filter.
     * @param {tipo_usuarioFindUniqueArgs} args - Arguments to find a Tipo_usuario
     * @example
     * // Get one Tipo_usuario
     * const tipo_usuario = await prisma.tipo_usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tipo_usuarioFindUniqueArgs>(args: SelectSubset<T, tipo_usuarioFindUniqueArgs<ExtArgs>>): Prisma__tipo_usuarioClient<$Result.GetResult<Prisma.$tipo_usuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tipo_usuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tipo_usuarioFindUniqueOrThrowArgs} args - Arguments to find a Tipo_usuario
     * @example
     * // Get one Tipo_usuario
     * const tipo_usuario = await prisma.tipo_usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tipo_usuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, tipo_usuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tipo_usuarioClient<$Result.GetResult<Prisma.$tipo_usuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tipo_usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_usuarioFindFirstArgs} args - Arguments to find a Tipo_usuario
     * @example
     * // Get one Tipo_usuario
     * const tipo_usuario = await prisma.tipo_usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tipo_usuarioFindFirstArgs>(args?: SelectSubset<T, tipo_usuarioFindFirstArgs<ExtArgs>>): Prisma__tipo_usuarioClient<$Result.GetResult<Prisma.$tipo_usuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tipo_usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_usuarioFindFirstOrThrowArgs} args - Arguments to find a Tipo_usuario
     * @example
     * // Get one Tipo_usuario
     * const tipo_usuario = await prisma.tipo_usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tipo_usuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, tipo_usuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__tipo_usuarioClient<$Result.GetResult<Prisma.$tipo_usuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tipo_usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_usuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tipo_usuarios
     * const tipo_usuarios = await prisma.tipo_usuario.findMany()
     * 
     * // Get first 10 Tipo_usuarios
     * const tipo_usuarios = await prisma.tipo_usuario.findMany({ take: 10 })
     * 
     * // Only select the `id_tipo_usuario`
     * const tipo_usuarioWithId_tipo_usuarioOnly = await prisma.tipo_usuario.findMany({ select: { id_tipo_usuario: true } })
     * 
     */
    findMany<T extends tipo_usuarioFindManyArgs>(args?: SelectSubset<T, tipo_usuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipo_usuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tipo_usuario.
     * @param {tipo_usuarioCreateArgs} args - Arguments to create a Tipo_usuario.
     * @example
     * // Create one Tipo_usuario
     * const Tipo_usuario = await prisma.tipo_usuario.create({
     *   data: {
     *     // ... data to create a Tipo_usuario
     *   }
     * })
     * 
     */
    create<T extends tipo_usuarioCreateArgs>(args: SelectSubset<T, tipo_usuarioCreateArgs<ExtArgs>>): Prisma__tipo_usuarioClient<$Result.GetResult<Prisma.$tipo_usuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tipo_usuarios.
     * @param {tipo_usuarioCreateManyArgs} args - Arguments to create many Tipo_usuarios.
     * @example
     * // Create many Tipo_usuarios
     * const tipo_usuario = await prisma.tipo_usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tipo_usuarioCreateManyArgs>(args?: SelectSubset<T, tipo_usuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tipo_usuarios and returns the data saved in the database.
     * @param {tipo_usuarioCreateManyAndReturnArgs} args - Arguments to create many Tipo_usuarios.
     * @example
     * // Create many Tipo_usuarios
     * const tipo_usuario = await prisma.tipo_usuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tipo_usuarios and only return the `id_tipo_usuario`
     * const tipo_usuarioWithId_tipo_usuarioOnly = await prisma.tipo_usuario.createManyAndReturn({
     *   select: { id_tipo_usuario: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends tipo_usuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, tipo_usuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipo_usuarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Tipo_usuario.
     * @param {tipo_usuarioDeleteArgs} args - Arguments to delete one Tipo_usuario.
     * @example
     * // Delete one Tipo_usuario
     * const Tipo_usuario = await prisma.tipo_usuario.delete({
     *   where: {
     *     // ... filter to delete one Tipo_usuario
     *   }
     * })
     * 
     */
    delete<T extends tipo_usuarioDeleteArgs>(args: SelectSubset<T, tipo_usuarioDeleteArgs<ExtArgs>>): Prisma__tipo_usuarioClient<$Result.GetResult<Prisma.$tipo_usuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tipo_usuario.
     * @param {tipo_usuarioUpdateArgs} args - Arguments to update one Tipo_usuario.
     * @example
     * // Update one Tipo_usuario
     * const tipo_usuario = await prisma.tipo_usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tipo_usuarioUpdateArgs>(args: SelectSubset<T, tipo_usuarioUpdateArgs<ExtArgs>>): Prisma__tipo_usuarioClient<$Result.GetResult<Prisma.$tipo_usuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tipo_usuarios.
     * @param {tipo_usuarioDeleteManyArgs} args - Arguments to filter Tipo_usuarios to delete.
     * @example
     * // Delete a few Tipo_usuarios
     * const { count } = await prisma.tipo_usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tipo_usuarioDeleteManyArgs>(args?: SelectSubset<T, tipo_usuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tipo_usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_usuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tipo_usuarios
     * const tipo_usuario = await prisma.tipo_usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tipo_usuarioUpdateManyArgs>(args: SelectSubset<T, tipo_usuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tipo_usuarios and returns the data updated in the database.
     * @param {tipo_usuarioUpdateManyAndReturnArgs} args - Arguments to update many Tipo_usuarios.
     * @example
     * // Update many Tipo_usuarios
     * const tipo_usuario = await prisma.tipo_usuario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Tipo_usuarios and only return the `id_tipo_usuario`
     * const tipo_usuarioWithId_tipo_usuarioOnly = await prisma.tipo_usuario.updateManyAndReturn({
     *   select: { id_tipo_usuario: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends tipo_usuarioUpdateManyAndReturnArgs>(args: SelectSubset<T, tipo_usuarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipo_usuarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Tipo_usuario.
     * @param {tipo_usuarioUpsertArgs} args - Arguments to update or create a Tipo_usuario.
     * @example
     * // Update or create a Tipo_usuario
     * const tipo_usuario = await prisma.tipo_usuario.upsert({
     *   create: {
     *     // ... data to create a Tipo_usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tipo_usuario we want to update
     *   }
     * })
     */
    upsert<T extends tipo_usuarioUpsertArgs>(args: SelectSubset<T, tipo_usuarioUpsertArgs<ExtArgs>>): Prisma__tipo_usuarioClient<$Result.GetResult<Prisma.$tipo_usuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tipo_usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_usuarioCountArgs} args - Arguments to filter Tipo_usuarios to count.
     * @example
     * // Count the number of Tipo_usuarios
     * const count = await prisma.tipo_usuario.count({
     *   where: {
     *     // ... the filter for the Tipo_usuarios we want to count
     *   }
     * })
    **/
    count<T extends tipo_usuarioCountArgs>(
      args?: Subset<T, tipo_usuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tipo_usuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tipo_usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tipo_usuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tipo_usuarioAggregateArgs>(args: Subset<T, Tipo_usuarioAggregateArgs>): Prisma.PrismaPromise<GetTipo_usuarioAggregateType<T>>

    /**
     * Group by Tipo_usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_usuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tipo_usuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tipo_usuarioGroupByArgs['orderBy'] }
        : { orderBy?: tipo_usuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tipo_usuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipo_usuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tipo_usuario model
   */
  readonly fields: tipo_usuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tipo_usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tipo_usuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuarios<T extends tipo_usuario$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, tipo_usuario$usuariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tipo_usuario model
   */
  interface tipo_usuarioFieldRefs {
    readonly id_tipo_usuario: FieldRef<"tipo_usuario", 'Int'>
    readonly descricao: FieldRef<"tipo_usuario", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tipo_usuario findUnique
   */
  export type tipo_usuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_usuario
     */
    select?: tipo_usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_usuario
     */
    omit?: tipo_usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_usuarioInclude<ExtArgs> | null
    /**
     * Filter, which tipo_usuario to fetch.
     */
    where: tipo_usuarioWhereUniqueInput
  }

  /**
   * tipo_usuario findUniqueOrThrow
   */
  export type tipo_usuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_usuario
     */
    select?: tipo_usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_usuario
     */
    omit?: tipo_usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_usuarioInclude<ExtArgs> | null
    /**
     * Filter, which tipo_usuario to fetch.
     */
    where: tipo_usuarioWhereUniqueInput
  }

  /**
   * tipo_usuario findFirst
   */
  export type tipo_usuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_usuario
     */
    select?: tipo_usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_usuario
     */
    omit?: tipo_usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_usuarioInclude<ExtArgs> | null
    /**
     * Filter, which tipo_usuario to fetch.
     */
    where?: tipo_usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipo_usuarios to fetch.
     */
    orderBy?: tipo_usuarioOrderByWithRelationInput | tipo_usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipo_usuarios.
     */
    cursor?: tipo_usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipo_usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipo_usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipo_usuarios.
     */
    distinct?: Tipo_usuarioScalarFieldEnum | Tipo_usuarioScalarFieldEnum[]
  }

  /**
   * tipo_usuario findFirstOrThrow
   */
  export type tipo_usuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_usuario
     */
    select?: tipo_usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_usuario
     */
    omit?: tipo_usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_usuarioInclude<ExtArgs> | null
    /**
     * Filter, which tipo_usuario to fetch.
     */
    where?: tipo_usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipo_usuarios to fetch.
     */
    orderBy?: tipo_usuarioOrderByWithRelationInput | tipo_usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipo_usuarios.
     */
    cursor?: tipo_usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipo_usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipo_usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipo_usuarios.
     */
    distinct?: Tipo_usuarioScalarFieldEnum | Tipo_usuarioScalarFieldEnum[]
  }

  /**
   * tipo_usuario findMany
   */
  export type tipo_usuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_usuario
     */
    select?: tipo_usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_usuario
     */
    omit?: tipo_usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_usuarioInclude<ExtArgs> | null
    /**
     * Filter, which tipo_usuarios to fetch.
     */
    where?: tipo_usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipo_usuarios to fetch.
     */
    orderBy?: tipo_usuarioOrderByWithRelationInput | tipo_usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tipo_usuarios.
     */
    cursor?: tipo_usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipo_usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipo_usuarios.
     */
    skip?: number
    distinct?: Tipo_usuarioScalarFieldEnum | Tipo_usuarioScalarFieldEnum[]
  }

  /**
   * tipo_usuario create
   */
  export type tipo_usuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_usuario
     */
    select?: tipo_usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_usuario
     */
    omit?: tipo_usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_usuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a tipo_usuario.
     */
    data: XOR<tipo_usuarioCreateInput, tipo_usuarioUncheckedCreateInput>
  }

  /**
   * tipo_usuario createMany
   */
  export type tipo_usuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tipo_usuarios.
     */
    data: tipo_usuarioCreateManyInput | tipo_usuarioCreateManyInput[]
  }

  /**
   * tipo_usuario createManyAndReturn
   */
  export type tipo_usuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_usuario
     */
    select?: tipo_usuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_usuario
     */
    omit?: tipo_usuarioOmit<ExtArgs> | null
    /**
     * The data used to create many tipo_usuarios.
     */
    data: tipo_usuarioCreateManyInput | tipo_usuarioCreateManyInput[]
  }

  /**
   * tipo_usuario update
   */
  export type tipo_usuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_usuario
     */
    select?: tipo_usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_usuario
     */
    omit?: tipo_usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_usuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a tipo_usuario.
     */
    data: XOR<tipo_usuarioUpdateInput, tipo_usuarioUncheckedUpdateInput>
    /**
     * Choose, which tipo_usuario to update.
     */
    where: tipo_usuarioWhereUniqueInput
  }

  /**
   * tipo_usuario updateMany
   */
  export type tipo_usuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tipo_usuarios.
     */
    data: XOR<tipo_usuarioUpdateManyMutationInput, tipo_usuarioUncheckedUpdateManyInput>
    /**
     * Filter which tipo_usuarios to update
     */
    where?: tipo_usuarioWhereInput
    /**
     * Limit how many tipo_usuarios to update.
     */
    limit?: number
  }

  /**
   * tipo_usuario updateManyAndReturn
   */
  export type tipo_usuarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_usuario
     */
    select?: tipo_usuarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_usuario
     */
    omit?: tipo_usuarioOmit<ExtArgs> | null
    /**
     * The data used to update tipo_usuarios.
     */
    data: XOR<tipo_usuarioUpdateManyMutationInput, tipo_usuarioUncheckedUpdateManyInput>
    /**
     * Filter which tipo_usuarios to update
     */
    where?: tipo_usuarioWhereInput
    /**
     * Limit how many tipo_usuarios to update.
     */
    limit?: number
  }

  /**
   * tipo_usuario upsert
   */
  export type tipo_usuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_usuario
     */
    select?: tipo_usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_usuario
     */
    omit?: tipo_usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_usuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the tipo_usuario to update in case it exists.
     */
    where: tipo_usuarioWhereUniqueInput
    /**
     * In case the tipo_usuario found by the `where` argument doesn't exist, create a new tipo_usuario with this data.
     */
    create: XOR<tipo_usuarioCreateInput, tipo_usuarioUncheckedCreateInput>
    /**
     * In case the tipo_usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tipo_usuarioUpdateInput, tipo_usuarioUncheckedUpdateInput>
  }

  /**
   * tipo_usuario delete
   */
  export type tipo_usuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_usuario
     */
    select?: tipo_usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_usuario
     */
    omit?: tipo_usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_usuarioInclude<ExtArgs> | null
    /**
     * Filter which tipo_usuario to delete.
     */
    where: tipo_usuarioWhereUniqueInput
  }

  /**
   * tipo_usuario deleteMany
   */
  export type tipo_usuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tipo_usuarios to delete
     */
    where?: tipo_usuarioWhereInput
    /**
     * Limit how many tipo_usuarios to delete.
     */
    limit?: number
  }

  /**
   * tipo_usuario.usuarios
   */
  export type tipo_usuario$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    where?: usuarioWhereInput
    orderBy?: usuarioOrderByWithRelationInput | usuarioOrderByWithRelationInput[]
    cursor?: usuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * tipo_usuario without action
   */
  export type tipo_usuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_usuario
     */
    select?: tipo_usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_usuario
     */
    omit?: tipo_usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_usuarioInclude<ExtArgs> | null
  }


  /**
   * Model produto
   */

  export type AggregateProduto = {
    _count: ProdutoCountAggregateOutputType | null
    _avg: ProdutoAvgAggregateOutputType | null
    _sum: ProdutoSumAggregateOutputType | null
    _min: ProdutoMinAggregateOutputType | null
    _max: ProdutoMaxAggregateOutputType | null
  }

  export type ProdutoAvgAggregateOutputType = {
    id_produto: number | null
    preco_unitario: number | null
    id_fornecedor: number | null
  }

  export type ProdutoSumAggregateOutputType = {
    id_produto: number | null
    preco_unitario: number | null
    id_fornecedor: number | null
  }

  export type ProdutoMinAggregateOutputType = {
    id_produto: number | null
    nome: string | null
    descricao: string | null
    categoria: string | null
    codigo_publico: string | null
    preco_unitario: number | null
    unidade_medida: string | null
    id_fornecedor: number | null
  }

  export type ProdutoMaxAggregateOutputType = {
    id_produto: number | null
    nome: string | null
    descricao: string | null
    categoria: string | null
    codigo_publico: string | null
    preco_unitario: number | null
    unidade_medida: string | null
    id_fornecedor: number | null
  }

  export type ProdutoCountAggregateOutputType = {
    id_produto: number
    nome: number
    descricao: number
    categoria: number
    codigo_publico: number
    preco_unitario: number
    unidade_medida: number
    id_fornecedor: number
    _all: number
  }


  export type ProdutoAvgAggregateInputType = {
    id_produto?: true
    preco_unitario?: true
    id_fornecedor?: true
  }

  export type ProdutoSumAggregateInputType = {
    id_produto?: true
    preco_unitario?: true
    id_fornecedor?: true
  }

  export type ProdutoMinAggregateInputType = {
    id_produto?: true
    nome?: true
    descricao?: true
    categoria?: true
    codigo_publico?: true
    preco_unitario?: true
    unidade_medida?: true
    id_fornecedor?: true
  }

  export type ProdutoMaxAggregateInputType = {
    id_produto?: true
    nome?: true
    descricao?: true
    categoria?: true
    codigo_publico?: true
    preco_unitario?: true
    unidade_medida?: true
    id_fornecedor?: true
  }

  export type ProdutoCountAggregateInputType = {
    id_produto?: true
    nome?: true
    descricao?: true
    categoria?: true
    codigo_publico?: true
    preco_unitario?: true
    unidade_medida?: true
    id_fornecedor?: true
    _all?: true
  }

  export type ProdutoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which produto to aggregate.
     */
    where?: produtoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of produtos to fetch.
     */
    orderBy?: produtoOrderByWithRelationInput | produtoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: produtoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` produtos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` produtos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned produtos
    **/
    _count?: true | ProdutoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProdutoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProdutoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProdutoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProdutoMaxAggregateInputType
  }

  export type GetProdutoAggregateType<T extends ProdutoAggregateArgs> = {
        [P in keyof T & keyof AggregateProduto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduto[P]>
      : GetScalarType<T[P], AggregateProduto[P]>
  }




  export type produtoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: produtoWhereInput
    orderBy?: produtoOrderByWithAggregationInput | produtoOrderByWithAggregationInput[]
    by: ProdutoScalarFieldEnum[] | ProdutoScalarFieldEnum
    having?: produtoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProdutoCountAggregateInputType | true
    _avg?: ProdutoAvgAggregateInputType
    _sum?: ProdutoSumAggregateInputType
    _min?: ProdutoMinAggregateInputType
    _max?: ProdutoMaxAggregateInputType
  }

  export type ProdutoGroupByOutputType = {
    id_produto: number
    nome: string
    descricao: string | null
    categoria: string | null
    codigo_publico: string | null
    preco_unitario: number | null
    unidade_medida: string | null
    id_fornecedor: number | null
    _count: ProdutoCountAggregateOutputType | null
    _avg: ProdutoAvgAggregateOutputType | null
    _sum: ProdutoSumAggregateOutputType | null
    _min: ProdutoMinAggregateOutputType | null
    _max: ProdutoMaxAggregateOutputType | null
  }

  type GetProdutoGroupByPayload<T extends produtoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProdutoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProdutoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProdutoGroupByOutputType[P]>
            : GetScalarType<T[P], ProdutoGroupByOutputType[P]>
        }
      >
    >


  export type produtoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_produto?: boolean
    nome?: boolean
    descricao?: boolean
    categoria?: boolean
    codigo_publico?: boolean
    preco_unitario?: boolean
    unidade_medida?: boolean
    id_fornecedor?: boolean
    estoque?: boolean | produto$estoqueArgs<ExtArgs>
    compras?: boolean | produto$comprasArgs<ExtArgs>
    alertas?: boolean | produto$alertasArgs<ExtArgs>
    previsoes?: boolean | produto$previsoesArgs<ExtArgs>
    historicos?: boolean | produto$historicosArgs<ExtArgs>
    movimentacoes?: boolean | produto$movimentacoesArgs<ExtArgs>
    garantias?: boolean | produto$garantiasArgs<ExtArgs>
    fornecedor?: boolean | produto$fornecedorArgs<ExtArgs>
    _count?: boolean | ProdutoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["produto"]>

  export type produtoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_produto?: boolean
    nome?: boolean
    descricao?: boolean
    categoria?: boolean
    codigo_publico?: boolean
    preco_unitario?: boolean
    unidade_medida?: boolean
    id_fornecedor?: boolean
    fornecedor?: boolean | produto$fornecedorArgs<ExtArgs>
  }, ExtArgs["result"]["produto"]>

  export type produtoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_produto?: boolean
    nome?: boolean
    descricao?: boolean
    categoria?: boolean
    codigo_publico?: boolean
    preco_unitario?: boolean
    unidade_medida?: boolean
    id_fornecedor?: boolean
    fornecedor?: boolean | produto$fornecedorArgs<ExtArgs>
  }, ExtArgs["result"]["produto"]>

  export type produtoSelectScalar = {
    id_produto?: boolean
    nome?: boolean
    descricao?: boolean
    categoria?: boolean
    codigo_publico?: boolean
    preco_unitario?: boolean
    unidade_medida?: boolean
    id_fornecedor?: boolean
  }

  export type produtoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_produto" | "nome" | "descricao" | "categoria" | "codigo_publico" | "preco_unitario" | "unidade_medida" | "id_fornecedor", ExtArgs["result"]["produto"]>
  export type produtoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estoque?: boolean | produto$estoqueArgs<ExtArgs>
    compras?: boolean | produto$comprasArgs<ExtArgs>
    alertas?: boolean | produto$alertasArgs<ExtArgs>
    previsoes?: boolean | produto$previsoesArgs<ExtArgs>
    historicos?: boolean | produto$historicosArgs<ExtArgs>
    movimentacoes?: boolean | produto$movimentacoesArgs<ExtArgs>
    garantias?: boolean | produto$garantiasArgs<ExtArgs>
    fornecedor?: boolean | produto$fornecedorArgs<ExtArgs>
    _count?: boolean | ProdutoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type produtoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    fornecedor?: boolean | produto$fornecedorArgs<ExtArgs>
  }
  export type produtoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    fornecedor?: boolean | produto$fornecedorArgs<ExtArgs>
  }

  export type $produtoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "produto"
    objects: {
      estoque: Prisma.$estoquePayload<ExtArgs>[]
      compras: Prisma.$compraPayload<ExtArgs>[]
      alertas: Prisma.$alertaPayload<ExtArgs>[]
      previsoes: Prisma.$previsao_demandaPayload<ExtArgs>[]
      historicos: Prisma.$historico_previsaoPayload<ExtArgs>[]
      movimentacoes: Prisma.$movimentacaoPayload<ExtArgs>[]
      garantias: Prisma.$garantiaPayload<ExtArgs>[]
      fornecedor: Prisma.$fornecedorPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_produto: number
      nome: string
      descricao: string | null
      categoria: string | null
      codigo_publico: string | null
      preco_unitario: number | null
      unidade_medida: string | null
      id_fornecedor: number | null
    }, ExtArgs["result"]["produto"]>
    composites: {}
  }

  type produtoGetPayload<S extends boolean | null | undefined | produtoDefaultArgs> = $Result.GetResult<Prisma.$produtoPayload, S>

  type produtoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<produtoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProdutoCountAggregateInputType | true
    }

  export interface produtoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['produto'], meta: { name: 'produto' } }
    /**
     * Find zero or one Produto that matches the filter.
     * @param {produtoFindUniqueArgs} args - Arguments to find a Produto
     * @example
     * // Get one Produto
     * const produto = await prisma.produto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends produtoFindUniqueArgs>(args: SelectSubset<T, produtoFindUniqueArgs<ExtArgs>>): Prisma__produtoClient<$Result.GetResult<Prisma.$produtoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Produto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {produtoFindUniqueOrThrowArgs} args - Arguments to find a Produto
     * @example
     * // Get one Produto
     * const produto = await prisma.produto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends produtoFindUniqueOrThrowArgs>(args: SelectSubset<T, produtoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__produtoClient<$Result.GetResult<Prisma.$produtoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Produto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {produtoFindFirstArgs} args - Arguments to find a Produto
     * @example
     * // Get one Produto
     * const produto = await prisma.produto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends produtoFindFirstArgs>(args?: SelectSubset<T, produtoFindFirstArgs<ExtArgs>>): Prisma__produtoClient<$Result.GetResult<Prisma.$produtoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Produto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {produtoFindFirstOrThrowArgs} args - Arguments to find a Produto
     * @example
     * // Get one Produto
     * const produto = await prisma.produto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends produtoFindFirstOrThrowArgs>(args?: SelectSubset<T, produtoFindFirstOrThrowArgs<ExtArgs>>): Prisma__produtoClient<$Result.GetResult<Prisma.$produtoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Produtos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {produtoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Produtos
     * const produtos = await prisma.produto.findMany()
     * 
     * // Get first 10 Produtos
     * const produtos = await prisma.produto.findMany({ take: 10 })
     * 
     * // Only select the `id_produto`
     * const produtoWithId_produtoOnly = await prisma.produto.findMany({ select: { id_produto: true } })
     * 
     */
    findMany<T extends produtoFindManyArgs>(args?: SelectSubset<T, produtoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$produtoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Produto.
     * @param {produtoCreateArgs} args - Arguments to create a Produto.
     * @example
     * // Create one Produto
     * const Produto = await prisma.produto.create({
     *   data: {
     *     // ... data to create a Produto
     *   }
     * })
     * 
     */
    create<T extends produtoCreateArgs>(args: SelectSubset<T, produtoCreateArgs<ExtArgs>>): Prisma__produtoClient<$Result.GetResult<Prisma.$produtoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Produtos.
     * @param {produtoCreateManyArgs} args - Arguments to create many Produtos.
     * @example
     * // Create many Produtos
     * const produto = await prisma.produto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends produtoCreateManyArgs>(args?: SelectSubset<T, produtoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Produtos and returns the data saved in the database.
     * @param {produtoCreateManyAndReturnArgs} args - Arguments to create many Produtos.
     * @example
     * // Create many Produtos
     * const produto = await prisma.produto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Produtos and only return the `id_produto`
     * const produtoWithId_produtoOnly = await prisma.produto.createManyAndReturn({
     *   select: { id_produto: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends produtoCreateManyAndReturnArgs>(args?: SelectSubset<T, produtoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$produtoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Produto.
     * @param {produtoDeleteArgs} args - Arguments to delete one Produto.
     * @example
     * // Delete one Produto
     * const Produto = await prisma.produto.delete({
     *   where: {
     *     // ... filter to delete one Produto
     *   }
     * })
     * 
     */
    delete<T extends produtoDeleteArgs>(args: SelectSubset<T, produtoDeleteArgs<ExtArgs>>): Prisma__produtoClient<$Result.GetResult<Prisma.$produtoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Produto.
     * @param {produtoUpdateArgs} args - Arguments to update one Produto.
     * @example
     * // Update one Produto
     * const produto = await prisma.produto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends produtoUpdateArgs>(args: SelectSubset<T, produtoUpdateArgs<ExtArgs>>): Prisma__produtoClient<$Result.GetResult<Prisma.$produtoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Produtos.
     * @param {produtoDeleteManyArgs} args - Arguments to filter Produtos to delete.
     * @example
     * // Delete a few Produtos
     * const { count } = await prisma.produto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends produtoDeleteManyArgs>(args?: SelectSubset<T, produtoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Produtos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {produtoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Produtos
     * const produto = await prisma.produto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends produtoUpdateManyArgs>(args: SelectSubset<T, produtoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Produtos and returns the data updated in the database.
     * @param {produtoUpdateManyAndReturnArgs} args - Arguments to update many Produtos.
     * @example
     * // Update many Produtos
     * const produto = await prisma.produto.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Produtos and only return the `id_produto`
     * const produtoWithId_produtoOnly = await prisma.produto.updateManyAndReturn({
     *   select: { id_produto: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends produtoUpdateManyAndReturnArgs>(args: SelectSubset<T, produtoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$produtoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Produto.
     * @param {produtoUpsertArgs} args - Arguments to update or create a Produto.
     * @example
     * // Update or create a Produto
     * const produto = await prisma.produto.upsert({
     *   create: {
     *     // ... data to create a Produto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Produto we want to update
     *   }
     * })
     */
    upsert<T extends produtoUpsertArgs>(args: SelectSubset<T, produtoUpsertArgs<ExtArgs>>): Prisma__produtoClient<$Result.GetResult<Prisma.$produtoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Produtos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {produtoCountArgs} args - Arguments to filter Produtos to count.
     * @example
     * // Count the number of Produtos
     * const count = await prisma.produto.count({
     *   where: {
     *     // ... the filter for the Produtos we want to count
     *   }
     * })
    **/
    count<T extends produtoCountArgs>(
      args?: Subset<T, produtoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProdutoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Produto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProdutoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProdutoAggregateArgs>(args: Subset<T, ProdutoAggregateArgs>): Prisma.PrismaPromise<GetProdutoAggregateType<T>>

    /**
     * Group by Produto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {produtoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends produtoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: produtoGroupByArgs['orderBy'] }
        : { orderBy?: produtoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, produtoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProdutoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the produto model
   */
  readonly fields: produtoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for produto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__produtoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    estoque<T extends produto$estoqueArgs<ExtArgs> = {}>(args?: Subset<T, produto$estoqueArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estoquePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    compras<T extends produto$comprasArgs<ExtArgs> = {}>(args?: Subset<T, produto$comprasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$compraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    alertas<T extends produto$alertasArgs<ExtArgs> = {}>(args?: Subset<T, produto$alertasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$alertaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    previsoes<T extends produto$previsoesArgs<ExtArgs> = {}>(args?: Subset<T, produto$previsoesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$previsao_demandaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    historicos<T extends produto$historicosArgs<ExtArgs> = {}>(args?: Subset<T, produto$historicosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$historico_previsaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    movimentacoes<T extends produto$movimentacoesArgs<ExtArgs> = {}>(args?: Subset<T, produto$movimentacoesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$movimentacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    garantias<T extends produto$garantiasArgs<ExtArgs> = {}>(args?: Subset<T, produto$garantiasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$garantiaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    fornecedor<T extends produto$fornecedorArgs<ExtArgs> = {}>(args?: Subset<T, produto$fornecedorArgs<ExtArgs>>): Prisma__fornecedorClient<$Result.GetResult<Prisma.$fornecedorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the produto model
   */
  interface produtoFieldRefs {
    readonly id_produto: FieldRef<"produto", 'Int'>
    readonly nome: FieldRef<"produto", 'String'>
    readonly descricao: FieldRef<"produto", 'String'>
    readonly categoria: FieldRef<"produto", 'String'>
    readonly codigo_publico: FieldRef<"produto", 'String'>
    readonly preco_unitario: FieldRef<"produto", 'Float'>
    readonly unidade_medida: FieldRef<"produto", 'String'>
    readonly id_fornecedor: FieldRef<"produto", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * produto findUnique
   */
  export type produtoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produto
     */
    select?: produtoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produto
     */
    omit?: produtoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produtoInclude<ExtArgs> | null
    /**
     * Filter, which produto to fetch.
     */
    where: produtoWhereUniqueInput
  }

  /**
   * produto findUniqueOrThrow
   */
  export type produtoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produto
     */
    select?: produtoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produto
     */
    omit?: produtoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produtoInclude<ExtArgs> | null
    /**
     * Filter, which produto to fetch.
     */
    where: produtoWhereUniqueInput
  }

  /**
   * produto findFirst
   */
  export type produtoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produto
     */
    select?: produtoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produto
     */
    omit?: produtoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produtoInclude<ExtArgs> | null
    /**
     * Filter, which produto to fetch.
     */
    where?: produtoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of produtos to fetch.
     */
    orderBy?: produtoOrderByWithRelationInput | produtoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for produtos.
     */
    cursor?: produtoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` produtos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` produtos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of produtos.
     */
    distinct?: ProdutoScalarFieldEnum | ProdutoScalarFieldEnum[]
  }

  /**
   * produto findFirstOrThrow
   */
  export type produtoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produto
     */
    select?: produtoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produto
     */
    omit?: produtoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produtoInclude<ExtArgs> | null
    /**
     * Filter, which produto to fetch.
     */
    where?: produtoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of produtos to fetch.
     */
    orderBy?: produtoOrderByWithRelationInput | produtoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for produtos.
     */
    cursor?: produtoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` produtos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` produtos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of produtos.
     */
    distinct?: ProdutoScalarFieldEnum | ProdutoScalarFieldEnum[]
  }

  /**
   * produto findMany
   */
  export type produtoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produto
     */
    select?: produtoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produto
     */
    omit?: produtoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produtoInclude<ExtArgs> | null
    /**
     * Filter, which produtos to fetch.
     */
    where?: produtoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of produtos to fetch.
     */
    orderBy?: produtoOrderByWithRelationInput | produtoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing produtos.
     */
    cursor?: produtoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` produtos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` produtos.
     */
    skip?: number
    distinct?: ProdutoScalarFieldEnum | ProdutoScalarFieldEnum[]
  }

  /**
   * produto create
   */
  export type produtoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produto
     */
    select?: produtoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produto
     */
    omit?: produtoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produtoInclude<ExtArgs> | null
    /**
     * The data needed to create a produto.
     */
    data: XOR<produtoCreateInput, produtoUncheckedCreateInput>
  }

  /**
   * produto createMany
   */
  export type produtoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many produtos.
     */
    data: produtoCreateManyInput | produtoCreateManyInput[]
  }

  /**
   * produto createManyAndReturn
   */
  export type produtoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produto
     */
    select?: produtoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the produto
     */
    omit?: produtoOmit<ExtArgs> | null
    /**
     * The data used to create many produtos.
     */
    data: produtoCreateManyInput | produtoCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produtoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * produto update
   */
  export type produtoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produto
     */
    select?: produtoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produto
     */
    omit?: produtoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produtoInclude<ExtArgs> | null
    /**
     * The data needed to update a produto.
     */
    data: XOR<produtoUpdateInput, produtoUncheckedUpdateInput>
    /**
     * Choose, which produto to update.
     */
    where: produtoWhereUniqueInput
  }

  /**
   * produto updateMany
   */
  export type produtoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update produtos.
     */
    data: XOR<produtoUpdateManyMutationInput, produtoUncheckedUpdateManyInput>
    /**
     * Filter which produtos to update
     */
    where?: produtoWhereInput
    /**
     * Limit how many produtos to update.
     */
    limit?: number
  }

  /**
   * produto updateManyAndReturn
   */
  export type produtoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produto
     */
    select?: produtoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the produto
     */
    omit?: produtoOmit<ExtArgs> | null
    /**
     * The data used to update produtos.
     */
    data: XOR<produtoUpdateManyMutationInput, produtoUncheckedUpdateManyInput>
    /**
     * Filter which produtos to update
     */
    where?: produtoWhereInput
    /**
     * Limit how many produtos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produtoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * produto upsert
   */
  export type produtoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produto
     */
    select?: produtoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produto
     */
    omit?: produtoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produtoInclude<ExtArgs> | null
    /**
     * The filter to search for the produto to update in case it exists.
     */
    where: produtoWhereUniqueInput
    /**
     * In case the produto found by the `where` argument doesn't exist, create a new produto with this data.
     */
    create: XOR<produtoCreateInput, produtoUncheckedCreateInput>
    /**
     * In case the produto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<produtoUpdateInput, produtoUncheckedUpdateInput>
  }

  /**
   * produto delete
   */
  export type produtoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produto
     */
    select?: produtoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produto
     */
    omit?: produtoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produtoInclude<ExtArgs> | null
    /**
     * Filter which produto to delete.
     */
    where: produtoWhereUniqueInput
  }

  /**
   * produto deleteMany
   */
  export type produtoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which produtos to delete
     */
    where?: produtoWhereInput
    /**
     * Limit how many produtos to delete.
     */
    limit?: number
  }

  /**
   * produto.estoque
   */
  export type produto$estoqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estoque
     */
    select?: estoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estoque
     */
    omit?: estoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estoqueInclude<ExtArgs> | null
    where?: estoqueWhereInput
    orderBy?: estoqueOrderByWithRelationInput | estoqueOrderByWithRelationInput[]
    cursor?: estoqueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EstoqueScalarFieldEnum | EstoqueScalarFieldEnum[]
  }

  /**
   * produto.compras
   */
  export type produto$comprasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compra
     */
    select?: compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compra
     */
    omit?: compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compraInclude<ExtArgs> | null
    where?: compraWhereInput
    orderBy?: compraOrderByWithRelationInput | compraOrderByWithRelationInput[]
    cursor?: compraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CompraScalarFieldEnum | CompraScalarFieldEnum[]
  }

  /**
   * produto.alertas
   */
  export type produto$alertasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alerta
     */
    select?: alertaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alerta
     */
    omit?: alertaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alertaInclude<ExtArgs> | null
    where?: alertaWhereInput
    orderBy?: alertaOrderByWithRelationInput | alertaOrderByWithRelationInput[]
    cursor?: alertaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AlertaScalarFieldEnum | AlertaScalarFieldEnum[]
  }

  /**
   * produto.previsoes
   */
  export type produto$previsoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the previsao_demanda
     */
    select?: previsao_demandaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the previsao_demanda
     */
    omit?: previsao_demandaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: previsao_demandaInclude<ExtArgs> | null
    where?: previsao_demandaWhereInput
    orderBy?: previsao_demandaOrderByWithRelationInput | previsao_demandaOrderByWithRelationInput[]
    cursor?: previsao_demandaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Previsao_demandaScalarFieldEnum | Previsao_demandaScalarFieldEnum[]
  }

  /**
   * produto.historicos
   */
  export type produto$historicosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historico_previsao
     */
    select?: historico_previsaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historico_previsao
     */
    omit?: historico_previsaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historico_previsaoInclude<ExtArgs> | null
    where?: historico_previsaoWhereInput
    orderBy?: historico_previsaoOrderByWithRelationInput | historico_previsaoOrderByWithRelationInput[]
    cursor?: historico_previsaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Historico_previsaoScalarFieldEnum | Historico_previsaoScalarFieldEnum[]
  }

  /**
   * produto.movimentacoes
   */
  export type produto$movimentacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the movimentacao
     */
    select?: movimentacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the movimentacao
     */
    omit?: movimentacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: movimentacaoInclude<ExtArgs> | null
    where?: movimentacaoWhereInput
    orderBy?: movimentacaoOrderByWithRelationInput | movimentacaoOrderByWithRelationInput[]
    cursor?: movimentacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MovimentacaoScalarFieldEnum | MovimentacaoScalarFieldEnum[]
  }

  /**
   * produto.garantias
   */
  export type produto$garantiasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the garantia
     */
    select?: garantiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the garantia
     */
    omit?: garantiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: garantiaInclude<ExtArgs> | null
    where?: garantiaWhereInput
    orderBy?: garantiaOrderByWithRelationInput | garantiaOrderByWithRelationInput[]
    cursor?: garantiaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GarantiaScalarFieldEnum | GarantiaScalarFieldEnum[]
  }

  /**
   * produto.fornecedor
   */
  export type produto$fornecedorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fornecedor
     */
    select?: fornecedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fornecedor
     */
    omit?: fornecedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fornecedorInclude<ExtArgs> | null
    where?: fornecedorWhereInput
  }

  /**
   * produto without action
   */
  export type produtoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produto
     */
    select?: produtoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produto
     */
    omit?: produtoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produtoInclude<ExtArgs> | null
  }


  /**
   * Model estoque
   */

  export type AggregateEstoque = {
    _count: EstoqueCountAggregateOutputType | null
    _avg: EstoqueAvgAggregateOutputType | null
    _sum: EstoqueSumAggregateOutputType | null
    _min: EstoqueMinAggregateOutputType | null
    _max: EstoqueMaxAggregateOutputType | null
  }

  export type EstoqueAvgAggregateOutputType = {
    id_estoque: number | null
    id_produto: number | null
    id_sala: number | null
    quantidade_atual: number | null
    quantidade_minima: number | null
  }

  export type EstoqueSumAggregateOutputType = {
    id_estoque: number | null
    id_produto: number | null
    id_sala: number | null
    quantidade_atual: number | null
    quantidade_minima: number | null
  }

  export type EstoqueMinAggregateOutputType = {
    id_estoque: number | null
    id_produto: number | null
    id_sala: number | null
    quantidade_atual: number | null
    quantidade_minima: number | null
    ultima_atualizacao: Date | null
    status: string | null
  }

  export type EstoqueMaxAggregateOutputType = {
    id_estoque: number | null
    id_produto: number | null
    id_sala: number | null
    quantidade_atual: number | null
    quantidade_minima: number | null
    ultima_atualizacao: Date | null
    status: string | null
  }

  export type EstoqueCountAggregateOutputType = {
    id_estoque: number
    id_produto: number
    id_sala: number
    quantidade_atual: number
    quantidade_minima: number
    ultima_atualizacao: number
    status: number
    _all: number
  }


  export type EstoqueAvgAggregateInputType = {
    id_estoque?: true
    id_produto?: true
    id_sala?: true
    quantidade_atual?: true
    quantidade_minima?: true
  }

  export type EstoqueSumAggregateInputType = {
    id_estoque?: true
    id_produto?: true
    id_sala?: true
    quantidade_atual?: true
    quantidade_minima?: true
  }

  export type EstoqueMinAggregateInputType = {
    id_estoque?: true
    id_produto?: true
    id_sala?: true
    quantidade_atual?: true
    quantidade_minima?: true
    ultima_atualizacao?: true
    status?: true
  }

  export type EstoqueMaxAggregateInputType = {
    id_estoque?: true
    id_produto?: true
    id_sala?: true
    quantidade_atual?: true
    quantidade_minima?: true
    ultima_atualizacao?: true
    status?: true
  }

  export type EstoqueCountAggregateInputType = {
    id_estoque?: true
    id_produto?: true
    id_sala?: true
    quantidade_atual?: true
    quantidade_minima?: true
    ultima_atualizacao?: true
    status?: true
    _all?: true
  }

  export type EstoqueAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which estoque to aggregate.
     */
    where?: estoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estoques to fetch.
     */
    orderBy?: estoqueOrderByWithRelationInput | estoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: estoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estoques.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned estoques
    **/
    _count?: true | EstoqueCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EstoqueAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EstoqueSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EstoqueMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EstoqueMaxAggregateInputType
  }

  export type GetEstoqueAggregateType<T extends EstoqueAggregateArgs> = {
        [P in keyof T & keyof AggregateEstoque]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEstoque[P]>
      : GetScalarType<T[P], AggregateEstoque[P]>
  }




  export type estoqueGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: estoqueWhereInput
    orderBy?: estoqueOrderByWithAggregationInput | estoqueOrderByWithAggregationInput[]
    by: EstoqueScalarFieldEnum[] | EstoqueScalarFieldEnum
    having?: estoqueScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EstoqueCountAggregateInputType | true
    _avg?: EstoqueAvgAggregateInputType
    _sum?: EstoqueSumAggregateInputType
    _min?: EstoqueMinAggregateInputType
    _max?: EstoqueMaxAggregateInputType
  }

  export type EstoqueGroupByOutputType = {
    id_estoque: number
    id_produto: number
    id_sala: number
    quantidade_atual: number
    quantidade_minima: number
    ultima_atualizacao: Date
    status: string | null
    _count: EstoqueCountAggregateOutputType | null
    _avg: EstoqueAvgAggregateOutputType | null
    _sum: EstoqueSumAggregateOutputType | null
    _min: EstoqueMinAggregateOutputType | null
    _max: EstoqueMaxAggregateOutputType | null
  }

  type GetEstoqueGroupByPayload<T extends estoqueGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EstoqueGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EstoqueGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EstoqueGroupByOutputType[P]>
            : GetScalarType<T[P], EstoqueGroupByOutputType[P]>
        }
      >
    >


  export type estoqueSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_estoque?: boolean
    id_produto?: boolean
    id_sala?: boolean
    quantidade_atual?: boolean
    quantidade_minima?: boolean
    ultima_atualizacao?: boolean
    status?: boolean
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    sala?: boolean | salaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estoque"]>

  export type estoqueSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_estoque?: boolean
    id_produto?: boolean
    id_sala?: boolean
    quantidade_atual?: boolean
    quantidade_minima?: boolean
    ultima_atualizacao?: boolean
    status?: boolean
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    sala?: boolean | salaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estoque"]>

  export type estoqueSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_estoque?: boolean
    id_produto?: boolean
    id_sala?: boolean
    quantidade_atual?: boolean
    quantidade_minima?: boolean
    ultima_atualizacao?: boolean
    status?: boolean
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    sala?: boolean | salaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estoque"]>

  export type estoqueSelectScalar = {
    id_estoque?: boolean
    id_produto?: boolean
    id_sala?: boolean
    quantidade_atual?: boolean
    quantidade_minima?: boolean
    ultima_atualizacao?: boolean
    status?: boolean
  }

  export type estoqueOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_estoque" | "id_produto" | "id_sala" | "quantidade_atual" | "quantidade_minima" | "ultima_atualizacao" | "status", ExtArgs["result"]["estoque"]>
  export type estoqueInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    sala?: boolean | salaDefaultArgs<ExtArgs>
  }
  export type estoqueIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    sala?: boolean | salaDefaultArgs<ExtArgs>
  }
  export type estoqueIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    sala?: boolean | salaDefaultArgs<ExtArgs>
  }

  export type $estoquePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "estoque"
    objects: {
      produto: Prisma.$produtoPayload<ExtArgs>
      sala: Prisma.$salaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_estoque: number
      id_produto: number
      id_sala: number
      quantidade_atual: number
      quantidade_minima: number
      ultima_atualizacao: Date
      status: string | null
    }, ExtArgs["result"]["estoque"]>
    composites: {}
  }

  type estoqueGetPayload<S extends boolean | null | undefined | estoqueDefaultArgs> = $Result.GetResult<Prisma.$estoquePayload, S>

  type estoqueCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<estoqueFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EstoqueCountAggregateInputType | true
    }

  export interface estoqueDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['estoque'], meta: { name: 'estoque' } }
    /**
     * Find zero or one Estoque that matches the filter.
     * @param {estoqueFindUniqueArgs} args - Arguments to find a Estoque
     * @example
     * // Get one Estoque
     * const estoque = await prisma.estoque.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends estoqueFindUniqueArgs>(args: SelectSubset<T, estoqueFindUniqueArgs<ExtArgs>>): Prisma__estoqueClient<$Result.GetResult<Prisma.$estoquePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Estoque that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {estoqueFindUniqueOrThrowArgs} args - Arguments to find a Estoque
     * @example
     * // Get one Estoque
     * const estoque = await prisma.estoque.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends estoqueFindUniqueOrThrowArgs>(args: SelectSubset<T, estoqueFindUniqueOrThrowArgs<ExtArgs>>): Prisma__estoqueClient<$Result.GetResult<Prisma.$estoquePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Estoque that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estoqueFindFirstArgs} args - Arguments to find a Estoque
     * @example
     * // Get one Estoque
     * const estoque = await prisma.estoque.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends estoqueFindFirstArgs>(args?: SelectSubset<T, estoqueFindFirstArgs<ExtArgs>>): Prisma__estoqueClient<$Result.GetResult<Prisma.$estoquePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Estoque that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estoqueFindFirstOrThrowArgs} args - Arguments to find a Estoque
     * @example
     * // Get one Estoque
     * const estoque = await prisma.estoque.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends estoqueFindFirstOrThrowArgs>(args?: SelectSubset<T, estoqueFindFirstOrThrowArgs<ExtArgs>>): Prisma__estoqueClient<$Result.GetResult<Prisma.$estoquePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Estoques that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estoqueFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Estoques
     * const estoques = await prisma.estoque.findMany()
     * 
     * // Get first 10 Estoques
     * const estoques = await prisma.estoque.findMany({ take: 10 })
     * 
     * // Only select the `id_estoque`
     * const estoqueWithId_estoqueOnly = await prisma.estoque.findMany({ select: { id_estoque: true } })
     * 
     */
    findMany<T extends estoqueFindManyArgs>(args?: SelectSubset<T, estoqueFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estoquePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Estoque.
     * @param {estoqueCreateArgs} args - Arguments to create a Estoque.
     * @example
     * // Create one Estoque
     * const Estoque = await prisma.estoque.create({
     *   data: {
     *     // ... data to create a Estoque
     *   }
     * })
     * 
     */
    create<T extends estoqueCreateArgs>(args: SelectSubset<T, estoqueCreateArgs<ExtArgs>>): Prisma__estoqueClient<$Result.GetResult<Prisma.$estoquePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Estoques.
     * @param {estoqueCreateManyArgs} args - Arguments to create many Estoques.
     * @example
     * // Create many Estoques
     * const estoque = await prisma.estoque.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends estoqueCreateManyArgs>(args?: SelectSubset<T, estoqueCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Estoques and returns the data saved in the database.
     * @param {estoqueCreateManyAndReturnArgs} args - Arguments to create many Estoques.
     * @example
     * // Create many Estoques
     * const estoque = await prisma.estoque.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Estoques and only return the `id_estoque`
     * const estoqueWithId_estoqueOnly = await prisma.estoque.createManyAndReturn({
     *   select: { id_estoque: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends estoqueCreateManyAndReturnArgs>(args?: SelectSubset<T, estoqueCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estoquePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Estoque.
     * @param {estoqueDeleteArgs} args - Arguments to delete one Estoque.
     * @example
     * // Delete one Estoque
     * const Estoque = await prisma.estoque.delete({
     *   where: {
     *     // ... filter to delete one Estoque
     *   }
     * })
     * 
     */
    delete<T extends estoqueDeleteArgs>(args: SelectSubset<T, estoqueDeleteArgs<ExtArgs>>): Prisma__estoqueClient<$Result.GetResult<Prisma.$estoquePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Estoque.
     * @param {estoqueUpdateArgs} args - Arguments to update one Estoque.
     * @example
     * // Update one Estoque
     * const estoque = await prisma.estoque.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends estoqueUpdateArgs>(args: SelectSubset<T, estoqueUpdateArgs<ExtArgs>>): Prisma__estoqueClient<$Result.GetResult<Prisma.$estoquePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Estoques.
     * @param {estoqueDeleteManyArgs} args - Arguments to filter Estoques to delete.
     * @example
     * // Delete a few Estoques
     * const { count } = await prisma.estoque.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends estoqueDeleteManyArgs>(args?: SelectSubset<T, estoqueDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Estoques.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estoqueUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Estoques
     * const estoque = await prisma.estoque.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends estoqueUpdateManyArgs>(args: SelectSubset<T, estoqueUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Estoques and returns the data updated in the database.
     * @param {estoqueUpdateManyAndReturnArgs} args - Arguments to update many Estoques.
     * @example
     * // Update many Estoques
     * const estoque = await prisma.estoque.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Estoques and only return the `id_estoque`
     * const estoqueWithId_estoqueOnly = await prisma.estoque.updateManyAndReturn({
     *   select: { id_estoque: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends estoqueUpdateManyAndReturnArgs>(args: SelectSubset<T, estoqueUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estoquePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Estoque.
     * @param {estoqueUpsertArgs} args - Arguments to update or create a Estoque.
     * @example
     * // Update or create a Estoque
     * const estoque = await prisma.estoque.upsert({
     *   create: {
     *     // ... data to create a Estoque
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Estoque we want to update
     *   }
     * })
     */
    upsert<T extends estoqueUpsertArgs>(args: SelectSubset<T, estoqueUpsertArgs<ExtArgs>>): Prisma__estoqueClient<$Result.GetResult<Prisma.$estoquePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Estoques.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estoqueCountArgs} args - Arguments to filter Estoques to count.
     * @example
     * // Count the number of Estoques
     * const count = await prisma.estoque.count({
     *   where: {
     *     // ... the filter for the Estoques we want to count
     *   }
     * })
    **/
    count<T extends estoqueCountArgs>(
      args?: Subset<T, estoqueCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EstoqueCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Estoque.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstoqueAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EstoqueAggregateArgs>(args: Subset<T, EstoqueAggregateArgs>): Prisma.PrismaPromise<GetEstoqueAggregateType<T>>

    /**
     * Group by Estoque.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estoqueGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends estoqueGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: estoqueGroupByArgs['orderBy'] }
        : { orderBy?: estoqueGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, estoqueGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEstoqueGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the estoque model
   */
  readonly fields: estoqueFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for estoque.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__estoqueClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    produto<T extends produtoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, produtoDefaultArgs<ExtArgs>>): Prisma__produtoClient<$Result.GetResult<Prisma.$produtoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    sala<T extends salaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, salaDefaultArgs<ExtArgs>>): Prisma__salaClient<$Result.GetResult<Prisma.$salaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the estoque model
   */
  interface estoqueFieldRefs {
    readonly id_estoque: FieldRef<"estoque", 'Int'>
    readonly id_produto: FieldRef<"estoque", 'Int'>
    readonly id_sala: FieldRef<"estoque", 'Int'>
    readonly quantidade_atual: FieldRef<"estoque", 'Int'>
    readonly quantidade_minima: FieldRef<"estoque", 'Int'>
    readonly ultima_atualizacao: FieldRef<"estoque", 'DateTime'>
    readonly status: FieldRef<"estoque", 'String'>
  }
    

  // Custom InputTypes
  /**
   * estoque findUnique
   */
  export type estoqueFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estoque
     */
    select?: estoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estoque
     */
    omit?: estoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estoqueInclude<ExtArgs> | null
    /**
     * Filter, which estoque to fetch.
     */
    where: estoqueWhereUniqueInput
  }

  /**
   * estoque findUniqueOrThrow
   */
  export type estoqueFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estoque
     */
    select?: estoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estoque
     */
    omit?: estoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estoqueInclude<ExtArgs> | null
    /**
     * Filter, which estoque to fetch.
     */
    where: estoqueWhereUniqueInput
  }

  /**
   * estoque findFirst
   */
  export type estoqueFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estoque
     */
    select?: estoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estoque
     */
    omit?: estoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estoqueInclude<ExtArgs> | null
    /**
     * Filter, which estoque to fetch.
     */
    where?: estoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estoques to fetch.
     */
    orderBy?: estoqueOrderByWithRelationInput | estoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for estoques.
     */
    cursor?: estoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estoques.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of estoques.
     */
    distinct?: EstoqueScalarFieldEnum | EstoqueScalarFieldEnum[]
  }

  /**
   * estoque findFirstOrThrow
   */
  export type estoqueFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estoque
     */
    select?: estoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estoque
     */
    omit?: estoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estoqueInclude<ExtArgs> | null
    /**
     * Filter, which estoque to fetch.
     */
    where?: estoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estoques to fetch.
     */
    orderBy?: estoqueOrderByWithRelationInput | estoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for estoques.
     */
    cursor?: estoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estoques.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of estoques.
     */
    distinct?: EstoqueScalarFieldEnum | EstoqueScalarFieldEnum[]
  }

  /**
   * estoque findMany
   */
  export type estoqueFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estoque
     */
    select?: estoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estoque
     */
    omit?: estoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estoqueInclude<ExtArgs> | null
    /**
     * Filter, which estoques to fetch.
     */
    where?: estoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estoques to fetch.
     */
    orderBy?: estoqueOrderByWithRelationInput | estoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing estoques.
     */
    cursor?: estoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estoques.
     */
    skip?: number
    distinct?: EstoqueScalarFieldEnum | EstoqueScalarFieldEnum[]
  }

  /**
   * estoque create
   */
  export type estoqueCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estoque
     */
    select?: estoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estoque
     */
    omit?: estoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estoqueInclude<ExtArgs> | null
    /**
     * The data needed to create a estoque.
     */
    data: XOR<estoqueCreateInput, estoqueUncheckedCreateInput>
  }

  /**
   * estoque createMany
   */
  export type estoqueCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many estoques.
     */
    data: estoqueCreateManyInput | estoqueCreateManyInput[]
  }

  /**
   * estoque createManyAndReturn
   */
  export type estoqueCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estoque
     */
    select?: estoqueSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the estoque
     */
    omit?: estoqueOmit<ExtArgs> | null
    /**
     * The data used to create many estoques.
     */
    data: estoqueCreateManyInput | estoqueCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estoqueIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * estoque update
   */
  export type estoqueUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estoque
     */
    select?: estoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estoque
     */
    omit?: estoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estoqueInclude<ExtArgs> | null
    /**
     * The data needed to update a estoque.
     */
    data: XOR<estoqueUpdateInput, estoqueUncheckedUpdateInput>
    /**
     * Choose, which estoque to update.
     */
    where: estoqueWhereUniqueInput
  }

  /**
   * estoque updateMany
   */
  export type estoqueUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update estoques.
     */
    data: XOR<estoqueUpdateManyMutationInput, estoqueUncheckedUpdateManyInput>
    /**
     * Filter which estoques to update
     */
    where?: estoqueWhereInput
    /**
     * Limit how many estoques to update.
     */
    limit?: number
  }

  /**
   * estoque updateManyAndReturn
   */
  export type estoqueUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estoque
     */
    select?: estoqueSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the estoque
     */
    omit?: estoqueOmit<ExtArgs> | null
    /**
     * The data used to update estoques.
     */
    data: XOR<estoqueUpdateManyMutationInput, estoqueUncheckedUpdateManyInput>
    /**
     * Filter which estoques to update
     */
    where?: estoqueWhereInput
    /**
     * Limit how many estoques to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estoqueIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * estoque upsert
   */
  export type estoqueUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estoque
     */
    select?: estoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estoque
     */
    omit?: estoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estoqueInclude<ExtArgs> | null
    /**
     * The filter to search for the estoque to update in case it exists.
     */
    where: estoqueWhereUniqueInput
    /**
     * In case the estoque found by the `where` argument doesn't exist, create a new estoque with this data.
     */
    create: XOR<estoqueCreateInput, estoqueUncheckedCreateInput>
    /**
     * In case the estoque was found with the provided `where` argument, update it with this data.
     */
    update: XOR<estoqueUpdateInput, estoqueUncheckedUpdateInput>
  }

  /**
   * estoque delete
   */
  export type estoqueDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estoque
     */
    select?: estoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estoque
     */
    omit?: estoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estoqueInclude<ExtArgs> | null
    /**
     * Filter which estoque to delete.
     */
    where: estoqueWhereUniqueInput
  }

  /**
   * estoque deleteMany
   */
  export type estoqueDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which estoques to delete
     */
    where?: estoqueWhereInput
    /**
     * Limit how many estoques to delete.
     */
    limit?: number
  }

  /**
   * estoque without action
   */
  export type estoqueDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estoque
     */
    select?: estoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estoque
     */
    omit?: estoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estoqueInclude<ExtArgs> | null
  }


  /**
   * Model financeiro
   */

  export type AggregateFinanceiro = {
    _count: FinanceiroCountAggregateOutputType | null
    _avg: FinanceiroAvgAggregateOutputType | null
    _sum: FinanceiroSumAggregateOutputType | null
    _min: FinanceiroMinAggregateOutputType | null
    _max: FinanceiroMaxAggregateOutputType | null
  }

  export type FinanceiroAvgAggregateOutputType = {
    id_financeiro: number | null
    valor: number | null
  }

  export type FinanceiroSumAggregateOutputType = {
    id_financeiro: number | null
    valor: number | null
  }

  export type FinanceiroMinAggregateOutputType = {
    id_financeiro: number | null
    tipo: string | null
    descricao: string | null
    valor: number | null
    data_movimento: Date | null
    status: string | null
  }

  export type FinanceiroMaxAggregateOutputType = {
    id_financeiro: number | null
    tipo: string | null
    descricao: string | null
    valor: number | null
    data_movimento: Date | null
    status: string | null
  }

  export type FinanceiroCountAggregateOutputType = {
    id_financeiro: number
    tipo: number
    descricao: number
    valor: number
    data_movimento: number
    status: number
    _all: number
  }


  export type FinanceiroAvgAggregateInputType = {
    id_financeiro?: true
    valor?: true
  }

  export type FinanceiroSumAggregateInputType = {
    id_financeiro?: true
    valor?: true
  }

  export type FinanceiroMinAggregateInputType = {
    id_financeiro?: true
    tipo?: true
    descricao?: true
    valor?: true
    data_movimento?: true
    status?: true
  }

  export type FinanceiroMaxAggregateInputType = {
    id_financeiro?: true
    tipo?: true
    descricao?: true
    valor?: true
    data_movimento?: true
    status?: true
  }

  export type FinanceiroCountAggregateInputType = {
    id_financeiro?: true
    tipo?: true
    descricao?: true
    valor?: true
    data_movimento?: true
    status?: true
    _all?: true
  }

  export type FinanceiroAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which financeiro to aggregate.
     */
    where?: financeiroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of financeiros to fetch.
     */
    orderBy?: financeiroOrderByWithRelationInput | financeiroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: financeiroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` financeiros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` financeiros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned financeiros
    **/
    _count?: true | FinanceiroCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FinanceiroAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FinanceiroSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FinanceiroMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FinanceiroMaxAggregateInputType
  }

  export type GetFinanceiroAggregateType<T extends FinanceiroAggregateArgs> = {
        [P in keyof T & keyof AggregateFinanceiro]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFinanceiro[P]>
      : GetScalarType<T[P], AggregateFinanceiro[P]>
  }




  export type financeiroGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: financeiroWhereInput
    orderBy?: financeiroOrderByWithAggregationInput | financeiroOrderByWithAggregationInput[]
    by: FinanceiroScalarFieldEnum[] | FinanceiroScalarFieldEnum
    having?: financeiroScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FinanceiroCountAggregateInputType | true
    _avg?: FinanceiroAvgAggregateInputType
    _sum?: FinanceiroSumAggregateInputType
    _min?: FinanceiroMinAggregateInputType
    _max?: FinanceiroMaxAggregateInputType
  }

  export type FinanceiroGroupByOutputType = {
    id_financeiro: number
    tipo: string
    descricao: string
    valor: number
    data_movimento: Date
    status: string | null
    _count: FinanceiroCountAggregateOutputType | null
    _avg: FinanceiroAvgAggregateOutputType | null
    _sum: FinanceiroSumAggregateOutputType | null
    _min: FinanceiroMinAggregateOutputType | null
    _max: FinanceiroMaxAggregateOutputType | null
  }

  type GetFinanceiroGroupByPayload<T extends financeiroGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FinanceiroGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FinanceiroGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FinanceiroGroupByOutputType[P]>
            : GetScalarType<T[P], FinanceiroGroupByOutputType[P]>
        }
      >
    >


  export type financeiroSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_financeiro?: boolean
    tipo?: boolean
    descricao?: boolean
    valor?: boolean
    data_movimento?: boolean
    status?: boolean
    compras?: boolean | financeiro$comprasArgs<ExtArgs>
    historicos?: boolean | financeiro$historicosArgs<ExtArgs>
    _count?: boolean | FinanceiroCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["financeiro"]>

  export type financeiroSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_financeiro?: boolean
    tipo?: boolean
    descricao?: boolean
    valor?: boolean
    data_movimento?: boolean
    status?: boolean
  }, ExtArgs["result"]["financeiro"]>

  export type financeiroSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_financeiro?: boolean
    tipo?: boolean
    descricao?: boolean
    valor?: boolean
    data_movimento?: boolean
    status?: boolean
  }, ExtArgs["result"]["financeiro"]>

  export type financeiroSelectScalar = {
    id_financeiro?: boolean
    tipo?: boolean
    descricao?: boolean
    valor?: boolean
    data_movimento?: boolean
    status?: boolean
  }

  export type financeiroOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_financeiro" | "tipo" | "descricao" | "valor" | "data_movimento" | "status", ExtArgs["result"]["financeiro"]>
  export type financeiroInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    compras?: boolean | financeiro$comprasArgs<ExtArgs>
    historicos?: boolean | financeiro$historicosArgs<ExtArgs>
    _count?: boolean | FinanceiroCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type financeiroIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type financeiroIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $financeiroPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "financeiro"
    objects: {
      compras: Prisma.$compraPayload<ExtArgs>[]
      historicos: Prisma.$historico_previsaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_financeiro: number
      tipo: string
      descricao: string
      valor: number
      data_movimento: Date
      status: string | null
    }, ExtArgs["result"]["financeiro"]>
    composites: {}
  }

  type financeiroGetPayload<S extends boolean | null | undefined | financeiroDefaultArgs> = $Result.GetResult<Prisma.$financeiroPayload, S>

  type financeiroCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<financeiroFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FinanceiroCountAggregateInputType | true
    }

  export interface financeiroDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['financeiro'], meta: { name: 'financeiro' } }
    /**
     * Find zero or one Financeiro that matches the filter.
     * @param {financeiroFindUniqueArgs} args - Arguments to find a Financeiro
     * @example
     * // Get one Financeiro
     * const financeiro = await prisma.financeiro.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends financeiroFindUniqueArgs>(args: SelectSubset<T, financeiroFindUniqueArgs<ExtArgs>>): Prisma__financeiroClient<$Result.GetResult<Prisma.$financeiroPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Financeiro that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {financeiroFindUniqueOrThrowArgs} args - Arguments to find a Financeiro
     * @example
     * // Get one Financeiro
     * const financeiro = await prisma.financeiro.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends financeiroFindUniqueOrThrowArgs>(args: SelectSubset<T, financeiroFindUniqueOrThrowArgs<ExtArgs>>): Prisma__financeiroClient<$Result.GetResult<Prisma.$financeiroPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Financeiro that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {financeiroFindFirstArgs} args - Arguments to find a Financeiro
     * @example
     * // Get one Financeiro
     * const financeiro = await prisma.financeiro.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends financeiroFindFirstArgs>(args?: SelectSubset<T, financeiroFindFirstArgs<ExtArgs>>): Prisma__financeiroClient<$Result.GetResult<Prisma.$financeiroPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Financeiro that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {financeiroFindFirstOrThrowArgs} args - Arguments to find a Financeiro
     * @example
     * // Get one Financeiro
     * const financeiro = await prisma.financeiro.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends financeiroFindFirstOrThrowArgs>(args?: SelectSubset<T, financeiroFindFirstOrThrowArgs<ExtArgs>>): Prisma__financeiroClient<$Result.GetResult<Prisma.$financeiroPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Financeiros that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {financeiroFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Financeiros
     * const financeiros = await prisma.financeiro.findMany()
     * 
     * // Get first 10 Financeiros
     * const financeiros = await prisma.financeiro.findMany({ take: 10 })
     * 
     * // Only select the `id_financeiro`
     * const financeiroWithId_financeiroOnly = await prisma.financeiro.findMany({ select: { id_financeiro: true } })
     * 
     */
    findMany<T extends financeiroFindManyArgs>(args?: SelectSubset<T, financeiroFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$financeiroPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Financeiro.
     * @param {financeiroCreateArgs} args - Arguments to create a Financeiro.
     * @example
     * // Create one Financeiro
     * const Financeiro = await prisma.financeiro.create({
     *   data: {
     *     // ... data to create a Financeiro
     *   }
     * })
     * 
     */
    create<T extends financeiroCreateArgs>(args: SelectSubset<T, financeiroCreateArgs<ExtArgs>>): Prisma__financeiroClient<$Result.GetResult<Prisma.$financeiroPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Financeiros.
     * @param {financeiroCreateManyArgs} args - Arguments to create many Financeiros.
     * @example
     * // Create many Financeiros
     * const financeiro = await prisma.financeiro.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends financeiroCreateManyArgs>(args?: SelectSubset<T, financeiroCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Financeiros and returns the data saved in the database.
     * @param {financeiroCreateManyAndReturnArgs} args - Arguments to create many Financeiros.
     * @example
     * // Create many Financeiros
     * const financeiro = await prisma.financeiro.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Financeiros and only return the `id_financeiro`
     * const financeiroWithId_financeiroOnly = await prisma.financeiro.createManyAndReturn({
     *   select: { id_financeiro: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends financeiroCreateManyAndReturnArgs>(args?: SelectSubset<T, financeiroCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$financeiroPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Financeiro.
     * @param {financeiroDeleteArgs} args - Arguments to delete one Financeiro.
     * @example
     * // Delete one Financeiro
     * const Financeiro = await prisma.financeiro.delete({
     *   where: {
     *     // ... filter to delete one Financeiro
     *   }
     * })
     * 
     */
    delete<T extends financeiroDeleteArgs>(args: SelectSubset<T, financeiroDeleteArgs<ExtArgs>>): Prisma__financeiroClient<$Result.GetResult<Prisma.$financeiroPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Financeiro.
     * @param {financeiroUpdateArgs} args - Arguments to update one Financeiro.
     * @example
     * // Update one Financeiro
     * const financeiro = await prisma.financeiro.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends financeiroUpdateArgs>(args: SelectSubset<T, financeiroUpdateArgs<ExtArgs>>): Prisma__financeiroClient<$Result.GetResult<Prisma.$financeiroPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Financeiros.
     * @param {financeiroDeleteManyArgs} args - Arguments to filter Financeiros to delete.
     * @example
     * // Delete a few Financeiros
     * const { count } = await prisma.financeiro.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends financeiroDeleteManyArgs>(args?: SelectSubset<T, financeiroDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Financeiros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {financeiroUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Financeiros
     * const financeiro = await prisma.financeiro.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends financeiroUpdateManyArgs>(args: SelectSubset<T, financeiroUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Financeiros and returns the data updated in the database.
     * @param {financeiroUpdateManyAndReturnArgs} args - Arguments to update many Financeiros.
     * @example
     * // Update many Financeiros
     * const financeiro = await prisma.financeiro.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Financeiros and only return the `id_financeiro`
     * const financeiroWithId_financeiroOnly = await prisma.financeiro.updateManyAndReturn({
     *   select: { id_financeiro: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends financeiroUpdateManyAndReturnArgs>(args: SelectSubset<T, financeiroUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$financeiroPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Financeiro.
     * @param {financeiroUpsertArgs} args - Arguments to update or create a Financeiro.
     * @example
     * // Update or create a Financeiro
     * const financeiro = await prisma.financeiro.upsert({
     *   create: {
     *     // ... data to create a Financeiro
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Financeiro we want to update
     *   }
     * })
     */
    upsert<T extends financeiroUpsertArgs>(args: SelectSubset<T, financeiroUpsertArgs<ExtArgs>>): Prisma__financeiroClient<$Result.GetResult<Prisma.$financeiroPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Financeiros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {financeiroCountArgs} args - Arguments to filter Financeiros to count.
     * @example
     * // Count the number of Financeiros
     * const count = await prisma.financeiro.count({
     *   where: {
     *     // ... the filter for the Financeiros we want to count
     *   }
     * })
    **/
    count<T extends financeiroCountArgs>(
      args?: Subset<T, financeiroCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FinanceiroCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Financeiro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinanceiroAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FinanceiroAggregateArgs>(args: Subset<T, FinanceiroAggregateArgs>): Prisma.PrismaPromise<GetFinanceiroAggregateType<T>>

    /**
     * Group by Financeiro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {financeiroGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends financeiroGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: financeiroGroupByArgs['orderBy'] }
        : { orderBy?: financeiroGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, financeiroGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFinanceiroGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the financeiro model
   */
  readonly fields: financeiroFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for financeiro.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__financeiroClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    compras<T extends financeiro$comprasArgs<ExtArgs> = {}>(args?: Subset<T, financeiro$comprasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$compraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    historicos<T extends financeiro$historicosArgs<ExtArgs> = {}>(args?: Subset<T, financeiro$historicosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$historico_previsaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the financeiro model
   */
  interface financeiroFieldRefs {
    readonly id_financeiro: FieldRef<"financeiro", 'Int'>
    readonly tipo: FieldRef<"financeiro", 'String'>
    readonly descricao: FieldRef<"financeiro", 'String'>
    readonly valor: FieldRef<"financeiro", 'Float'>
    readonly data_movimento: FieldRef<"financeiro", 'DateTime'>
    readonly status: FieldRef<"financeiro", 'String'>
  }
    

  // Custom InputTypes
  /**
   * financeiro findUnique
   */
  export type financeiroFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the financeiro
     */
    select?: financeiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the financeiro
     */
    omit?: financeiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: financeiroInclude<ExtArgs> | null
    /**
     * Filter, which financeiro to fetch.
     */
    where: financeiroWhereUniqueInput
  }

  /**
   * financeiro findUniqueOrThrow
   */
  export type financeiroFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the financeiro
     */
    select?: financeiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the financeiro
     */
    omit?: financeiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: financeiroInclude<ExtArgs> | null
    /**
     * Filter, which financeiro to fetch.
     */
    where: financeiroWhereUniqueInput
  }

  /**
   * financeiro findFirst
   */
  export type financeiroFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the financeiro
     */
    select?: financeiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the financeiro
     */
    omit?: financeiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: financeiroInclude<ExtArgs> | null
    /**
     * Filter, which financeiro to fetch.
     */
    where?: financeiroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of financeiros to fetch.
     */
    orderBy?: financeiroOrderByWithRelationInput | financeiroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for financeiros.
     */
    cursor?: financeiroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` financeiros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` financeiros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of financeiros.
     */
    distinct?: FinanceiroScalarFieldEnum | FinanceiroScalarFieldEnum[]
  }

  /**
   * financeiro findFirstOrThrow
   */
  export type financeiroFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the financeiro
     */
    select?: financeiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the financeiro
     */
    omit?: financeiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: financeiroInclude<ExtArgs> | null
    /**
     * Filter, which financeiro to fetch.
     */
    where?: financeiroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of financeiros to fetch.
     */
    orderBy?: financeiroOrderByWithRelationInput | financeiroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for financeiros.
     */
    cursor?: financeiroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` financeiros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` financeiros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of financeiros.
     */
    distinct?: FinanceiroScalarFieldEnum | FinanceiroScalarFieldEnum[]
  }

  /**
   * financeiro findMany
   */
  export type financeiroFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the financeiro
     */
    select?: financeiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the financeiro
     */
    omit?: financeiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: financeiroInclude<ExtArgs> | null
    /**
     * Filter, which financeiros to fetch.
     */
    where?: financeiroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of financeiros to fetch.
     */
    orderBy?: financeiroOrderByWithRelationInput | financeiroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing financeiros.
     */
    cursor?: financeiroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` financeiros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` financeiros.
     */
    skip?: number
    distinct?: FinanceiroScalarFieldEnum | FinanceiroScalarFieldEnum[]
  }

  /**
   * financeiro create
   */
  export type financeiroCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the financeiro
     */
    select?: financeiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the financeiro
     */
    omit?: financeiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: financeiroInclude<ExtArgs> | null
    /**
     * The data needed to create a financeiro.
     */
    data: XOR<financeiroCreateInput, financeiroUncheckedCreateInput>
  }

  /**
   * financeiro createMany
   */
  export type financeiroCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many financeiros.
     */
    data: financeiroCreateManyInput | financeiroCreateManyInput[]
  }

  /**
   * financeiro createManyAndReturn
   */
  export type financeiroCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the financeiro
     */
    select?: financeiroSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the financeiro
     */
    omit?: financeiroOmit<ExtArgs> | null
    /**
     * The data used to create many financeiros.
     */
    data: financeiroCreateManyInput | financeiroCreateManyInput[]
  }

  /**
   * financeiro update
   */
  export type financeiroUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the financeiro
     */
    select?: financeiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the financeiro
     */
    omit?: financeiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: financeiroInclude<ExtArgs> | null
    /**
     * The data needed to update a financeiro.
     */
    data: XOR<financeiroUpdateInput, financeiroUncheckedUpdateInput>
    /**
     * Choose, which financeiro to update.
     */
    where: financeiroWhereUniqueInput
  }

  /**
   * financeiro updateMany
   */
  export type financeiroUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update financeiros.
     */
    data: XOR<financeiroUpdateManyMutationInput, financeiroUncheckedUpdateManyInput>
    /**
     * Filter which financeiros to update
     */
    where?: financeiroWhereInput
    /**
     * Limit how many financeiros to update.
     */
    limit?: number
  }

  /**
   * financeiro updateManyAndReturn
   */
  export type financeiroUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the financeiro
     */
    select?: financeiroSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the financeiro
     */
    omit?: financeiroOmit<ExtArgs> | null
    /**
     * The data used to update financeiros.
     */
    data: XOR<financeiroUpdateManyMutationInput, financeiroUncheckedUpdateManyInput>
    /**
     * Filter which financeiros to update
     */
    where?: financeiroWhereInput
    /**
     * Limit how many financeiros to update.
     */
    limit?: number
  }

  /**
   * financeiro upsert
   */
  export type financeiroUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the financeiro
     */
    select?: financeiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the financeiro
     */
    omit?: financeiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: financeiroInclude<ExtArgs> | null
    /**
     * The filter to search for the financeiro to update in case it exists.
     */
    where: financeiroWhereUniqueInput
    /**
     * In case the financeiro found by the `where` argument doesn't exist, create a new financeiro with this data.
     */
    create: XOR<financeiroCreateInput, financeiroUncheckedCreateInput>
    /**
     * In case the financeiro was found with the provided `where` argument, update it with this data.
     */
    update: XOR<financeiroUpdateInput, financeiroUncheckedUpdateInput>
  }

  /**
   * financeiro delete
   */
  export type financeiroDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the financeiro
     */
    select?: financeiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the financeiro
     */
    omit?: financeiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: financeiroInclude<ExtArgs> | null
    /**
     * Filter which financeiro to delete.
     */
    where: financeiroWhereUniqueInput
  }

  /**
   * financeiro deleteMany
   */
  export type financeiroDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which financeiros to delete
     */
    where?: financeiroWhereInput
    /**
     * Limit how many financeiros to delete.
     */
    limit?: number
  }

  /**
   * financeiro.compras
   */
  export type financeiro$comprasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compra
     */
    select?: compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compra
     */
    omit?: compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compraInclude<ExtArgs> | null
    where?: compraWhereInput
    orderBy?: compraOrderByWithRelationInput | compraOrderByWithRelationInput[]
    cursor?: compraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CompraScalarFieldEnum | CompraScalarFieldEnum[]
  }

  /**
   * financeiro.historicos
   */
  export type financeiro$historicosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historico_previsao
     */
    select?: historico_previsaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historico_previsao
     */
    omit?: historico_previsaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historico_previsaoInclude<ExtArgs> | null
    where?: historico_previsaoWhereInput
    orderBy?: historico_previsaoOrderByWithRelationInput | historico_previsaoOrderByWithRelationInput[]
    cursor?: historico_previsaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Historico_previsaoScalarFieldEnum | Historico_previsaoScalarFieldEnum[]
  }

  /**
   * financeiro without action
   */
  export type financeiroDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the financeiro
     */
    select?: financeiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the financeiro
     */
    omit?: financeiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: financeiroInclude<ExtArgs> | null
  }


  /**
   * Model compra
   */

  export type AggregateCompra = {
    _count: CompraCountAggregateOutputType | null
    _avg: CompraAvgAggregateOutputType | null
    _sum: CompraSumAggregateOutputType | null
    _min: CompraMinAggregateOutputType | null
    _max: CompraMaxAggregateOutputType | null
  }

  export type CompraAvgAggregateOutputType = {
    id_compra: number | null
    id_produto: number | null
    id_fornecedor: number | null
    id_financeiro: number | null
    id_usuario: number | null
    valor_total: number | null
  }

  export type CompraSumAggregateOutputType = {
    id_compra: number | null
    id_produto: number | null
    id_fornecedor: number | null
    id_financeiro: number | null
    id_usuario: number | null
    valor_total: number | null
  }

  export type CompraMinAggregateOutputType = {
    id_compra: number | null
    id_produto: number | null
    id_fornecedor: number | null
    id_financeiro: number | null
    id_usuario: number | null
    data_pedido: Date | null
    data_recebimento: Date | null
    valor_total: number | null
    origem: string | null
    observacoes: string | null
  }

  export type CompraMaxAggregateOutputType = {
    id_compra: number | null
    id_produto: number | null
    id_fornecedor: number | null
    id_financeiro: number | null
    id_usuario: number | null
    data_pedido: Date | null
    data_recebimento: Date | null
    valor_total: number | null
    origem: string | null
    observacoes: string | null
  }

  export type CompraCountAggregateOutputType = {
    id_compra: number
    id_produto: number
    id_fornecedor: number
    id_financeiro: number
    id_usuario: number
    data_pedido: number
    data_recebimento: number
    valor_total: number
    origem: number
    observacoes: number
    _all: number
  }


  export type CompraAvgAggregateInputType = {
    id_compra?: true
    id_produto?: true
    id_fornecedor?: true
    id_financeiro?: true
    id_usuario?: true
    valor_total?: true
  }

  export type CompraSumAggregateInputType = {
    id_compra?: true
    id_produto?: true
    id_fornecedor?: true
    id_financeiro?: true
    id_usuario?: true
    valor_total?: true
  }

  export type CompraMinAggregateInputType = {
    id_compra?: true
    id_produto?: true
    id_fornecedor?: true
    id_financeiro?: true
    id_usuario?: true
    data_pedido?: true
    data_recebimento?: true
    valor_total?: true
    origem?: true
    observacoes?: true
  }

  export type CompraMaxAggregateInputType = {
    id_compra?: true
    id_produto?: true
    id_fornecedor?: true
    id_financeiro?: true
    id_usuario?: true
    data_pedido?: true
    data_recebimento?: true
    valor_total?: true
    origem?: true
    observacoes?: true
  }

  export type CompraCountAggregateInputType = {
    id_compra?: true
    id_produto?: true
    id_fornecedor?: true
    id_financeiro?: true
    id_usuario?: true
    data_pedido?: true
    data_recebimento?: true
    valor_total?: true
    origem?: true
    observacoes?: true
    _all?: true
  }

  export type CompraAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which compra to aggregate.
     */
    where?: compraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of compras to fetch.
     */
    orderBy?: compraOrderByWithRelationInput | compraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: compraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` compras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned compras
    **/
    _count?: true | CompraCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CompraAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CompraSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CompraMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CompraMaxAggregateInputType
  }

  export type GetCompraAggregateType<T extends CompraAggregateArgs> = {
        [P in keyof T & keyof AggregateCompra]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCompra[P]>
      : GetScalarType<T[P], AggregateCompra[P]>
  }




  export type compraGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: compraWhereInput
    orderBy?: compraOrderByWithAggregationInput | compraOrderByWithAggregationInput[]
    by: CompraScalarFieldEnum[] | CompraScalarFieldEnum
    having?: compraScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CompraCountAggregateInputType | true
    _avg?: CompraAvgAggregateInputType
    _sum?: CompraSumAggregateInputType
    _min?: CompraMinAggregateInputType
    _max?: CompraMaxAggregateInputType
  }

  export type CompraGroupByOutputType = {
    id_compra: number
    id_produto: number
    id_fornecedor: number
    id_financeiro: number
    id_usuario: number
    data_pedido: Date
    data_recebimento: Date | null
    valor_total: number
    origem: string | null
    observacoes: string | null
    _count: CompraCountAggregateOutputType | null
    _avg: CompraAvgAggregateOutputType | null
    _sum: CompraSumAggregateOutputType | null
    _min: CompraMinAggregateOutputType | null
    _max: CompraMaxAggregateOutputType | null
  }

  type GetCompraGroupByPayload<T extends compraGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CompraGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CompraGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CompraGroupByOutputType[P]>
            : GetScalarType<T[P], CompraGroupByOutputType[P]>
        }
      >
    >


  export type compraSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_compra?: boolean
    id_produto?: boolean
    id_fornecedor?: boolean
    id_financeiro?: boolean
    id_usuario?: boolean
    data_pedido?: boolean
    data_recebimento?: boolean
    valor_total?: boolean
    origem?: boolean
    observacoes?: boolean
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    fornecedor?: boolean | fornecedorDefaultArgs<ExtArgs>
    financeiro?: boolean | financeiroDefaultArgs<ExtArgs>
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["compra"]>

  export type compraSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_compra?: boolean
    id_produto?: boolean
    id_fornecedor?: boolean
    id_financeiro?: boolean
    id_usuario?: boolean
    data_pedido?: boolean
    data_recebimento?: boolean
    valor_total?: boolean
    origem?: boolean
    observacoes?: boolean
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    fornecedor?: boolean | fornecedorDefaultArgs<ExtArgs>
    financeiro?: boolean | financeiroDefaultArgs<ExtArgs>
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["compra"]>

  export type compraSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_compra?: boolean
    id_produto?: boolean
    id_fornecedor?: boolean
    id_financeiro?: boolean
    id_usuario?: boolean
    data_pedido?: boolean
    data_recebimento?: boolean
    valor_total?: boolean
    origem?: boolean
    observacoes?: boolean
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    fornecedor?: boolean | fornecedorDefaultArgs<ExtArgs>
    financeiro?: boolean | financeiroDefaultArgs<ExtArgs>
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["compra"]>

  export type compraSelectScalar = {
    id_compra?: boolean
    id_produto?: boolean
    id_fornecedor?: boolean
    id_financeiro?: boolean
    id_usuario?: boolean
    data_pedido?: boolean
    data_recebimento?: boolean
    valor_total?: boolean
    origem?: boolean
    observacoes?: boolean
  }

  export type compraOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_compra" | "id_produto" | "id_fornecedor" | "id_financeiro" | "id_usuario" | "data_pedido" | "data_recebimento" | "valor_total" | "origem" | "observacoes", ExtArgs["result"]["compra"]>
  export type compraInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    fornecedor?: boolean | fornecedorDefaultArgs<ExtArgs>
    financeiro?: boolean | financeiroDefaultArgs<ExtArgs>
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }
  export type compraIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    fornecedor?: boolean | fornecedorDefaultArgs<ExtArgs>
    financeiro?: boolean | financeiroDefaultArgs<ExtArgs>
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }
  export type compraIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    fornecedor?: boolean | fornecedorDefaultArgs<ExtArgs>
    financeiro?: boolean | financeiroDefaultArgs<ExtArgs>
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }

  export type $compraPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "compra"
    objects: {
      produto: Prisma.$produtoPayload<ExtArgs>
      fornecedor: Prisma.$fornecedorPayload<ExtArgs>
      financeiro: Prisma.$financeiroPayload<ExtArgs>
      usuario: Prisma.$usuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_compra: number
      id_produto: number
      id_fornecedor: number
      id_financeiro: number
      id_usuario: number
      data_pedido: Date
      data_recebimento: Date | null
      valor_total: number
      origem: string | null
      observacoes: string | null
    }, ExtArgs["result"]["compra"]>
    composites: {}
  }

  type compraGetPayload<S extends boolean | null | undefined | compraDefaultArgs> = $Result.GetResult<Prisma.$compraPayload, S>

  type compraCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<compraFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CompraCountAggregateInputType | true
    }

  export interface compraDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['compra'], meta: { name: 'compra' } }
    /**
     * Find zero or one Compra that matches the filter.
     * @param {compraFindUniqueArgs} args - Arguments to find a Compra
     * @example
     * // Get one Compra
     * const compra = await prisma.compra.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends compraFindUniqueArgs>(args: SelectSubset<T, compraFindUniqueArgs<ExtArgs>>): Prisma__compraClient<$Result.GetResult<Prisma.$compraPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Compra that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {compraFindUniqueOrThrowArgs} args - Arguments to find a Compra
     * @example
     * // Get one Compra
     * const compra = await prisma.compra.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends compraFindUniqueOrThrowArgs>(args: SelectSubset<T, compraFindUniqueOrThrowArgs<ExtArgs>>): Prisma__compraClient<$Result.GetResult<Prisma.$compraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Compra that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {compraFindFirstArgs} args - Arguments to find a Compra
     * @example
     * // Get one Compra
     * const compra = await prisma.compra.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends compraFindFirstArgs>(args?: SelectSubset<T, compraFindFirstArgs<ExtArgs>>): Prisma__compraClient<$Result.GetResult<Prisma.$compraPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Compra that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {compraFindFirstOrThrowArgs} args - Arguments to find a Compra
     * @example
     * // Get one Compra
     * const compra = await prisma.compra.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends compraFindFirstOrThrowArgs>(args?: SelectSubset<T, compraFindFirstOrThrowArgs<ExtArgs>>): Prisma__compraClient<$Result.GetResult<Prisma.$compraPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Compras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {compraFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Compras
     * const compras = await prisma.compra.findMany()
     * 
     * // Get first 10 Compras
     * const compras = await prisma.compra.findMany({ take: 10 })
     * 
     * // Only select the `id_compra`
     * const compraWithId_compraOnly = await prisma.compra.findMany({ select: { id_compra: true } })
     * 
     */
    findMany<T extends compraFindManyArgs>(args?: SelectSubset<T, compraFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$compraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Compra.
     * @param {compraCreateArgs} args - Arguments to create a Compra.
     * @example
     * // Create one Compra
     * const Compra = await prisma.compra.create({
     *   data: {
     *     // ... data to create a Compra
     *   }
     * })
     * 
     */
    create<T extends compraCreateArgs>(args: SelectSubset<T, compraCreateArgs<ExtArgs>>): Prisma__compraClient<$Result.GetResult<Prisma.$compraPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Compras.
     * @param {compraCreateManyArgs} args - Arguments to create many Compras.
     * @example
     * // Create many Compras
     * const compra = await prisma.compra.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends compraCreateManyArgs>(args?: SelectSubset<T, compraCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Compras and returns the data saved in the database.
     * @param {compraCreateManyAndReturnArgs} args - Arguments to create many Compras.
     * @example
     * // Create many Compras
     * const compra = await prisma.compra.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Compras and only return the `id_compra`
     * const compraWithId_compraOnly = await prisma.compra.createManyAndReturn({
     *   select: { id_compra: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends compraCreateManyAndReturnArgs>(args?: SelectSubset<T, compraCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$compraPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Compra.
     * @param {compraDeleteArgs} args - Arguments to delete one Compra.
     * @example
     * // Delete one Compra
     * const Compra = await prisma.compra.delete({
     *   where: {
     *     // ... filter to delete one Compra
     *   }
     * })
     * 
     */
    delete<T extends compraDeleteArgs>(args: SelectSubset<T, compraDeleteArgs<ExtArgs>>): Prisma__compraClient<$Result.GetResult<Prisma.$compraPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Compra.
     * @param {compraUpdateArgs} args - Arguments to update one Compra.
     * @example
     * // Update one Compra
     * const compra = await prisma.compra.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends compraUpdateArgs>(args: SelectSubset<T, compraUpdateArgs<ExtArgs>>): Prisma__compraClient<$Result.GetResult<Prisma.$compraPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Compras.
     * @param {compraDeleteManyArgs} args - Arguments to filter Compras to delete.
     * @example
     * // Delete a few Compras
     * const { count } = await prisma.compra.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends compraDeleteManyArgs>(args?: SelectSubset<T, compraDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Compras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {compraUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Compras
     * const compra = await prisma.compra.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends compraUpdateManyArgs>(args: SelectSubset<T, compraUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Compras and returns the data updated in the database.
     * @param {compraUpdateManyAndReturnArgs} args - Arguments to update many Compras.
     * @example
     * // Update many Compras
     * const compra = await prisma.compra.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Compras and only return the `id_compra`
     * const compraWithId_compraOnly = await prisma.compra.updateManyAndReturn({
     *   select: { id_compra: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends compraUpdateManyAndReturnArgs>(args: SelectSubset<T, compraUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$compraPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Compra.
     * @param {compraUpsertArgs} args - Arguments to update or create a Compra.
     * @example
     * // Update or create a Compra
     * const compra = await prisma.compra.upsert({
     *   create: {
     *     // ... data to create a Compra
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Compra we want to update
     *   }
     * })
     */
    upsert<T extends compraUpsertArgs>(args: SelectSubset<T, compraUpsertArgs<ExtArgs>>): Prisma__compraClient<$Result.GetResult<Prisma.$compraPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Compras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {compraCountArgs} args - Arguments to filter Compras to count.
     * @example
     * // Count the number of Compras
     * const count = await prisma.compra.count({
     *   where: {
     *     // ... the filter for the Compras we want to count
     *   }
     * })
    **/
    count<T extends compraCountArgs>(
      args?: Subset<T, compraCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CompraCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Compra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompraAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CompraAggregateArgs>(args: Subset<T, CompraAggregateArgs>): Prisma.PrismaPromise<GetCompraAggregateType<T>>

    /**
     * Group by Compra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {compraGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends compraGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: compraGroupByArgs['orderBy'] }
        : { orderBy?: compraGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, compraGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCompraGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the compra model
   */
  readonly fields: compraFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for compra.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__compraClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    produto<T extends produtoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, produtoDefaultArgs<ExtArgs>>): Prisma__produtoClient<$Result.GetResult<Prisma.$produtoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    fornecedor<T extends fornecedorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, fornecedorDefaultArgs<ExtArgs>>): Prisma__fornecedorClient<$Result.GetResult<Prisma.$fornecedorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    financeiro<T extends financeiroDefaultArgs<ExtArgs> = {}>(args?: Subset<T, financeiroDefaultArgs<ExtArgs>>): Prisma__financeiroClient<$Result.GetResult<Prisma.$financeiroPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuario<T extends usuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuarioDefaultArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the compra model
   */
  interface compraFieldRefs {
    readonly id_compra: FieldRef<"compra", 'Int'>
    readonly id_produto: FieldRef<"compra", 'Int'>
    readonly id_fornecedor: FieldRef<"compra", 'Int'>
    readonly id_financeiro: FieldRef<"compra", 'Int'>
    readonly id_usuario: FieldRef<"compra", 'Int'>
    readonly data_pedido: FieldRef<"compra", 'DateTime'>
    readonly data_recebimento: FieldRef<"compra", 'DateTime'>
    readonly valor_total: FieldRef<"compra", 'Float'>
    readonly origem: FieldRef<"compra", 'String'>
    readonly observacoes: FieldRef<"compra", 'String'>
  }
    

  // Custom InputTypes
  /**
   * compra findUnique
   */
  export type compraFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compra
     */
    select?: compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compra
     */
    omit?: compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compraInclude<ExtArgs> | null
    /**
     * Filter, which compra to fetch.
     */
    where: compraWhereUniqueInput
  }

  /**
   * compra findUniqueOrThrow
   */
  export type compraFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compra
     */
    select?: compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compra
     */
    omit?: compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compraInclude<ExtArgs> | null
    /**
     * Filter, which compra to fetch.
     */
    where: compraWhereUniqueInput
  }

  /**
   * compra findFirst
   */
  export type compraFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compra
     */
    select?: compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compra
     */
    omit?: compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compraInclude<ExtArgs> | null
    /**
     * Filter, which compra to fetch.
     */
    where?: compraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of compras to fetch.
     */
    orderBy?: compraOrderByWithRelationInput | compraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for compras.
     */
    cursor?: compraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` compras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of compras.
     */
    distinct?: CompraScalarFieldEnum | CompraScalarFieldEnum[]
  }

  /**
   * compra findFirstOrThrow
   */
  export type compraFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compra
     */
    select?: compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compra
     */
    omit?: compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compraInclude<ExtArgs> | null
    /**
     * Filter, which compra to fetch.
     */
    where?: compraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of compras to fetch.
     */
    orderBy?: compraOrderByWithRelationInput | compraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for compras.
     */
    cursor?: compraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` compras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of compras.
     */
    distinct?: CompraScalarFieldEnum | CompraScalarFieldEnum[]
  }

  /**
   * compra findMany
   */
  export type compraFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compra
     */
    select?: compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compra
     */
    omit?: compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compraInclude<ExtArgs> | null
    /**
     * Filter, which compras to fetch.
     */
    where?: compraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of compras to fetch.
     */
    orderBy?: compraOrderByWithRelationInput | compraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing compras.
     */
    cursor?: compraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` compras.
     */
    skip?: number
    distinct?: CompraScalarFieldEnum | CompraScalarFieldEnum[]
  }

  /**
   * compra create
   */
  export type compraCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compra
     */
    select?: compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compra
     */
    omit?: compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compraInclude<ExtArgs> | null
    /**
     * The data needed to create a compra.
     */
    data: XOR<compraCreateInput, compraUncheckedCreateInput>
  }

  /**
   * compra createMany
   */
  export type compraCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many compras.
     */
    data: compraCreateManyInput | compraCreateManyInput[]
  }

  /**
   * compra createManyAndReturn
   */
  export type compraCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compra
     */
    select?: compraSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the compra
     */
    omit?: compraOmit<ExtArgs> | null
    /**
     * The data used to create many compras.
     */
    data: compraCreateManyInput | compraCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compraIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * compra update
   */
  export type compraUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compra
     */
    select?: compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compra
     */
    omit?: compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compraInclude<ExtArgs> | null
    /**
     * The data needed to update a compra.
     */
    data: XOR<compraUpdateInput, compraUncheckedUpdateInput>
    /**
     * Choose, which compra to update.
     */
    where: compraWhereUniqueInput
  }

  /**
   * compra updateMany
   */
  export type compraUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update compras.
     */
    data: XOR<compraUpdateManyMutationInput, compraUncheckedUpdateManyInput>
    /**
     * Filter which compras to update
     */
    where?: compraWhereInput
    /**
     * Limit how many compras to update.
     */
    limit?: number
  }

  /**
   * compra updateManyAndReturn
   */
  export type compraUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compra
     */
    select?: compraSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the compra
     */
    omit?: compraOmit<ExtArgs> | null
    /**
     * The data used to update compras.
     */
    data: XOR<compraUpdateManyMutationInput, compraUncheckedUpdateManyInput>
    /**
     * Filter which compras to update
     */
    where?: compraWhereInput
    /**
     * Limit how many compras to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compraIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * compra upsert
   */
  export type compraUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compra
     */
    select?: compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compra
     */
    omit?: compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compraInclude<ExtArgs> | null
    /**
     * The filter to search for the compra to update in case it exists.
     */
    where: compraWhereUniqueInput
    /**
     * In case the compra found by the `where` argument doesn't exist, create a new compra with this data.
     */
    create: XOR<compraCreateInput, compraUncheckedCreateInput>
    /**
     * In case the compra was found with the provided `where` argument, update it with this data.
     */
    update: XOR<compraUpdateInput, compraUncheckedUpdateInput>
  }

  /**
   * compra delete
   */
  export type compraDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compra
     */
    select?: compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compra
     */
    omit?: compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compraInclude<ExtArgs> | null
    /**
     * Filter which compra to delete.
     */
    where: compraWhereUniqueInput
  }

  /**
   * compra deleteMany
   */
  export type compraDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which compras to delete
     */
    where?: compraWhereInput
    /**
     * Limit how many compras to delete.
     */
    limit?: number
  }

  /**
   * compra without action
   */
  export type compraDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compra
     */
    select?: compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compra
     */
    omit?: compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compraInclude<ExtArgs> | null
  }


  /**
   * Model sala
   */

  export type AggregateSala = {
    _count: SalaCountAggregateOutputType | null
    _avg: SalaAvgAggregateOutputType | null
    _sum: SalaSumAggregateOutputType | null
    _min: SalaMinAggregateOutputType | null
    _max: SalaMaxAggregateOutputType | null
  }

  export type SalaAvgAggregateOutputType = {
    id_sala: number | null
    capacidade: number | null
  }

  export type SalaSumAggregateOutputType = {
    id_sala: number | null
    capacidade: number | null
  }

  export type SalaMinAggregateOutputType = {
    id_sala: number | null
    nome_sala: string | null
    descricao: string | null
    capacidade: number | null
    localizacao: string | null
  }

  export type SalaMaxAggregateOutputType = {
    id_sala: number | null
    nome_sala: string | null
    descricao: string | null
    capacidade: number | null
    localizacao: string | null
  }

  export type SalaCountAggregateOutputType = {
    id_sala: number
    nome_sala: number
    descricao: number
    capacidade: number
    localizacao: number
    _all: number
  }


  export type SalaAvgAggregateInputType = {
    id_sala?: true
    capacidade?: true
  }

  export type SalaSumAggregateInputType = {
    id_sala?: true
    capacidade?: true
  }

  export type SalaMinAggregateInputType = {
    id_sala?: true
    nome_sala?: true
    descricao?: true
    capacidade?: true
    localizacao?: true
  }

  export type SalaMaxAggregateInputType = {
    id_sala?: true
    nome_sala?: true
    descricao?: true
    capacidade?: true
    localizacao?: true
  }

  export type SalaCountAggregateInputType = {
    id_sala?: true
    nome_sala?: true
    descricao?: true
    capacidade?: true
    localizacao?: true
    _all?: true
  }

  export type SalaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sala to aggregate.
     */
    where?: salaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of salas to fetch.
     */
    orderBy?: salaOrderByWithRelationInput | salaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: salaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` salas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` salas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned salas
    **/
    _count?: true | SalaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SalaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SalaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SalaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SalaMaxAggregateInputType
  }

  export type GetSalaAggregateType<T extends SalaAggregateArgs> = {
        [P in keyof T & keyof AggregateSala]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSala[P]>
      : GetScalarType<T[P], AggregateSala[P]>
  }




  export type salaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: salaWhereInput
    orderBy?: salaOrderByWithAggregationInput | salaOrderByWithAggregationInput[]
    by: SalaScalarFieldEnum[] | SalaScalarFieldEnum
    having?: salaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SalaCountAggregateInputType | true
    _avg?: SalaAvgAggregateInputType
    _sum?: SalaSumAggregateInputType
    _min?: SalaMinAggregateInputType
    _max?: SalaMaxAggregateInputType
  }

  export type SalaGroupByOutputType = {
    id_sala: number
    nome_sala: string
    descricao: string | null
    capacidade: number
    localizacao: string | null
    _count: SalaCountAggregateOutputType | null
    _avg: SalaAvgAggregateOutputType | null
    _sum: SalaSumAggregateOutputType | null
    _min: SalaMinAggregateOutputType | null
    _max: SalaMaxAggregateOutputType | null
  }

  type GetSalaGroupByPayload<T extends salaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SalaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SalaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SalaGroupByOutputType[P]>
            : GetScalarType<T[P], SalaGroupByOutputType[P]>
        }
      >
    >


  export type salaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_sala?: boolean
    nome_sala?: boolean
    descricao?: boolean
    capacidade?: boolean
    localizacao?: boolean
    estoques?: boolean | sala$estoquesArgs<ExtArgs>
    _count?: boolean | SalaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sala"]>

  export type salaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_sala?: boolean
    nome_sala?: boolean
    descricao?: boolean
    capacidade?: boolean
    localizacao?: boolean
  }, ExtArgs["result"]["sala"]>

  export type salaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_sala?: boolean
    nome_sala?: boolean
    descricao?: boolean
    capacidade?: boolean
    localizacao?: boolean
  }, ExtArgs["result"]["sala"]>

  export type salaSelectScalar = {
    id_sala?: boolean
    nome_sala?: boolean
    descricao?: boolean
    capacidade?: boolean
    localizacao?: boolean
  }

  export type salaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_sala" | "nome_sala" | "descricao" | "capacidade" | "localizacao", ExtArgs["result"]["sala"]>
  export type salaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estoques?: boolean | sala$estoquesArgs<ExtArgs>
    _count?: boolean | SalaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type salaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type salaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $salaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sala"
    objects: {
      estoques: Prisma.$estoquePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_sala: number
      nome_sala: string
      descricao: string | null
      capacidade: number
      localizacao: string | null
    }, ExtArgs["result"]["sala"]>
    composites: {}
  }

  type salaGetPayload<S extends boolean | null | undefined | salaDefaultArgs> = $Result.GetResult<Prisma.$salaPayload, S>

  type salaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<salaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SalaCountAggregateInputType | true
    }

  export interface salaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sala'], meta: { name: 'sala' } }
    /**
     * Find zero or one Sala that matches the filter.
     * @param {salaFindUniqueArgs} args - Arguments to find a Sala
     * @example
     * // Get one Sala
     * const sala = await prisma.sala.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends salaFindUniqueArgs>(args: SelectSubset<T, salaFindUniqueArgs<ExtArgs>>): Prisma__salaClient<$Result.GetResult<Prisma.$salaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sala that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {salaFindUniqueOrThrowArgs} args - Arguments to find a Sala
     * @example
     * // Get one Sala
     * const sala = await prisma.sala.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends salaFindUniqueOrThrowArgs>(args: SelectSubset<T, salaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__salaClient<$Result.GetResult<Prisma.$salaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sala that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {salaFindFirstArgs} args - Arguments to find a Sala
     * @example
     * // Get one Sala
     * const sala = await prisma.sala.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends salaFindFirstArgs>(args?: SelectSubset<T, salaFindFirstArgs<ExtArgs>>): Prisma__salaClient<$Result.GetResult<Prisma.$salaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sala that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {salaFindFirstOrThrowArgs} args - Arguments to find a Sala
     * @example
     * // Get one Sala
     * const sala = await prisma.sala.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends salaFindFirstOrThrowArgs>(args?: SelectSubset<T, salaFindFirstOrThrowArgs<ExtArgs>>): Prisma__salaClient<$Result.GetResult<Prisma.$salaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Salas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {salaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Salas
     * const salas = await prisma.sala.findMany()
     * 
     * // Get first 10 Salas
     * const salas = await prisma.sala.findMany({ take: 10 })
     * 
     * // Only select the `id_sala`
     * const salaWithId_salaOnly = await prisma.sala.findMany({ select: { id_sala: true } })
     * 
     */
    findMany<T extends salaFindManyArgs>(args?: SelectSubset<T, salaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$salaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sala.
     * @param {salaCreateArgs} args - Arguments to create a Sala.
     * @example
     * // Create one Sala
     * const Sala = await prisma.sala.create({
     *   data: {
     *     // ... data to create a Sala
     *   }
     * })
     * 
     */
    create<T extends salaCreateArgs>(args: SelectSubset<T, salaCreateArgs<ExtArgs>>): Prisma__salaClient<$Result.GetResult<Prisma.$salaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Salas.
     * @param {salaCreateManyArgs} args - Arguments to create many Salas.
     * @example
     * // Create many Salas
     * const sala = await prisma.sala.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends salaCreateManyArgs>(args?: SelectSubset<T, salaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Salas and returns the data saved in the database.
     * @param {salaCreateManyAndReturnArgs} args - Arguments to create many Salas.
     * @example
     * // Create many Salas
     * const sala = await prisma.sala.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Salas and only return the `id_sala`
     * const salaWithId_salaOnly = await prisma.sala.createManyAndReturn({
     *   select: { id_sala: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends salaCreateManyAndReturnArgs>(args?: SelectSubset<T, salaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$salaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Sala.
     * @param {salaDeleteArgs} args - Arguments to delete one Sala.
     * @example
     * // Delete one Sala
     * const Sala = await prisma.sala.delete({
     *   where: {
     *     // ... filter to delete one Sala
     *   }
     * })
     * 
     */
    delete<T extends salaDeleteArgs>(args: SelectSubset<T, salaDeleteArgs<ExtArgs>>): Prisma__salaClient<$Result.GetResult<Prisma.$salaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sala.
     * @param {salaUpdateArgs} args - Arguments to update one Sala.
     * @example
     * // Update one Sala
     * const sala = await prisma.sala.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends salaUpdateArgs>(args: SelectSubset<T, salaUpdateArgs<ExtArgs>>): Prisma__salaClient<$Result.GetResult<Prisma.$salaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Salas.
     * @param {salaDeleteManyArgs} args - Arguments to filter Salas to delete.
     * @example
     * // Delete a few Salas
     * const { count } = await prisma.sala.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends salaDeleteManyArgs>(args?: SelectSubset<T, salaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Salas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {salaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Salas
     * const sala = await prisma.sala.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends salaUpdateManyArgs>(args: SelectSubset<T, salaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Salas and returns the data updated in the database.
     * @param {salaUpdateManyAndReturnArgs} args - Arguments to update many Salas.
     * @example
     * // Update many Salas
     * const sala = await prisma.sala.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Salas and only return the `id_sala`
     * const salaWithId_salaOnly = await prisma.sala.updateManyAndReturn({
     *   select: { id_sala: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends salaUpdateManyAndReturnArgs>(args: SelectSubset<T, salaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$salaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Sala.
     * @param {salaUpsertArgs} args - Arguments to update or create a Sala.
     * @example
     * // Update or create a Sala
     * const sala = await prisma.sala.upsert({
     *   create: {
     *     // ... data to create a Sala
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sala we want to update
     *   }
     * })
     */
    upsert<T extends salaUpsertArgs>(args: SelectSubset<T, salaUpsertArgs<ExtArgs>>): Prisma__salaClient<$Result.GetResult<Prisma.$salaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Salas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {salaCountArgs} args - Arguments to filter Salas to count.
     * @example
     * // Count the number of Salas
     * const count = await prisma.sala.count({
     *   where: {
     *     // ... the filter for the Salas we want to count
     *   }
     * })
    **/
    count<T extends salaCountArgs>(
      args?: Subset<T, salaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SalaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sala.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SalaAggregateArgs>(args: Subset<T, SalaAggregateArgs>): Prisma.PrismaPromise<GetSalaAggregateType<T>>

    /**
     * Group by Sala.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {salaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends salaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: salaGroupByArgs['orderBy'] }
        : { orderBy?: salaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, salaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSalaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sala model
   */
  readonly fields: salaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sala.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__salaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    estoques<T extends sala$estoquesArgs<ExtArgs> = {}>(args?: Subset<T, sala$estoquesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estoquePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sala model
   */
  interface salaFieldRefs {
    readonly id_sala: FieldRef<"sala", 'Int'>
    readonly nome_sala: FieldRef<"sala", 'String'>
    readonly descricao: FieldRef<"sala", 'String'>
    readonly capacidade: FieldRef<"sala", 'Int'>
    readonly localizacao: FieldRef<"sala", 'String'>
  }
    

  // Custom InputTypes
  /**
   * sala findUnique
   */
  export type salaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sala
     */
    select?: salaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sala
     */
    omit?: salaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salaInclude<ExtArgs> | null
    /**
     * Filter, which sala to fetch.
     */
    where: salaWhereUniqueInput
  }

  /**
   * sala findUniqueOrThrow
   */
  export type salaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sala
     */
    select?: salaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sala
     */
    omit?: salaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salaInclude<ExtArgs> | null
    /**
     * Filter, which sala to fetch.
     */
    where: salaWhereUniqueInput
  }

  /**
   * sala findFirst
   */
  export type salaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sala
     */
    select?: salaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sala
     */
    omit?: salaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salaInclude<ExtArgs> | null
    /**
     * Filter, which sala to fetch.
     */
    where?: salaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of salas to fetch.
     */
    orderBy?: salaOrderByWithRelationInput | salaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for salas.
     */
    cursor?: salaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` salas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` salas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of salas.
     */
    distinct?: SalaScalarFieldEnum | SalaScalarFieldEnum[]
  }

  /**
   * sala findFirstOrThrow
   */
  export type salaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sala
     */
    select?: salaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sala
     */
    omit?: salaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salaInclude<ExtArgs> | null
    /**
     * Filter, which sala to fetch.
     */
    where?: salaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of salas to fetch.
     */
    orderBy?: salaOrderByWithRelationInput | salaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for salas.
     */
    cursor?: salaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` salas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` salas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of salas.
     */
    distinct?: SalaScalarFieldEnum | SalaScalarFieldEnum[]
  }

  /**
   * sala findMany
   */
  export type salaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sala
     */
    select?: salaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sala
     */
    omit?: salaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salaInclude<ExtArgs> | null
    /**
     * Filter, which salas to fetch.
     */
    where?: salaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of salas to fetch.
     */
    orderBy?: salaOrderByWithRelationInput | salaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing salas.
     */
    cursor?: salaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` salas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` salas.
     */
    skip?: number
    distinct?: SalaScalarFieldEnum | SalaScalarFieldEnum[]
  }

  /**
   * sala create
   */
  export type salaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sala
     */
    select?: salaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sala
     */
    omit?: salaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salaInclude<ExtArgs> | null
    /**
     * The data needed to create a sala.
     */
    data: XOR<salaCreateInput, salaUncheckedCreateInput>
  }

  /**
   * sala createMany
   */
  export type salaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many salas.
     */
    data: salaCreateManyInput | salaCreateManyInput[]
  }

  /**
   * sala createManyAndReturn
   */
  export type salaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sala
     */
    select?: salaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the sala
     */
    omit?: salaOmit<ExtArgs> | null
    /**
     * The data used to create many salas.
     */
    data: salaCreateManyInput | salaCreateManyInput[]
  }

  /**
   * sala update
   */
  export type salaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sala
     */
    select?: salaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sala
     */
    omit?: salaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salaInclude<ExtArgs> | null
    /**
     * The data needed to update a sala.
     */
    data: XOR<salaUpdateInput, salaUncheckedUpdateInput>
    /**
     * Choose, which sala to update.
     */
    where: salaWhereUniqueInput
  }

  /**
   * sala updateMany
   */
  export type salaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update salas.
     */
    data: XOR<salaUpdateManyMutationInput, salaUncheckedUpdateManyInput>
    /**
     * Filter which salas to update
     */
    where?: salaWhereInput
    /**
     * Limit how many salas to update.
     */
    limit?: number
  }

  /**
   * sala updateManyAndReturn
   */
  export type salaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sala
     */
    select?: salaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the sala
     */
    omit?: salaOmit<ExtArgs> | null
    /**
     * The data used to update salas.
     */
    data: XOR<salaUpdateManyMutationInput, salaUncheckedUpdateManyInput>
    /**
     * Filter which salas to update
     */
    where?: salaWhereInput
    /**
     * Limit how many salas to update.
     */
    limit?: number
  }

  /**
   * sala upsert
   */
  export type salaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sala
     */
    select?: salaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sala
     */
    omit?: salaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salaInclude<ExtArgs> | null
    /**
     * The filter to search for the sala to update in case it exists.
     */
    where: salaWhereUniqueInput
    /**
     * In case the sala found by the `where` argument doesn't exist, create a new sala with this data.
     */
    create: XOR<salaCreateInput, salaUncheckedCreateInput>
    /**
     * In case the sala was found with the provided `where` argument, update it with this data.
     */
    update: XOR<salaUpdateInput, salaUncheckedUpdateInput>
  }

  /**
   * sala delete
   */
  export type salaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sala
     */
    select?: salaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sala
     */
    omit?: salaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salaInclude<ExtArgs> | null
    /**
     * Filter which sala to delete.
     */
    where: salaWhereUniqueInput
  }

  /**
   * sala deleteMany
   */
  export type salaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which salas to delete
     */
    where?: salaWhereInput
    /**
     * Limit how many salas to delete.
     */
    limit?: number
  }

  /**
   * sala.estoques
   */
  export type sala$estoquesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estoque
     */
    select?: estoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estoque
     */
    omit?: estoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estoqueInclude<ExtArgs> | null
    where?: estoqueWhereInput
    orderBy?: estoqueOrderByWithRelationInput | estoqueOrderByWithRelationInput[]
    cursor?: estoqueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EstoqueScalarFieldEnum | EstoqueScalarFieldEnum[]
  }

  /**
   * sala without action
   */
  export type salaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sala
     */
    select?: salaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sala
     */
    omit?: salaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salaInclude<ExtArgs> | null
  }


  /**
   * Model movimentacao
   */

  export type AggregateMovimentacao = {
    _count: MovimentacaoCountAggregateOutputType | null
    _avg: MovimentacaoAvgAggregateOutputType | null
    _sum: MovimentacaoSumAggregateOutputType | null
    _min: MovimentacaoMinAggregateOutputType | null
    _max: MovimentacaoMaxAggregateOutputType | null
  }

  export type MovimentacaoAvgAggregateOutputType = {
    id_movimentacao: number | null
    id_produto: number | null
    id_usuario: number | null
  }

  export type MovimentacaoSumAggregateOutputType = {
    id_movimentacao: number | null
    id_produto: number | null
    id_usuario: number | null
  }

  export type MovimentacaoMinAggregateOutputType = {
    id_movimentacao: number | null
    id_produto: number | null
    id_usuario: number | null
    tipo_movimentacao: string | null
    origem: string | null
    data_movimento: Date | null
    status: string | null
    observacao: string | null
  }

  export type MovimentacaoMaxAggregateOutputType = {
    id_movimentacao: number | null
    id_produto: number | null
    id_usuario: number | null
    tipo_movimentacao: string | null
    origem: string | null
    data_movimento: Date | null
    status: string | null
    observacao: string | null
  }

  export type MovimentacaoCountAggregateOutputType = {
    id_movimentacao: number
    id_produto: number
    id_usuario: number
    tipo_movimentacao: number
    origem: number
    data_movimento: number
    status: number
    observacao: number
    _all: number
  }


  export type MovimentacaoAvgAggregateInputType = {
    id_movimentacao?: true
    id_produto?: true
    id_usuario?: true
  }

  export type MovimentacaoSumAggregateInputType = {
    id_movimentacao?: true
    id_produto?: true
    id_usuario?: true
  }

  export type MovimentacaoMinAggregateInputType = {
    id_movimentacao?: true
    id_produto?: true
    id_usuario?: true
    tipo_movimentacao?: true
    origem?: true
    data_movimento?: true
    status?: true
    observacao?: true
  }

  export type MovimentacaoMaxAggregateInputType = {
    id_movimentacao?: true
    id_produto?: true
    id_usuario?: true
    tipo_movimentacao?: true
    origem?: true
    data_movimento?: true
    status?: true
    observacao?: true
  }

  export type MovimentacaoCountAggregateInputType = {
    id_movimentacao?: true
    id_produto?: true
    id_usuario?: true
    tipo_movimentacao?: true
    origem?: true
    data_movimento?: true
    status?: true
    observacao?: true
    _all?: true
  }

  export type MovimentacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which movimentacao to aggregate.
     */
    where?: movimentacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of movimentacaos to fetch.
     */
    orderBy?: movimentacaoOrderByWithRelationInput | movimentacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: movimentacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` movimentacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` movimentacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned movimentacaos
    **/
    _count?: true | MovimentacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MovimentacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MovimentacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MovimentacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MovimentacaoMaxAggregateInputType
  }

  export type GetMovimentacaoAggregateType<T extends MovimentacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateMovimentacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMovimentacao[P]>
      : GetScalarType<T[P], AggregateMovimentacao[P]>
  }




  export type movimentacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: movimentacaoWhereInput
    orderBy?: movimentacaoOrderByWithAggregationInput | movimentacaoOrderByWithAggregationInput[]
    by: MovimentacaoScalarFieldEnum[] | MovimentacaoScalarFieldEnum
    having?: movimentacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MovimentacaoCountAggregateInputType | true
    _avg?: MovimentacaoAvgAggregateInputType
    _sum?: MovimentacaoSumAggregateInputType
    _min?: MovimentacaoMinAggregateInputType
    _max?: MovimentacaoMaxAggregateInputType
  }

  export type MovimentacaoGroupByOutputType = {
    id_movimentacao: number
    id_produto: number
    id_usuario: number
    tipo_movimentacao: string
    origem: string | null
    data_movimento: Date
    status: string | null
    observacao: string | null
    _count: MovimentacaoCountAggregateOutputType | null
    _avg: MovimentacaoAvgAggregateOutputType | null
    _sum: MovimentacaoSumAggregateOutputType | null
    _min: MovimentacaoMinAggregateOutputType | null
    _max: MovimentacaoMaxAggregateOutputType | null
  }

  type GetMovimentacaoGroupByPayload<T extends movimentacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MovimentacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MovimentacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MovimentacaoGroupByOutputType[P]>
            : GetScalarType<T[P], MovimentacaoGroupByOutputType[P]>
        }
      >
    >


  export type movimentacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_movimentacao?: boolean
    id_produto?: boolean
    id_usuario?: boolean
    tipo_movimentacao?: boolean
    origem?: boolean
    data_movimento?: boolean
    status?: boolean
    observacao?: boolean
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["movimentacao"]>

  export type movimentacaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_movimentacao?: boolean
    id_produto?: boolean
    id_usuario?: boolean
    tipo_movimentacao?: boolean
    origem?: boolean
    data_movimento?: boolean
    status?: boolean
    observacao?: boolean
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["movimentacao"]>

  export type movimentacaoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_movimentacao?: boolean
    id_produto?: boolean
    id_usuario?: boolean
    tipo_movimentacao?: boolean
    origem?: boolean
    data_movimento?: boolean
    status?: boolean
    observacao?: boolean
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["movimentacao"]>

  export type movimentacaoSelectScalar = {
    id_movimentacao?: boolean
    id_produto?: boolean
    id_usuario?: boolean
    tipo_movimentacao?: boolean
    origem?: boolean
    data_movimento?: boolean
    status?: boolean
    observacao?: boolean
  }

  export type movimentacaoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_movimentacao" | "id_produto" | "id_usuario" | "tipo_movimentacao" | "origem" | "data_movimento" | "status" | "observacao", ExtArgs["result"]["movimentacao"]>
  export type movimentacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }
  export type movimentacaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }
  export type movimentacaoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }

  export type $movimentacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "movimentacao"
    objects: {
      produto: Prisma.$produtoPayload<ExtArgs>
      usuario: Prisma.$usuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_movimentacao: number
      id_produto: number
      id_usuario: number
      tipo_movimentacao: string
      origem: string | null
      data_movimento: Date
      status: string | null
      observacao: string | null
    }, ExtArgs["result"]["movimentacao"]>
    composites: {}
  }

  type movimentacaoGetPayload<S extends boolean | null | undefined | movimentacaoDefaultArgs> = $Result.GetResult<Prisma.$movimentacaoPayload, S>

  type movimentacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<movimentacaoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MovimentacaoCountAggregateInputType | true
    }

  export interface movimentacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['movimentacao'], meta: { name: 'movimentacao' } }
    /**
     * Find zero or one Movimentacao that matches the filter.
     * @param {movimentacaoFindUniqueArgs} args - Arguments to find a Movimentacao
     * @example
     * // Get one Movimentacao
     * const movimentacao = await prisma.movimentacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends movimentacaoFindUniqueArgs>(args: SelectSubset<T, movimentacaoFindUniqueArgs<ExtArgs>>): Prisma__movimentacaoClient<$Result.GetResult<Prisma.$movimentacaoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Movimentacao that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {movimentacaoFindUniqueOrThrowArgs} args - Arguments to find a Movimentacao
     * @example
     * // Get one Movimentacao
     * const movimentacao = await prisma.movimentacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends movimentacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, movimentacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__movimentacaoClient<$Result.GetResult<Prisma.$movimentacaoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Movimentacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {movimentacaoFindFirstArgs} args - Arguments to find a Movimentacao
     * @example
     * // Get one Movimentacao
     * const movimentacao = await prisma.movimentacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends movimentacaoFindFirstArgs>(args?: SelectSubset<T, movimentacaoFindFirstArgs<ExtArgs>>): Prisma__movimentacaoClient<$Result.GetResult<Prisma.$movimentacaoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Movimentacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {movimentacaoFindFirstOrThrowArgs} args - Arguments to find a Movimentacao
     * @example
     * // Get one Movimentacao
     * const movimentacao = await prisma.movimentacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends movimentacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, movimentacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__movimentacaoClient<$Result.GetResult<Prisma.$movimentacaoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Movimentacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {movimentacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Movimentacaos
     * const movimentacaos = await prisma.movimentacao.findMany()
     * 
     * // Get first 10 Movimentacaos
     * const movimentacaos = await prisma.movimentacao.findMany({ take: 10 })
     * 
     * // Only select the `id_movimentacao`
     * const movimentacaoWithId_movimentacaoOnly = await prisma.movimentacao.findMany({ select: { id_movimentacao: true } })
     * 
     */
    findMany<T extends movimentacaoFindManyArgs>(args?: SelectSubset<T, movimentacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$movimentacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Movimentacao.
     * @param {movimentacaoCreateArgs} args - Arguments to create a Movimentacao.
     * @example
     * // Create one Movimentacao
     * const Movimentacao = await prisma.movimentacao.create({
     *   data: {
     *     // ... data to create a Movimentacao
     *   }
     * })
     * 
     */
    create<T extends movimentacaoCreateArgs>(args: SelectSubset<T, movimentacaoCreateArgs<ExtArgs>>): Prisma__movimentacaoClient<$Result.GetResult<Prisma.$movimentacaoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Movimentacaos.
     * @param {movimentacaoCreateManyArgs} args - Arguments to create many Movimentacaos.
     * @example
     * // Create many Movimentacaos
     * const movimentacao = await prisma.movimentacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends movimentacaoCreateManyArgs>(args?: SelectSubset<T, movimentacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Movimentacaos and returns the data saved in the database.
     * @param {movimentacaoCreateManyAndReturnArgs} args - Arguments to create many Movimentacaos.
     * @example
     * // Create many Movimentacaos
     * const movimentacao = await prisma.movimentacao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Movimentacaos and only return the `id_movimentacao`
     * const movimentacaoWithId_movimentacaoOnly = await prisma.movimentacao.createManyAndReturn({
     *   select: { id_movimentacao: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends movimentacaoCreateManyAndReturnArgs>(args?: SelectSubset<T, movimentacaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$movimentacaoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Movimentacao.
     * @param {movimentacaoDeleteArgs} args - Arguments to delete one Movimentacao.
     * @example
     * // Delete one Movimentacao
     * const Movimentacao = await prisma.movimentacao.delete({
     *   where: {
     *     // ... filter to delete one Movimentacao
     *   }
     * })
     * 
     */
    delete<T extends movimentacaoDeleteArgs>(args: SelectSubset<T, movimentacaoDeleteArgs<ExtArgs>>): Prisma__movimentacaoClient<$Result.GetResult<Prisma.$movimentacaoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Movimentacao.
     * @param {movimentacaoUpdateArgs} args - Arguments to update one Movimentacao.
     * @example
     * // Update one Movimentacao
     * const movimentacao = await prisma.movimentacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends movimentacaoUpdateArgs>(args: SelectSubset<T, movimentacaoUpdateArgs<ExtArgs>>): Prisma__movimentacaoClient<$Result.GetResult<Prisma.$movimentacaoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Movimentacaos.
     * @param {movimentacaoDeleteManyArgs} args - Arguments to filter Movimentacaos to delete.
     * @example
     * // Delete a few Movimentacaos
     * const { count } = await prisma.movimentacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends movimentacaoDeleteManyArgs>(args?: SelectSubset<T, movimentacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Movimentacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {movimentacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Movimentacaos
     * const movimentacao = await prisma.movimentacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends movimentacaoUpdateManyArgs>(args: SelectSubset<T, movimentacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Movimentacaos and returns the data updated in the database.
     * @param {movimentacaoUpdateManyAndReturnArgs} args - Arguments to update many Movimentacaos.
     * @example
     * // Update many Movimentacaos
     * const movimentacao = await prisma.movimentacao.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Movimentacaos and only return the `id_movimentacao`
     * const movimentacaoWithId_movimentacaoOnly = await prisma.movimentacao.updateManyAndReturn({
     *   select: { id_movimentacao: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends movimentacaoUpdateManyAndReturnArgs>(args: SelectSubset<T, movimentacaoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$movimentacaoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Movimentacao.
     * @param {movimentacaoUpsertArgs} args - Arguments to update or create a Movimentacao.
     * @example
     * // Update or create a Movimentacao
     * const movimentacao = await prisma.movimentacao.upsert({
     *   create: {
     *     // ... data to create a Movimentacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Movimentacao we want to update
     *   }
     * })
     */
    upsert<T extends movimentacaoUpsertArgs>(args: SelectSubset<T, movimentacaoUpsertArgs<ExtArgs>>): Prisma__movimentacaoClient<$Result.GetResult<Prisma.$movimentacaoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Movimentacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {movimentacaoCountArgs} args - Arguments to filter Movimentacaos to count.
     * @example
     * // Count the number of Movimentacaos
     * const count = await prisma.movimentacao.count({
     *   where: {
     *     // ... the filter for the Movimentacaos we want to count
     *   }
     * })
    **/
    count<T extends movimentacaoCountArgs>(
      args?: Subset<T, movimentacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MovimentacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Movimentacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovimentacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MovimentacaoAggregateArgs>(args: Subset<T, MovimentacaoAggregateArgs>): Prisma.PrismaPromise<GetMovimentacaoAggregateType<T>>

    /**
     * Group by Movimentacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {movimentacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends movimentacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: movimentacaoGroupByArgs['orderBy'] }
        : { orderBy?: movimentacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, movimentacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMovimentacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the movimentacao model
   */
  readonly fields: movimentacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for movimentacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__movimentacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    produto<T extends produtoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, produtoDefaultArgs<ExtArgs>>): Prisma__produtoClient<$Result.GetResult<Prisma.$produtoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuario<T extends usuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuarioDefaultArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the movimentacao model
   */
  interface movimentacaoFieldRefs {
    readonly id_movimentacao: FieldRef<"movimentacao", 'Int'>
    readonly id_produto: FieldRef<"movimentacao", 'Int'>
    readonly id_usuario: FieldRef<"movimentacao", 'Int'>
    readonly tipo_movimentacao: FieldRef<"movimentacao", 'String'>
    readonly origem: FieldRef<"movimentacao", 'String'>
    readonly data_movimento: FieldRef<"movimentacao", 'DateTime'>
    readonly status: FieldRef<"movimentacao", 'String'>
    readonly observacao: FieldRef<"movimentacao", 'String'>
  }
    

  // Custom InputTypes
  /**
   * movimentacao findUnique
   */
  export type movimentacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the movimentacao
     */
    select?: movimentacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the movimentacao
     */
    omit?: movimentacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: movimentacaoInclude<ExtArgs> | null
    /**
     * Filter, which movimentacao to fetch.
     */
    where: movimentacaoWhereUniqueInput
  }

  /**
   * movimentacao findUniqueOrThrow
   */
  export type movimentacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the movimentacao
     */
    select?: movimentacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the movimentacao
     */
    omit?: movimentacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: movimentacaoInclude<ExtArgs> | null
    /**
     * Filter, which movimentacao to fetch.
     */
    where: movimentacaoWhereUniqueInput
  }

  /**
   * movimentacao findFirst
   */
  export type movimentacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the movimentacao
     */
    select?: movimentacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the movimentacao
     */
    omit?: movimentacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: movimentacaoInclude<ExtArgs> | null
    /**
     * Filter, which movimentacao to fetch.
     */
    where?: movimentacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of movimentacaos to fetch.
     */
    orderBy?: movimentacaoOrderByWithRelationInput | movimentacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for movimentacaos.
     */
    cursor?: movimentacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` movimentacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` movimentacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of movimentacaos.
     */
    distinct?: MovimentacaoScalarFieldEnum | MovimentacaoScalarFieldEnum[]
  }

  /**
   * movimentacao findFirstOrThrow
   */
  export type movimentacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the movimentacao
     */
    select?: movimentacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the movimentacao
     */
    omit?: movimentacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: movimentacaoInclude<ExtArgs> | null
    /**
     * Filter, which movimentacao to fetch.
     */
    where?: movimentacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of movimentacaos to fetch.
     */
    orderBy?: movimentacaoOrderByWithRelationInput | movimentacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for movimentacaos.
     */
    cursor?: movimentacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` movimentacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` movimentacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of movimentacaos.
     */
    distinct?: MovimentacaoScalarFieldEnum | MovimentacaoScalarFieldEnum[]
  }

  /**
   * movimentacao findMany
   */
  export type movimentacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the movimentacao
     */
    select?: movimentacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the movimentacao
     */
    omit?: movimentacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: movimentacaoInclude<ExtArgs> | null
    /**
     * Filter, which movimentacaos to fetch.
     */
    where?: movimentacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of movimentacaos to fetch.
     */
    orderBy?: movimentacaoOrderByWithRelationInput | movimentacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing movimentacaos.
     */
    cursor?: movimentacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` movimentacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` movimentacaos.
     */
    skip?: number
    distinct?: MovimentacaoScalarFieldEnum | MovimentacaoScalarFieldEnum[]
  }

  /**
   * movimentacao create
   */
  export type movimentacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the movimentacao
     */
    select?: movimentacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the movimentacao
     */
    omit?: movimentacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: movimentacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a movimentacao.
     */
    data: XOR<movimentacaoCreateInput, movimentacaoUncheckedCreateInput>
  }

  /**
   * movimentacao createMany
   */
  export type movimentacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many movimentacaos.
     */
    data: movimentacaoCreateManyInput | movimentacaoCreateManyInput[]
  }

  /**
   * movimentacao createManyAndReturn
   */
  export type movimentacaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the movimentacao
     */
    select?: movimentacaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the movimentacao
     */
    omit?: movimentacaoOmit<ExtArgs> | null
    /**
     * The data used to create many movimentacaos.
     */
    data: movimentacaoCreateManyInput | movimentacaoCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: movimentacaoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * movimentacao update
   */
  export type movimentacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the movimentacao
     */
    select?: movimentacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the movimentacao
     */
    omit?: movimentacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: movimentacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a movimentacao.
     */
    data: XOR<movimentacaoUpdateInput, movimentacaoUncheckedUpdateInput>
    /**
     * Choose, which movimentacao to update.
     */
    where: movimentacaoWhereUniqueInput
  }

  /**
   * movimentacao updateMany
   */
  export type movimentacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update movimentacaos.
     */
    data: XOR<movimentacaoUpdateManyMutationInput, movimentacaoUncheckedUpdateManyInput>
    /**
     * Filter which movimentacaos to update
     */
    where?: movimentacaoWhereInput
    /**
     * Limit how many movimentacaos to update.
     */
    limit?: number
  }

  /**
   * movimentacao updateManyAndReturn
   */
  export type movimentacaoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the movimentacao
     */
    select?: movimentacaoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the movimentacao
     */
    omit?: movimentacaoOmit<ExtArgs> | null
    /**
     * The data used to update movimentacaos.
     */
    data: XOR<movimentacaoUpdateManyMutationInput, movimentacaoUncheckedUpdateManyInput>
    /**
     * Filter which movimentacaos to update
     */
    where?: movimentacaoWhereInput
    /**
     * Limit how many movimentacaos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: movimentacaoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * movimentacao upsert
   */
  export type movimentacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the movimentacao
     */
    select?: movimentacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the movimentacao
     */
    omit?: movimentacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: movimentacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the movimentacao to update in case it exists.
     */
    where: movimentacaoWhereUniqueInput
    /**
     * In case the movimentacao found by the `where` argument doesn't exist, create a new movimentacao with this data.
     */
    create: XOR<movimentacaoCreateInput, movimentacaoUncheckedCreateInput>
    /**
     * In case the movimentacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<movimentacaoUpdateInput, movimentacaoUncheckedUpdateInput>
  }

  /**
   * movimentacao delete
   */
  export type movimentacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the movimentacao
     */
    select?: movimentacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the movimentacao
     */
    omit?: movimentacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: movimentacaoInclude<ExtArgs> | null
    /**
     * Filter which movimentacao to delete.
     */
    where: movimentacaoWhereUniqueInput
  }

  /**
   * movimentacao deleteMany
   */
  export type movimentacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which movimentacaos to delete
     */
    where?: movimentacaoWhereInput
    /**
     * Limit how many movimentacaos to delete.
     */
    limit?: number
  }

  /**
   * movimentacao without action
   */
  export type movimentacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the movimentacao
     */
    select?: movimentacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the movimentacao
     */
    omit?: movimentacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: movimentacaoInclude<ExtArgs> | null
  }


  /**
   * Model alerta
   */

  export type AggregateAlerta = {
    _count: AlertaCountAggregateOutputType | null
    _avg: AlertaAvgAggregateOutputType | null
    _sum: AlertaSumAggregateOutputType | null
    _min: AlertaMinAggregateOutputType | null
    _max: AlertaMaxAggregateOutputType | null
  }

  export type AlertaAvgAggregateOutputType = {
    id_alerta: number | null
    id_produto: number | null
  }

  export type AlertaSumAggregateOutputType = {
    id_alerta: number | null
    id_produto: number | null
  }

  export type AlertaMinAggregateOutputType = {
    id_alerta: number | null
    id_produto: number | null
    tipo_alerta: string | null
    mensagem: string | null
  }

  export type AlertaMaxAggregateOutputType = {
    id_alerta: number | null
    id_produto: number | null
    tipo_alerta: string | null
    mensagem: string | null
  }

  export type AlertaCountAggregateOutputType = {
    id_alerta: number
    id_produto: number
    tipo_alerta: number
    mensagem: number
    _all: number
  }


  export type AlertaAvgAggregateInputType = {
    id_alerta?: true
    id_produto?: true
  }

  export type AlertaSumAggregateInputType = {
    id_alerta?: true
    id_produto?: true
  }

  export type AlertaMinAggregateInputType = {
    id_alerta?: true
    id_produto?: true
    tipo_alerta?: true
    mensagem?: true
  }

  export type AlertaMaxAggregateInputType = {
    id_alerta?: true
    id_produto?: true
    tipo_alerta?: true
    mensagem?: true
  }

  export type AlertaCountAggregateInputType = {
    id_alerta?: true
    id_produto?: true
    tipo_alerta?: true
    mensagem?: true
    _all?: true
  }

  export type AlertaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which alerta to aggregate.
     */
    where?: alertaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of alertas to fetch.
     */
    orderBy?: alertaOrderByWithRelationInput | alertaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: alertaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` alertas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` alertas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned alertas
    **/
    _count?: true | AlertaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AlertaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AlertaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AlertaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AlertaMaxAggregateInputType
  }

  export type GetAlertaAggregateType<T extends AlertaAggregateArgs> = {
        [P in keyof T & keyof AggregateAlerta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAlerta[P]>
      : GetScalarType<T[P], AggregateAlerta[P]>
  }




  export type alertaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: alertaWhereInput
    orderBy?: alertaOrderByWithAggregationInput | alertaOrderByWithAggregationInput[]
    by: AlertaScalarFieldEnum[] | AlertaScalarFieldEnum
    having?: alertaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AlertaCountAggregateInputType | true
    _avg?: AlertaAvgAggregateInputType
    _sum?: AlertaSumAggregateInputType
    _min?: AlertaMinAggregateInputType
    _max?: AlertaMaxAggregateInputType
  }

  export type AlertaGroupByOutputType = {
    id_alerta: number
    id_produto: number
    tipo_alerta: string
    mensagem: string
    _count: AlertaCountAggregateOutputType | null
    _avg: AlertaAvgAggregateOutputType | null
    _sum: AlertaSumAggregateOutputType | null
    _min: AlertaMinAggregateOutputType | null
    _max: AlertaMaxAggregateOutputType | null
  }

  type GetAlertaGroupByPayload<T extends alertaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AlertaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AlertaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AlertaGroupByOutputType[P]>
            : GetScalarType<T[P], AlertaGroupByOutputType[P]>
        }
      >
    >


  export type alertaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_alerta?: boolean
    id_produto?: boolean
    tipo_alerta?: boolean
    mensagem?: boolean
    produto?: boolean | produtoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["alerta"]>

  export type alertaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_alerta?: boolean
    id_produto?: boolean
    tipo_alerta?: boolean
    mensagem?: boolean
    produto?: boolean | produtoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["alerta"]>

  export type alertaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_alerta?: boolean
    id_produto?: boolean
    tipo_alerta?: boolean
    mensagem?: boolean
    produto?: boolean | produtoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["alerta"]>

  export type alertaSelectScalar = {
    id_alerta?: boolean
    id_produto?: boolean
    tipo_alerta?: boolean
    mensagem?: boolean
  }

  export type alertaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_alerta" | "id_produto" | "tipo_alerta" | "mensagem", ExtArgs["result"]["alerta"]>
  export type alertaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    produto?: boolean | produtoDefaultArgs<ExtArgs>
  }
  export type alertaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    produto?: boolean | produtoDefaultArgs<ExtArgs>
  }
  export type alertaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    produto?: boolean | produtoDefaultArgs<ExtArgs>
  }

  export type $alertaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "alerta"
    objects: {
      produto: Prisma.$produtoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_alerta: number
      id_produto: number
      tipo_alerta: string
      mensagem: string
    }, ExtArgs["result"]["alerta"]>
    composites: {}
  }

  type alertaGetPayload<S extends boolean | null | undefined | alertaDefaultArgs> = $Result.GetResult<Prisma.$alertaPayload, S>

  type alertaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<alertaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AlertaCountAggregateInputType | true
    }

  export interface alertaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['alerta'], meta: { name: 'alerta' } }
    /**
     * Find zero or one Alerta that matches the filter.
     * @param {alertaFindUniqueArgs} args - Arguments to find a Alerta
     * @example
     * // Get one Alerta
     * const alerta = await prisma.alerta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends alertaFindUniqueArgs>(args: SelectSubset<T, alertaFindUniqueArgs<ExtArgs>>): Prisma__alertaClient<$Result.GetResult<Prisma.$alertaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Alerta that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {alertaFindUniqueOrThrowArgs} args - Arguments to find a Alerta
     * @example
     * // Get one Alerta
     * const alerta = await prisma.alerta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends alertaFindUniqueOrThrowArgs>(args: SelectSubset<T, alertaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__alertaClient<$Result.GetResult<Prisma.$alertaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Alerta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alertaFindFirstArgs} args - Arguments to find a Alerta
     * @example
     * // Get one Alerta
     * const alerta = await prisma.alerta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends alertaFindFirstArgs>(args?: SelectSubset<T, alertaFindFirstArgs<ExtArgs>>): Prisma__alertaClient<$Result.GetResult<Prisma.$alertaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Alerta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alertaFindFirstOrThrowArgs} args - Arguments to find a Alerta
     * @example
     * // Get one Alerta
     * const alerta = await prisma.alerta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends alertaFindFirstOrThrowArgs>(args?: SelectSubset<T, alertaFindFirstOrThrowArgs<ExtArgs>>): Prisma__alertaClient<$Result.GetResult<Prisma.$alertaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Alertas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alertaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Alertas
     * const alertas = await prisma.alerta.findMany()
     * 
     * // Get first 10 Alertas
     * const alertas = await prisma.alerta.findMany({ take: 10 })
     * 
     * // Only select the `id_alerta`
     * const alertaWithId_alertaOnly = await prisma.alerta.findMany({ select: { id_alerta: true } })
     * 
     */
    findMany<T extends alertaFindManyArgs>(args?: SelectSubset<T, alertaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$alertaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Alerta.
     * @param {alertaCreateArgs} args - Arguments to create a Alerta.
     * @example
     * // Create one Alerta
     * const Alerta = await prisma.alerta.create({
     *   data: {
     *     // ... data to create a Alerta
     *   }
     * })
     * 
     */
    create<T extends alertaCreateArgs>(args: SelectSubset<T, alertaCreateArgs<ExtArgs>>): Prisma__alertaClient<$Result.GetResult<Prisma.$alertaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Alertas.
     * @param {alertaCreateManyArgs} args - Arguments to create many Alertas.
     * @example
     * // Create many Alertas
     * const alerta = await prisma.alerta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends alertaCreateManyArgs>(args?: SelectSubset<T, alertaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Alertas and returns the data saved in the database.
     * @param {alertaCreateManyAndReturnArgs} args - Arguments to create many Alertas.
     * @example
     * // Create many Alertas
     * const alerta = await prisma.alerta.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Alertas and only return the `id_alerta`
     * const alertaWithId_alertaOnly = await prisma.alerta.createManyAndReturn({
     *   select: { id_alerta: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends alertaCreateManyAndReturnArgs>(args?: SelectSubset<T, alertaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$alertaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Alerta.
     * @param {alertaDeleteArgs} args - Arguments to delete one Alerta.
     * @example
     * // Delete one Alerta
     * const Alerta = await prisma.alerta.delete({
     *   where: {
     *     // ... filter to delete one Alerta
     *   }
     * })
     * 
     */
    delete<T extends alertaDeleteArgs>(args: SelectSubset<T, alertaDeleteArgs<ExtArgs>>): Prisma__alertaClient<$Result.GetResult<Prisma.$alertaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Alerta.
     * @param {alertaUpdateArgs} args - Arguments to update one Alerta.
     * @example
     * // Update one Alerta
     * const alerta = await prisma.alerta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends alertaUpdateArgs>(args: SelectSubset<T, alertaUpdateArgs<ExtArgs>>): Prisma__alertaClient<$Result.GetResult<Prisma.$alertaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Alertas.
     * @param {alertaDeleteManyArgs} args - Arguments to filter Alertas to delete.
     * @example
     * // Delete a few Alertas
     * const { count } = await prisma.alerta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends alertaDeleteManyArgs>(args?: SelectSubset<T, alertaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Alertas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alertaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Alertas
     * const alerta = await prisma.alerta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends alertaUpdateManyArgs>(args: SelectSubset<T, alertaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Alertas and returns the data updated in the database.
     * @param {alertaUpdateManyAndReturnArgs} args - Arguments to update many Alertas.
     * @example
     * // Update many Alertas
     * const alerta = await prisma.alerta.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Alertas and only return the `id_alerta`
     * const alertaWithId_alertaOnly = await prisma.alerta.updateManyAndReturn({
     *   select: { id_alerta: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends alertaUpdateManyAndReturnArgs>(args: SelectSubset<T, alertaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$alertaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Alerta.
     * @param {alertaUpsertArgs} args - Arguments to update or create a Alerta.
     * @example
     * // Update or create a Alerta
     * const alerta = await prisma.alerta.upsert({
     *   create: {
     *     // ... data to create a Alerta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Alerta we want to update
     *   }
     * })
     */
    upsert<T extends alertaUpsertArgs>(args: SelectSubset<T, alertaUpsertArgs<ExtArgs>>): Prisma__alertaClient<$Result.GetResult<Prisma.$alertaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Alertas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alertaCountArgs} args - Arguments to filter Alertas to count.
     * @example
     * // Count the number of Alertas
     * const count = await prisma.alerta.count({
     *   where: {
     *     // ... the filter for the Alertas we want to count
     *   }
     * })
    **/
    count<T extends alertaCountArgs>(
      args?: Subset<T, alertaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AlertaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Alerta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlertaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AlertaAggregateArgs>(args: Subset<T, AlertaAggregateArgs>): Prisma.PrismaPromise<GetAlertaAggregateType<T>>

    /**
     * Group by Alerta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alertaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends alertaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: alertaGroupByArgs['orderBy'] }
        : { orderBy?: alertaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, alertaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAlertaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the alerta model
   */
  readonly fields: alertaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for alerta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__alertaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    produto<T extends produtoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, produtoDefaultArgs<ExtArgs>>): Prisma__produtoClient<$Result.GetResult<Prisma.$produtoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the alerta model
   */
  interface alertaFieldRefs {
    readonly id_alerta: FieldRef<"alerta", 'Int'>
    readonly id_produto: FieldRef<"alerta", 'Int'>
    readonly tipo_alerta: FieldRef<"alerta", 'String'>
    readonly mensagem: FieldRef<"alerta", 'String'>
  }
    

  // Custom InputTypes
  /**
   * alerta findUnique
   */
  export type alertaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alerta
     */
    select?: alertaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alerta
     */
    omit?: alertaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alertaInclude<ExtArgs> | null
    /**
     * Filter, which alerta to fetch.
     */
    where: alertaWhereUniqueInput
  }

  /**
   * alerta findUniqueOrThrow
   */
  export type alertaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alerta
     */
    select?: alertaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alerta
     */
    omit?: alertaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alertaInclude<ExtArgs> | null
    /**
     * Filter, which alerta to fetch.
     */
    where: alertaWhereUniqueInput
  }

  /**
   * alerta findFirst
   */
  export type alertaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alerta
     */
    select?: alertaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alerta
     */
    omit?: alertaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alertaInclude<ExtArgs> | null
    /**
     * Filter, which alerta to fetch.
     */
    where?: alertaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of alertas to fetch.
     */
    orderBy?: alertaOrderByWithRelationInput | alertaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for alertas.
     */
    cursor?: alertaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` alertas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` alertas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of alertas.
     */
    distinct?: AlertaScalarFieldEnum | AlertaScalarFieldEnum[]
  }

  /**
   * alerta findFirstOrThrow
   */
  export type alertaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alerta
     */
    select?: alertaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alerta
     */
    omit?: alertaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alertaInclude<ExtArgs> | null
    /**
     * Filter, which alerta to fetch.
     */
    where?: alertaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of alertas to fetch.
     */
    orderBy?: alertaOrderByWithRelationInput | alertaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for alertas.
     */
    cursor?: alertaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` alertas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` alertas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of alertas.
     */
    distinct?: AlertaScalarFieldEnum | AlertaScalarFieldEnum[]
  }

  /**
   * alerta findMany
   */
  export type alertaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alerta
     */
    select?: alertaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alerta
     */
    omit?: alertaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alertaInclude<ExtArgs> | null
    /**
     * Filter, which alertas to fetch.
     */
    where?: alertaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of alertas to fetch.
     */
    orderBy?: alertaOrderByWithRelationInput | alertaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing alertas.
     */
    cursor?: alertaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` alertas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` alertas.
     */
    skip?: number
    distinct?: AlertaScalarFieldEnum | AlertaScalarFieldEnum[]
  }

  /**
   * alerta create
   */
  export type alertaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alerta
     */
    select?: alertaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alerta
     */
    omit?: alertaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alertaInclude<ExtArgs> | null
    /**
     * The data needed to create a alerta.
     */
    data: XOR<alertaCreateInput, alertaUncheckedCreateInput>
  }

  /**
   * alerta createMany
   */
  export type alertaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many alertas.
     */
    data: alertaCreateManyInput | alertaCreateManyInput[]
  }

  /**
   * alerta createManyAndReturn
   */
  export type alertaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alerta
     */
    select?: alertaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the alerta
     */
    omit?: alertaOmit<ExtArgs> | null
    /**
     * The data used to create many alertas.
     */
    data: alertaCreateManyInput | alertaCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alertaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * alerta update
   */
  export type alertaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alerta
     */
    select?: alertaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alerta
     */
    omit?: alertaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alertaInclude<ExtArgs> | null
    /**
     * The data needed to update a alerta.
     */
    data: XOR<alertaUpdateInput, alertaUncheckedUpdateInput>
    /**
     * Choose, which alerta to update.
     */
    where: alertaWhereUniqueInput
  }

  /**
   * alerta updateMany
   */
  export type alertaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update alertas.
     */
    data: XOR<alertaUpdateManyMutationInput, alertaUncheckedUpdateManyInput>
    /**
     * Filter which alertas to update
     */
    where?: alertaWhereInput
    /**
     * Limit how many alertas to update.
     */
    limit?: number
  }

  /**
   * alerta updateManyAndReturn
   */
  export type alertaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alerta
     */
    select?: alertaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the alerta
     */
    omit?: alertaOmit<ExtArgs> | null
    /**
     * The data used to update alertas.
     */
    data: XOR<alertaUpdateManyMutationInput, alertaUncheckedUpdateManyInput>
    /**
     * Filter which alertas to update
     */
    where?: alertaWhereInput
    /**
     * Limit how many alertas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alertaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * alerta upsert
   */
  export type alertaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alerta
     */
    select?: alertaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alerta
     */
    omit?: alertaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alertaInclude<ExtArgs> | null
    /**
     * The filter to search for the alerta to update in case it exists.
     */
    where: alertaWhereUniqueInput
    /**
     * In case the alerta found by the `where` argument doesn't exist, create a new alerta with this data.
     */
    create: XOR<alertaCreateInput, alertaUncheckedCreateInput>
    /**
     * In case the alerta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<alertaUpdateInput, alertaUncheckedUpdateInput>
  }

  /**
   * alerta delete
   */
  export type alertaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alerta
     */
    select?: alertaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alerta
     */
    omit?: alertaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alertaInclude<ExtArgs> | null
    /**
     * Filter which alerta to delete.
     */
    where: alertaWhereUniqueInput
  }

  /**
   * alerta deleteMany
   */
  export type alertaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which alertas to delete
     */
    where?: alertaWhereInput
    /**
     * Limit how many alertas to delete.
     */
    limit?: number
  }

  /**
   * alerta without action
   */
  export type alertaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alerta
     */
    select?: alertaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alerta
     */
    omit?: alertaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alertaInclude<ExtArgs> | null
  }


  /**
   * Model previsao_demanda
   */

  export type AggregatePrevisao_demanda = {
    _count: Previsao_demandaCountAggregateOutputType | null
    _avg: Previsao_demandaAvgAggregateOutputType | null
    _sum: Previsao_demandaSumAggregateOutputType | null
    _min: Previsao_demandaMinAggregateOutputType | null
    _max: Previsao_demandaMaxAggregateOutputType | null
  }

  export type Previsao_demandaAvgAggregateOutputType = {
    id_previsao: number | null
    id_produto: number | null
    demanda_prevista: number | null
    id_financeiro: number | null
    confianca_modelo: number | null
  }

  export type Previsao_demandaSumAggregateOutputType = {
    id_previsao: number | null
    id_produto: number | null
    demanda_prevista: number | null
    id_financeiro: number | null
    confianca_modelo: number | null
  }

  export type Previsao_demandaMinAggregateOutputType = {
    id_previsao: number | null
    id_produto: number | null
    data_prevista: Date | null
    demanda_prevista: number | null
    id_financeiro: number | null
    confianca_modelo: number | null
  }

  export type Previsao_demandaMaxAggregateOutputType = {
    id_previsao: number | null
    id_produto: number | null
    data_prevista: Date | null
    demanda_prevista: number | null
    id_financeiro: number | null
    confianca_modelo: number | null
  }

  export type Previsao_demandaCountAggregateOutputType = {
    id_previsao: number
    id_produto: number
    data_prevista: number
    demanda_prevista: number
    id_financeiro: number
    confianca_modelo: number
    _all: number
  }


  export type Previsao_demandaAvgAggregateInputType = {
    id_previsao?: true
    id_produto?: true
    demanda_prevista?: true
    id_financeiro?: true
    confianca_modelo?: true
  }

  export type Previsao_demandaSumAggregateInputType = {
    id_previsao?: true
    id_produto?: true
    demanda_prevista?: true
    id_financeiro?: true
    confianca_modelo?: true
  }

  export type Previsao_demandaMinAggregateInputType = {
    id_previsao?: true
    id_produto?: true
    data_prevista?: true
    demanda_prevista?: true
    id_financeiro?: true
    confianca_modelo?: true
  }

  export type Previsao_demandaMaxAggregateInputType = {
    id_previsao?: true
    id_produto?: true
    data_prevista?: true
    demanda_prevista?: true
    id_financeiro?: true
    confianca_modelo?: true
  }

  export type Previsao_demandaCountAggregateInputType = {
    id_previsao?: true
    id_produto?: true
    data_prevista?: true
    demanda_prevista?: true
    id_financeiro?: true
    confianca_modelo?: true
    _all?: true
  }

  export type Previsao_demandaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which previsao_demanda to aggregate.
     */
    where?: previsao_demandaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of previsao_demandas to fetch.
     */
    orderBy?: previsao_demandaOrderByWithRelationInput | previsao_demandaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: previsao_demandaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` previsao_demandas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` previsao_demandas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned previsao_demandas
    **/
    _count?: true | Previsao_demandaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Previsao_demandaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Previsao_demandaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Previsao_demandaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Previsao_demandaMaxAggregateInputType
  }

  export type GetPrevisao_demandaAggregateType<T extends Previsao_demandaAggregateArgs> = {
        [P in keyof T & keyof AggregatePrevisao_demanda]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePrevisao_demanda[P]>
      : GetScalarType<T[P], AggregatePrevisao_demanda[P]>
  }




  export type previsao_demandaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: previsao_demandaWhereInput
    orderBy?: previsao_demandaOrderByWithAggregationInput | previsao_demandaOrderByWithAggregationInput[]
    by: Previsao_demandaScalarFieldEnum[] | Previsao_demandaScalarFieldEnum
    having?: previsao_demandaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Previsao_demandaCountAggregateInputType | true
    _avg?: Previsao_demandaAvgAggregateInputType
    _sum?: Previsao_demandaSumAggregateInputType
    _min?: Previsao_demandaMinAggregateInputType
    _max?: Previsao_demandaMaxAggregateInputType
  }

  export type Previsao_demandaGroupByOutputType = {
    id_previsao: number
    id_produto: number
    data_prevista: Date
    demanda_prevista: number
    id_financeiro: number | null
    confianca_modelo: number | null
    _count: Previsao_demandaCountAggregateOutputType | null
    _avg: Previsao_demandaAvgAggregateOutputType | null
    _sum: Previsao_demandaSumAggregateOutputType | null
    _min: Previsao_demandaMinAggregateOutputType | null
    _max: Previsao_demandaMaxAggregateOutputType | null
  }

  type GetPrevisao_demandaGroupByPayload<T extends previsao_demandaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Previsao_demandaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Previsao_demandaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Previsao_demandaGroupByOutputType[P]>
            : GetScalarType<T[P], Previsao_demandaGroupByOutputType[P]>
        }
      >
    >


  export type previsao_demandaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_previsao?: boolean
    id_produto?: boolean
    data_prevista?: boolean
    demanda_prevista?: boolean
    id_financeiro?: boolean
    confianca_modelo?: boolean
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    historicos?: boolean | previsao_demanda$historicosArgs<ExtArgs>
    _count?: boolean | Previsao_demandaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["previsao_demanda"]>

  export type previsao_demandaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_previsao?: boolean
    id_produto?: boolean
    data_prevista?: boolean
    demanda_prevista?: boolean
    id_financeiro?: boolean
    confianca_modelo?: boolean
    produto?: boolean | produtoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["previsao_demanda"]>

  export type previsao_demandaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_previsao?: boolean
    id_produto?: boolean
    data_prevista?: boolean
    demanda_prevista?: boolean
    id_financeiro?: boolean
    confianca_modelo?: boolean
    produto?: boolean | produtoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["previsao_demanda"]>

  export type previsao_demandaSelectScalar = {
    id_previsao?: boolean
    id_produto?: boolean
    data_prevista?: boolean
    demanda_prevista?: boolean
    id_financeiro?: boolean
    confianca_modelo?: boolean
  }

  export type previsao_demandaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_previsao" | "id_produto" | "data_prevista" | "demanda_prevista" | "id_financeiro" | "confianca_modelo", ExtArgs["result"]["previsao_demanda"]>
  export type previsao_demandaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    historicos?: boolean | previsao_demanda$historicosArgs<ExtArgs>
    _count?: boolean | Previsao_demandaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type previsao_demandaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    produto?: boolean | produtoDefaultArgs<ExtArgs>
  }
  export type previsao_demandaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    produto?: boolean | produtoDefaultArgs<ExtArgs>
  }

  export type $previsao_demandaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "previsao_demanda"
    objects: {
      produto: Prisma.$produtoPayload<ExtArgs>
      historicos: Prisma.$historico_previsaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_previsao: number
      id_produto: number
      data_prevista: Date
      demanda_prevista: number
      id_financeiro: number | null
      confianca_modelo: number | null
    }, ExtArgs["result"]["previsao_demanda"]>
    composites: {}
  }

  type previsao_demandaGetPayload<S extends boolean | null | undefined | previsao_demandaDefaultArgs> = $Result.GetResult<Prisma.$previsao_demandaPayload, S>

  type previsao_demandaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<previsao_demandaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Previsao_demandaCountAggregateInputType | true
    }

  export interface previsao_demandaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['previsao_demanda'], meta: { name: 'previsao_demanda' } }
    /**
     * Find zero or one Previsao_demanda that matches the filter.
     * @param {previsao_demandaFindUniqueArgs} args - Arguments to find a Previsao_demanda
     * @example
     * // Get one Previsao_demanda
     * const previsao_demanda = await prisma.previsao_demanda.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends previsao_demandaFindUniqueArgs>(args: SelectSubset<T, previsao_demandaFindUniqueArgs<ExtArgs>>): Prisma__previsao_demandaClient<$Result.GetResult<Prisma.$previsao_demandaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Previsao_demanda that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {previsao_demandaFindUniqueOrThrowArgs} args - Arguments to find a Previsao_demanda
     * @example
     * // Get one Previsao_demanda
     * const previsao_demanda = await prisma.previsao_demanda.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends previsao_demandaFindUniqueOrThrowArgs>(args: SelectSubset<T, previsao_demandaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__previsao_demandaClient<$Result.GetResult<Prisma.$previsao_demandaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Previsao_demanda that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {previsao_demandaFindFirstArgs} args - Arguments to find a Previsao_demanda
     * @example
     * // Get one Previsao_demanda
     * const previsao_demanda = await prisma.previsao_demanda.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends previsao_demandaFindFirstArgs>(args?: SelectSubset<T, previsao_demandaFindFirstArgs<ExtArgs>>): Prisma__previsao_demandaClient<$Result.GetResult<Prisma.$previsao_demandaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Previsao_demanda that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {previsao_demandaFindFirstOrThrowArgs} args - Arguments to find a Previsao_demanda
     * @example
     * // Get one Previsao_demanda
     * const previsao_demanda = await prisma.previsao_demanda.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends previsao_demandaFindFirstOrThrowArgs>(args?: SelectSubset<T, previsao_demandaFindFirstOrThrowArgs<ExtArgs>>): Prisma__previsao_demandaClient<$Result.GetResult<Prisma.$previsao_demandaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Previsao_demandas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {previsao_demandaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Previsao_demandas
     * const previsao_demandas = await prisma.previsao_demanda.findMany()
     * 
     * // Get first 10 Previsao_demandas
     * const previsao_demandas = await prisma.previsao_demanda.findMany({ take: 10 })
     * 
     * // Only select the `id_previsao`
     * const previsao_demandaWithId_previsaoOnly = await prisma.previsao_demanda.findMany({ select: { id_previsao: true } })
     * 
     */
    findMany<T extends previsao_demandaFindManyArgs>(args?: SelectSubset<T, previsao_demandaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$previsao_demandaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Previsao_demanda.
     * @param {previsao_demandaCreateArgs} args - Arguments to create a Previsao_demanda.
     * @example
     * // Create one Previsao_demanda
     * const Previsao_demanda = await prisma.previsao_demanda.create({
     *   data: {
     *     // ... data to create a Previsao_demanda
     *   }
     * })
     * 
     */
    create<T extends previsao_demandaCreateArgs>(args: SelectSubset<T, previsao_demandaCreateArgs<ExtArgs>>): Prisma__previsao_demandaClient<$Result.GetResult<Prisma.$previsao_demandaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Previsao_demandas.
     * @param {previsao_demandaCreateManyArgs} args - Arguments to create many Previsao_demandas.
     * @example
     * // Create many Previsao_demandas
     * const previsao_demanda = await prisma.previsao_demanda.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends previsao_demandaCreateManyArgs>(args?: SelectSubset<T, previsao_demandaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Previsao_demandas and returns the data saved in the database.
     * @param {previsao_demandaCreateManyAndReturnArgs} args - Arguments to create many Previsao_demandas.
     * @example
     * // Create many Previsao_demandas
     * const previsao_demanda = await prisma.previsao_demanda.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Previsao_demandas and only return the `id_previsao`
     * const previsao_demandaWithId_previsaoOnly = await prisma.previsao_demanda.createManyAndReturn({
     *   select: { id_previsao: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends previsao_demandaCreateManyAndReturnArgs>(args?: SelectSubset<T, previsao_demandaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$previsao_demandaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Previsao_demanda.
     * @param {previsao_demandaDeleteArgs} args - Arguments to delete one Previsao_demanda.
     * @example
     * // Delete one Previsao_demanda
     * const Previsao_demanda = await prisma.previsao_demanda.delete({
     *   where: {
     *     // ... filter to delete one Previsao_demanda
     *   }
     * })
     * 
     */
    delete<T extends previsao_demandaDeleteArgs>(args: SelectSubset<T, previsao_demandaDeleteArgs<ExtArgs>>): Prisma__previsao_demandaClient<$Result.GetResult<Prisma.$previsao_demandaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Previsao_demanda.
     * @param {previsao_demandaUpdateArgs} args - Arguments to update one Previsao_demanda.
     * @example
     * // Update one Previsao_demanda
     * const previsao_demanda = await prisma.previsao_demanda.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends previsao_demandaUpdateArgs>(args: SelectSubset<T, previsao_demandaUpdateArgs<ExtArgs>>): Prisma__previsao_demandaClient<$Result.GetResult<Prisma.$previsao_demandaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Previsao_demandas.
     * @param {previsao_demandaDeleteManyArgs} args - Arguments to filter Previsao_demandas to delete.
     * @example
     * // Delete a few Previsao_demandas
     * const { count } = await prisma.previsao_demanda.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends previsao_demandaDeleteManyArgs>(args?: SelectSubset<T, previsao_demandaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Previsao_demandas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {previsao_demandaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Previsao_demandas
     * const previsao_demanda = await prisma.previsao_demanda.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends previsao_demandaUpdateManyArgs>(args: SelectSubset<T, previsao_demandaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Previsao_demandas and returns the data updated in the database.
     * @param {previsao_demandaUpdateManyAndReturnArgs} args - Arguments to update many Previsao_demandas.
     * @example
     * // Update many Previsao_demandas
     * const previsao_demanda = await prisma.previsao_demanda.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Previsao_demandas and only return the `id_previsao`
     * const previsao_demandaWithId_previsaoOnly = await prisma.previsao_demanda.updateManyAndReturn({
     *   select: { id_previsao: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends previsao_demandaUpdateManyAndReturnArgs>(args: SelectSubset<T, previsao_demandaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$previsao_demandaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Previsao_demanda.
     * @param {previsao_demandaUpsertArgs} args - Arguments to update or create a Previsao_demanda.
     * @example
     * // Update or create a Previsao_demanda
     * const previsao_demanda = await prisma.previsao_demanda.upsert({
     *   create: {
     *     // ... data to create a Previsao_demanda
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Previsao_demanda we want to update
     *   }
     * })
     */
    upsert<T extends previsao_demandaUpsertArgs>(args: SelectSubset<T, previsao_demandaUpsertArgs<ExtArgs>>): Prisma__previsao_demandaClient<$Result.GetResult<Prisma.$previsao_demandaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Previsao_demandas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {previsao_demandaCountArgs} args - Arguments to filter Previsao_demandas to count.
     * @example
     * // Count the number of Previsao_demandas
     * const count = await prisma.previsao_demanda.count({
     *   where: {
     *     // ... the filter for the Previsao_demandas we want to count
     *   }
     * })
    **/
    count<T extends previsao_demandaCountArgs>(
      args?: Subset<T, previsao_demandaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Previsao_demandaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Previsao_demanda.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Previsao_demandaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Previsao_demandaAggregateArgs>(args: Subset<T, Previsao_demandaAggregateArgs>): Prisma.PrismaPromise<GetPrevisao_demandaAggregateType<T>>

    /**
     * Group by Previsao_demanda.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {previsao_demandaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends previsao_demandaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: previsao_demandaGroupByArgs['orderBy'] }
        : { orderBy?: previsao_demandaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, previsao_demandaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPrevisao_demandaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the previsao_demanda model
   */
  readonly fields: previsao_demandaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for previsao_demanda.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__previsao_demandaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    produto<T extends produtoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, produtoDefaultArgs<ExtArgs>>): Prisma__produtoClient<$Result.GetResult<Prisma.$produtoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    historicos<T extends previsao_demanda$historicosArgs<ExtArgs> = {}>(args?: Subset<T, previsao_demanda$historicosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$historico_previsaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the previsao_demanda model
   */
  interface previsao_demandaFieldRefs {
    readonly id_previsao: FieldRef<"previsao_demanda", 'Int'>
    readonly id_produto: FieldRef<"previsao_demanda", 'Int'>
    readonly data_prevista: FieldRef<"previsao_demanda", 'DateTime'>
    readonly demanda_prevista: FieldRef<"previsao_demanda", 'Int'>
    readonly id_financeiro: FieldRef<"previsao_demanda", 'Int'>
    readonly confianca_modelo: FieldRef<"previsao_demanda", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * previsao_demanda findUnique
   */
  export type previsao_demandaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the previsao_demanda
     */
    select?: previsao_demandaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the previsao_demanda
     */
    omit?: previsao_demandaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: previsao_demandaInclude<ExtArgs> | null
    /**
     * Filter, which previsao_demanda to fetch.
     */
    where: previsao_demandaWhereUniqueInput
  }

  /**
   * previsao_demanda findUniqueOrThrow
   */
  export type previsao_demandaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the previsao_demanda
     */
    select?: previsao_demandaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the previsao_demanda
     */
    omit?: previsao_demandaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: previsao_demandaInclude<ExtArgs> | null
    /**
     * Filter, which previsao_demanda to fetch.
     */
    where: previsao_demandaWhereUniqueInput
  }

  /**
   * previsao_demanda findFirst
   */
  export type previsao_demandaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the previsao_demanda
     */
    select?: previsao_demandaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the previsao_demanda
     */
    omit?: previsao_demandaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: previsao_demandaInclude<ExtArgs> | null
    /**
     * Filter, which previsao_demanda to fetch.
     */
    where?: previsao_demandaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of previsao_demandas to fetch.
     */
    orderBy?: previsao_demandaOrderByWithRelationInput | previsao_demandaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for previsao_demandas.
     */
    cursor?: previsao_demandaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` previsao_demandas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` previsao_demandas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of previsao_demandas.
     */
    distinct?: Previsao_demandaScalarFieldEnum | Previsao_demandaScalarFieldEnum[]
  }

  /**
   * previsao_demanda findFirstOrThrow
   */
  export type previsao_demandaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the previsao_demanda
     */
    select?: previsao_demandaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the previsao_demanda
     */
    omit?: previsao_demandaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: previsao_demandaInclude<ExtArgs> | null
    /**
     * Filter, which previsao_demanda to fetch.
     */
    where?: previsao_demandaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of previsao_demandas to fetch.
     */
    orderBy?: previsao_demandaOrderByWithRelationInput | previsao_demandaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for previsao_demandas.
     */
    cursor?: previsao_demandaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` previsao_demandas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` previsao_demandas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of previsao_demandas.
     */
    distinct?: Previsao_demandaScalarFieldEnum | Previsao_demandaScalarFieldEnum[]
  }

  /**
   * previsao_demanda findMany
   */
  export type previsao_demandaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the previsao_demanda
     */
    select?: previsao_demandaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the previsao_demanda
     */
    omit?: previsao_demandaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: previsao_demandaInclude<ExtArgs> | null
    /**
     * Filter, which previsao_demandas to fetch.
     */
    where?: previsao_demandaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of previsao_demandas to fetch.
     */
    orderBy?: previsao_demandaOrderByWithRelationInput | previsao_demandaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing previsao_demandas.
     */
    cursor?: previsao_demandaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` previsao_demandas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` previsao_demandas.
     */
    skip?: number
    distinct?: Previsao_demandaScalarFieldEnum | Previsao_demandaScalarFieldEnum[]
  }

  /**
   * previsao_demanda create
   */
  export type previsao_demandaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the previsao_demanda
     */
    select?: previsao_demandaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the previsao_demanda
     */
    omit?: previsao_demandaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: previsao_demandaInclude<ExtArgs> | null
    /**
     * The data needed to create a previsao_demanda.
     */
    data: XOR<previsao_demandaCreateInput, previsao_demandaUncheckedCreateInput>
  }

  /**
   * previsao_demanda createMany
   */
  export type previsao_demandaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many previsao_demandas.
     */
    data: previsao_demandaCreateManyInput | previsao_demandaCreateManyInput[]
  }

  /**
   * previsao_demanda createManyAndReturn
   */
  export type previsao_demandaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the previsao_demanda
     */
    select?: previsao_demandaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the previsao_demanda
     */
    omit?: previsao_demandaOmit<ExtArgs> | null
    /**
     * The data used to create many previsao_demandas.
     */
    data: previsao_demandaCreateManyInput | previsao_demandaCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: previsao_demandaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * previsao_demanda update
   */
  export type previsao_demandaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the previsao_demanda
     */
    select?: previsao_demandaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the previsao_demanda
     */
    omit?: previsao_demandaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: previsao_demandaInclude<ExtArgs> | null
    /**
     * The data needed to update a previsao_demanda.
     */
    data: XOR<previsao_demandaUpdateInput, previsao_demandaUncheckedUpdateInput>
    /**
     * Choose, which previsao_demanda to update.
     */
    where: previsao_demandaWhereUniqueInput
  }

  /**
   * previsao_demanda updateMany
   */
  export type previsao_demandaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update previsao_demandas.
     */
    data: XOR<previsao_demandaUpdateManyMutationInput, previsao_demandaUncheckedUpdateManyInput>
    /**
     * Filter which previsao_demandas to update
     */
    where?: previsao_demandaWhereInput
    /**
     * Limit how many previsao_demandas to update.
     */
    limit?: number
  }

  /**
   * previsao_demanda updateManyAndReturn
   */
  export type previsao_demandaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the previsao_demanda
     */
    select?: previsao_demandaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the previsao_demanda
     */
    omit?: previsao_demandaOmit<ExtArgs> | null
    /**
     * The data used to update previsao_demandas.
     */
    data: XOR<previsao_demandaUpdateManyMutationInput, previsao_demandaUncheckedUpdateManyInput>
    /**
     * Filter which previsao_demandas to update
     */
    where?: previsao_demandaWhereInput
    /**
     * Limit how many previsao_demandas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: previsao_demandaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * previsao_demanda upsert
   */
  export type previsao_demandaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the previsao_demanda
     */
    select?: previsao_demandaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the previsao_demanda
     */
    omit?: previsao_demandaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: previsao_demandaInclude<ExtArgs> | null
    /**
     * The filter to search for the previsao_demanda to update in case it exists.
     */
    where: previsao_demandaWhereUniqueInput
    /**
     * In case the previsao_demanda found by the `where` argument doesn't exist, create a new previsao_demanda with this data.
     */
    create: XOR<previsao_demandaCreateInput, previsao_demandaUncheckedCreateInput>
    /**
     * In case the previsao_demanda was found with the provided `where` argument, update it with this data.
     */
    update: XOR<previsao_demandaUpdateInput, previsao_demandaUncheckedUpdateInput>
  }

  /**
   * previsao_demanda delete
   */
  export type previsao_demandaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the previsao_demanda
     */
    select?: previsao_demandaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the previsao_demanda
     */
    omit?: previsao_demandaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: previsao_demandaInclude<ExtArgs> | null
    /**
     * Filter which previsao_demanda to delete.
     */
    where: previsao_demandaWhereUniqueInput
  }

  /**
   * previsao_demanda deleteMany
   */
  export type previsao_demandaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which previsao_demandas to delete
     */
    where?: previsao_demandaWhereInput
    /**
     * Limit how many previsao_demandas to delete.
     */
    limit?: number
  }

  /**
   * previsao_demanda.historicos
   */
  export type previsao_demanda$historicosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historico_previsao
     */
    select?: historico_previsaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historico_previsao
     */
    omit?: historico_previsaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historico_previsaoInclude<ExtArgs> | null
    where?: historico_previsaoWhereInput
    orderBy?: historico_previsaoOrderByWithRelationInput | historico_previsaoOrderByWithRelationInput[]
    cursor?: historico_previsaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Historico_previsaoScalarFieldEnum | Historico_previsaoScalarFieldEnum[]
  }

  /**
   * previsao_demanda without action
   */
  export type previsao_demandaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the previsao_demanda
     */
    select?: previsao_demandaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the previsao_demanda
     */
    omit?: previsao_demandaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: previsao_demandaInclude<ExtArgs> | null
  }


  /**
   * Model fornecedor
   */

  export type AggregateFornecedor = {
    _count: FornecedorCountAggregateOutputType | null
    _avg: FornecedorAvgAggregateOutputType | null
    _sum: FornecedorSumAggregateOutputType | null
    _min: FornecedorMinAggregateOutputType | null
    _max: FornecedorMaxAggregateOutputType | null
  }

  export type FornecedorAvgAggregateOutputType = {
    id_fornecedor: number | null
  }

  export type FornecedorSumAggregateOutputType = {
    id_fornecedor: number | null
  }

  export type FornecedorMinAggregateOutputType = {
    id_fornecedor: number | null
    nome: string | null
    cnpj: string | null
    telefone: string | null
    email: string | null
    endereco: string | null
  }

  export type FornecedorMaxAggregateOutputType = {
    id_fornecedor: number | null
    nome: string | null
    cnpj: string | null
    telefone: string | null
    email: string | null
    endereco: string | null
  }

  export type FornecedorCountAggregateOutputType = {
    id_fornecedor: number
    nome: number
    cnpj: number
    telefone: number
    email: number
    endereco: number
    _all: number
  }


  export type FornecedorAvgAggregateInputType = {
    id_fornecedor?: true
  }

  export type FornecedorSumAggregateInputType = {
    id_fornecedor?: true
  }

  export type FornecedorMinAggregateInputType = {
    id_fornecedor?: true
    nome?: true
    cnpj?: true
    telefone?: true
    email?: true
    endereco?: true
  }

  export type FornecedorMaxAggregateInputType = {
    id_fornecedor?: true
    nome?: true
    cnpj?: true
    telefone?: true
    email?: true
    endereco?: true
  }

  export type FornecedorCountAggregateInputType = {
    id_fornecedor?: true
    nome?: true
    cnpj?: true
    telefone?: true
    email?: true
    endereco?: true
    _all?: true
  }

  export type FornecedorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which fornecedor to aggregate.
     */
    where?: fornecedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of fornecedors to fetch.
     */
    orderBy?: fornecedorOrderByWithRelationInput | fornecedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: fornecedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` fornecedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` fornecedors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned fornecedors
    **/
    _count?: true | FornecedorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FornecedorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FornecedorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FornecedorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FornecedorMaxAggregateInputType
  }

  export type GetFornecedorAggregateType<T extends FornecedorAggregateArgs> = {
        [P in keyof T & keyof AggregateFornecedor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFornecedor[P]>
      : GetScalarType<T[P], AggregateFornecedor[P]>
  }




  export type fornecedorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: fornecedorWhereInput
    orderBy?: fornecedorOrderByWithAggregationInput | fornecedorOrderByWithAggregationInput[]
    by: FornecedorScalarFieldEnum[] | FornecedorScalarFieldEnum
    having?: fornecedorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FornecedorCountAggregateInputType | true
    _avg?: FornecedorAvgAggregateInputType
    _sum?: FornecedorSumAggregateInputType
    _min?: FornecedorMinAggregateInputType
    _max?: FornecedorMaxAggregateInputType
  }

  export type FornecedorGroupByOutputType = {
    id_fornecedor: number
    nome: string
    cnpj: string
    telefone: string | null
    email: string | null
    endereco: string | null
    _count: FornecedorCountAggregateOutputType | null
    _avg: FornecedorAvgAggregateOutputType | null
    _sum: FornecedorSumAggregateOutputType | null
    _min: FornecedorMinAggregateOutputType | null
    _max: FornecedorMaxAggregateOutputType | null
  }

  type GetFornecedorGroupByPayload<T extends fornecedorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FornecedorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FornecedorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FornecedorGroupByOutputType[P]>
            : GetScalarType<T[P], FornecedorGroupByOutputType[P]>
        }
      >
    >


  export type fornecedorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_fornecedor?: boolean
    nome?: boolean
    cnpj?: boolean
    telefone?: boolean
    email?: boolean
    endereco?: boolean
    compras?: boolean | fornecedor$comprasArgs<ExtArgs>
    produtos?: boolean | fornecedor$produtosArgs<ExtArgs>
    _count?: boolean | FornecedorCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["fornecedor"]>

  export type fornecedorSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_fornecedor?: boolean
    nome?: boolean
    cnpj?: boolean
    telefone?: boolean
    email?: boolean
    endereco?: boolean
  }, ExtArgs["result"]["fornecedor"]>

  export type fornecedorSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_fornecedor?: boolean
    nome?: boolean
    cnpj?: boolean
    telefone?: boolean
    email?: boolean
    endereco?: boolean
  }, ExtArgs["result"]["fornecedor"]>

  export type fornecedorSelectScalar = {
    id_fornecedor?: boolean
    nome?: boolean
    cnpj?: boolean
    telefone?: boolean
    email?: boolean
    endereco?: boolean
  }

  export type fornecedorOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_fornecedor" | "nome" | "cnpj" | "telefone" | "email" | "endereco", ExtArgs["result"]["fornecedor"]>
  export type fornecedorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    compras?: boolean | fornecedor$comprasArgs<ExtArgs>
    produtos?: boolean | fornecedor$produtosArgs<ExtArgs>
    _count?: boolean | FornecedorCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type fornecedorIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type fornecedorIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $fornecedorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "fornecedor"
    objects: {
      compras: Prisma.$compraPayload<ExtArgs>[]
      produtos: Prisma.$produtoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_fornecedor: number
      nome: string
      cnpj: string
      telefone: string | null
      email: string | null
      endereco: string | null
    }, ExtArgs["result"]["fornecedor"]>
    composites: {}
  }

  type fornecedorGetPayload<S extends boolean | null | undefined | fornecedorDefaultArgs> = $Result.GetResult<Prisma.$fornecedorPayload, S>

  type fornecedorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<fornecedorFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FornecedorCountAggregateInputType | true
    }

  export interface fornecedorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['fornecedor'], meta: { name: 'fornecedor' } }
    /**
     * Find zero or one Fornecedor that matches the filter.
     * @param {fornecedorFindUniqueArgs} args - Arguments to find a Fornecedor
     * @example
     * // Get one Fornecedor
     * const fornecedor = await prisma.fornecedor.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends fornecedorFindUniqueArgs>(args: SelectSubset<T, fornecedorFindUniqueArgs<ExtArgs>>): Prisma__fornecedorClient<$Result.GetResult<Prisma.$fornecedorPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Fornecedor that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {fornecedorFindUniqueOrThrowArgs} args - Arguments to find a Fornecedor
     * @example
     * // Get one Fornecedor
     * const fornecedor = await prisma.fornecedor.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends fornecedorFindUniqueOrThrowArgs>(args: SelectSubset<T, fornecedorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__fornecedorClient<$Result.GetResult<Prisma.$fornecedorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Fornecedor that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fornecedorFindFirstArgs} args - Arguments to find a Fornecedor
     * @example
     * // Get one Fornecedor
     * const fornecedor = await prisma.fornecedor.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends fornecedorFindFirstArgs>(args?: SelectSubset<T, fornecedorFindFirstArgs<ExtArgs>>): Prisma__fornecedorClient<$Result.GetResult<Prisma.$fornecedorPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Fornecedor that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fornecedorFindFirstOrThrowArgs} args - Arguments to find a Fornecedor
     * @example
     * // Get one Fornecedor
     * const fornecedor = await prisma.fornecedor.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends fornecedorFindFirstOrThrowArgs>(args?: SelectSubset<T, fornecedorFindFirstOrThrowArgs<ExtArgs>>): Prisma__fornecedorClient<$Result.GetResult<Prisma.$fornecedorPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Fornecedors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fornecedorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Fornecedors
     * const fornecedors = await prisma.fornecedor.findMany()
     * 
     * // Get first 10 Fornecedors
     * const fornecedors = await prisma.fornecedor.findMany({ take: 10 })
     * 
     * // Only select the `id_fornecedor`
     * const fornecedorWithId_fornecedorOnly = await prisma.fornecedor.findMany({ select: { id_fornecedor: true } })
     * 
     */
    findMany<T extends fornecedorFindManyArgs>(args?: SelectSubset<T, fornecedorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$fornecedorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Fornecedor.
     * @param {fornecedorCreateArgs} args - Arguments to create a Fornecedor.
     * @example
     * // Create one Fornecedor
     * const Fornecedor = await prisma.fornecedor.create({
     *   data: {
     *     // ... data to create a Fornecedor
     *   }
     * })
     * 
     */
    create<T extends fornecedorCreateArgs>(args: SelectSubset<T, fornecedorCreateArgs<ExtArgs>>): Prisma__fornecedorClient<$Result.GetResult<Prisma.$fornecedorPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Fornecedors.
     * @param {fornecedorCreateManyArgs} args - Arguments to create many Fornecedors.
     * @example
     * // Create many Fornecedors
     * const fornecedor = await prisma.fornecedor.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends fornecedorCreateManyArgs>(args?: SelectSubset<T, fornecedorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Fornecedors and returns the data saved in the database.
     * @param {fornecedorCreateManyAndReturnArgs} args - Arguments to create many Fornecedors.
     * @example
     * // Create many Fornecedors
     * const fornecedor = await prisma.fornecedor.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Fornecedors and only return the `id_fornecedor`
     * const fornecedorWithId_fornecedorOnly = await prisma.fornecedor.createManyAndReturn({
     *   select: { id_fornecedor: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends fornecedorCreateManyAndReturnArgs>(args?: SelectSubset<T, fornecedorCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$fornecedorPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Fornecedor.
     * @param {fornecedorDeleteArgs} args - Arguments to delete one Fornecedor.
     * @example
     * // Delete one Fornecedor
     * const Fornecedor = await prisma.fornecedor.delete({
     *   where: {
     *     // ... filter to delete one Fornecedor
     *   }
     * })
     * 
     */
    delete<T extends fornecedorDeleteArgs>(args: SelectSubset<T, fornecedorDeleteArgs<ExtArgs>>): Prisma__fornecedorClient<$Result.GetResult<Prisma.$fornecedorPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Fornecedor.
     * @param {fornecedorUpdateArgs} args - Arguments to update one Fornecedor.
     * @example
     * // Update one Fornecedor
     * const fornecedor = await prisma.fornecedor.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends fornecedorUpdateArgs>(args: SelectSubset<T, fornecedorUpdateArgs<ExtArgs>>): Prisma__fornecedorClient<$Result.GetResult<Prisma.$fornecedorPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Fornecedors.
     * @param {fornecedorDeleteManyArgs} args - Arguments to filter Fornecedors to delete.
     * @example
     * // Delete a few Fornecedors
     * const { count } = await prisma.fornecedor.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends fornecedorDeleteManyArgs>(args?: SelectSubset<T, fornecedorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Fornecedors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fornecedorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Fornecedors
     * const fornecedor = await prisma.fornecedor.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends fornecedorUpdateManyArgs>(args: SelectSubset<T, fornecedorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Fornecedors and returns the data updated in the database.
     * @param {fornecedorUpdateManyAndReturnArgs} args - Arguments to update many Fornecedors.
     * @example
     * // Update many Fornecedors
     * const fornecedor = await prisma.fornecedor.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Fornecedors and only return the `id_fornecedor`
     * const fornecedorWithId_fornecedorOnly = await prisma.fornecedor.updateManyAndReturn({
     *   select: { id_fornecedor: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends fornecedorUpdateManyAndReturnArgs>(args: SelectSubset<T, fornecedorUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$fornecedorPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Fornecedor.
     * @param {fornecedorUpsertArgs} args - Arguments to update or create a Fornecedor.
     * @example
     * // Update or create a Fornecedor
     * const fornecedor = await prisma.fornecedor.upsert({
     *   create: {
     *     // ... data to create a Fornecedor
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Fornecedor we want to update
     *   }
     * })
     */
    upsert<T extends fornecedorUpsertArgs>(args: SelectSubset<T, fornecedorUpsertArgs<ExtArgs>>): Prisma__fornecedorClient<$Result.GetResult<Prisma.$fornecedorPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Fornecedors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fornecedorCountArgs} args - Arguments to filter Fornecedors to count.
     * @example
     * // Count the number of Fornecedors
     * const count = await prisma.fornecedor.count({
     *   where: {
     *     // ... the filter for the Fornecedors we want to count
     *   }
     * })
    **/
    count<T extends fornecedorCountArgs>(
      args?: Subset<T, fornecedorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FornecedorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Fornecedor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FornecedorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FornecedorAggregateArgs>(args: Subset<T, FornecedorAggregateArgs>): Prisma.PrismaPromise<GetFornecedorAggregateType<T>>

    /**
     * Group by Fornecedor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fornecedorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends fornecedorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: fornecedorGroupByArgs['orderBy'] }
        : { orderBy?: fornecedorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, fornecedorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFornecedorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the fornecedor model
   */
  readonly fields: fornecedorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for fornecedor.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__fornecedorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    compras<T extends fornecedor$comprasArgs<ExtArgs> = {}>(args?: Subset<T, fornecedor$comprasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$compraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    produtos<T extends fornecedor$produtosArgs<ExtArgs> = {}>(args?: Subset<T, fornecedor$produtosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$produtoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the fornecedor model
   */
  interface fornecedorFieldRefs {
    readonly id_fornecedor: FieldRef<"fornecedor", 'Int'>
    readonly nome: FieldRef<"fornecedor", 'String'>
    readonly cnpj: FieldRef<"fornecedor", 'String'>
    readonly telefone: FieldRef<"fornecedor", 'String'>
    readonly email: FieldRef<"fornecedor", 'String'>
    readonly endereco: FieldRef<"fornecedor", 'String'>
  }
    

  // Custom InputTypes
  /**
   * fornecedor findUnique
   */
  export type fornecedorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fornecedor
     */
    select?: fornecedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fornecedor
     */
    omit?: fornecedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fornecedorInclude<ExtArgs> | null
    /**
     * Filter, which fornecedor to fetch.
     */
    where: fornecedorWhereUniqueInput
  }

  /**
   * fornecedor findUniqueOrThrow
   */
  export type fornecedorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fornecedor
     */
    select?: fornecedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fornecedor
     */
    omit?: fornecedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fornecedorInclude<ExtArgs> | null
    /**
     * Filter, which fornecedor to fetch.
     */
    where: fornecedorWhereUniqueInput
  }

  /**
   * fornecedor findFirst
   */
  export type fornecedorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fornecedor
     */
    select?: fornecedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fornecedor
     */
    omit?: fornecedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fornecedorInclude<ExtArgs> | null
    /**
     * Filter, which fornecedor to fetch.
     */
    where?: fornecedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of fornecedors to fetch.
     */
    orderBy?: fornecedorOrderByWithRelationInput | fornecedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for fornecedors.
     */
    cursor?: fornecedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` fornecedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` fornecedors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of fornecedors.
     */
    distinct?: FornecedorScalarFieldEnum | FornecedorScalarFieldEnum[]
  }

  /**
   * fornecedor findFirstOrThrow
   */
  export type fornecedorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fornecedor
     */
    select?: fornecedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fornecedor
     */
    omit?: fornecedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fornecedorInclude<ExtArgs> | null
    /**
     * Filter, which fornecedor to fetch.
     */
    where?: fornecedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of fornecedors to fetch.
     */
    orderBy?: fornecedorOrderByWithRelationInput | fornecedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for fornecedors.
     */
    cursor?: fornecedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` fornecedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` fornecedors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of fornecedors.
     */
    distinct?: FornecedorScalarFieldEnum | FornecedorScalarFieldEnum[]
  }

  /**
   * fornecedor findMany
   */
  export type fornecedorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fornecedor
     */
    select?: fornecedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fornecedor
     */
    omit?: fornecedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fornecedorInclude<ExtArgs> | null
    /**
     * Filter, which fornecedors to fetch.
     */
    where?: fornecedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of fornecedors to fetch.
     */
    orderBy?: fornecedorOrderByWithRelationInput | fornecedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing fornecedors.
     */
    cursor?: fornecedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` fornecedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` fornecedors.
     */
    skip?: number
    distinct?: FornecedorScalarFieldEnum | FornecedorScalarFieldEnum[]
  }

  /**
   * fornecedor create
   */
  export type fornecedorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fornecedor
     */
    select?: fornecedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fornecedor
     */
    omit?: fornecedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fornecedorInclude<ExtArgs> | null
    /**
     * The data needed to create a fornecedor.
     */
    data: XOR<fornecedorCreateInput, fornecedorUncheckedCreateInput>
  }

  /**
   * fornecedor createMany
   */
  export type fornecedorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many fornecedors.
     */
    data: fornecedorCreateManyInput | fornecedorCreateManyInput[]
  }

  /**
   * fornecedor createManyAndReturn
   */
  export type fornecedorCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fornecedor
     */
    select?: fornecedorSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the fornecedor
     */
    omit?: fornecedorOmit<ExtArgs> | null
    /**
     * The data used to create many fornecedors.
     */
    data: fornecedorCreateManyInput | fornecedorCreateManyInput[]
  }

  /**
   * fornecedor update
   */
  export type fornecedorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fornecedor
     */
    select?: fornecedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fornecedor
     */
    omit?: fornecedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fornecedorInclude<ExtArgs> | null
    /**
     * The data needed to update a fornecedor.
     */
    data: XOR<fornecedorUpdateInput, fornecedorUncheckedUpdateInput>
    /**
     * Choose, which fornecedor to update.
     */
    where: fornecedorWhereUniqueInput
  }

  /**
   * fornecedor updateMany
   */
  export type fornecedorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update fornecedors.
     */
    data: XOR<fornecedorUpdateManyMutationInput, fornecedorUncheckedUpdateManyInput>
    /**
     * Filter which fornecedors to update
     */
    where?: fornecedorWhereInput
    /**
     * Limit how many fornecedors to update.
     */
    limit?: number
  }

  /**
   * fornecedor updateManyAndReturn
   */
  export type fornecedorUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fornecedor
     */
    select?: fornecedorSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the fornecedor
     */
    omit?: fornecedorOmit<ExtArgs> | null
    /**
     * The data used to update fornecedors.
     */
    data: XOR<fornecedorUpdateManyMutationInput, fornecedorUncheckedUpdateManyInput>
    /**
     * Filter which fornecedors to update
     */
    where?: fornecedorWhereInput
    /**
     * Limit how many fornecedors to update.
     */
    limit?: number
  }

  /**
   * fornecedor upsert
   */
  export type fornecedorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fornecedor
     */
    select?: fornecedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fornecedor
     */
    omit?: fornecedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fornecedorInclude<ExtArgs> | null
    /**
     * The filter to search for the fornecedor to update in case it exists.
     */
    where: fornecedorWhereUniqueInput
    /**
     * In case the fornecedor found by the `where` argument doesn't exist, create a new fornecedor with this data.
     */
    create: XOR<fornecedorCreateInput, fornecedorUncheckedCreateInput>
    /**
     * In case the fornecedor was found with the provided `where` argument, update it with this data.
     */
    update: XOR<fornecedorUpdateInput, fornecedorUncheckedUpdateInput>
  }

  /**
   * fornecedor delete
   */
  export type fornecedorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fornecedor
     */
    select?: fornecedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fornecedor
     */
    omit?: fornecedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fornecedorInclude<ExtArgs> | null
    /**
     * Filter which fornecedor to delete.
     */
    where: fornecedorWhereUniqueInput
  }

  /**
   * fornecedor deleteMany
   */
  export type fornecedorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which fornecedors to delete
     */
    where?: fornecedorWhereInput
    /**
     * Limit how many fornecedors to delete.
     */
    limit?: number
  }

  /**
   * fornecedor.compras
   */
  export type fornecedor$comprasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compra
     */
    select?: compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compra
     */
    omit?: compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compraInclude<ExtArgs> | null
    where?: compraWhereInput
    orderBy?: compraOrderByWithRelationInput | compraOrderByWithRelationInput[]
    cursor?: compraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CompraScalarFieldEnum | CompraScalarFieldEnum[]
  }

  /**
   * fornecedor.produtos
   */
  export type fornecedor$produtosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produto
     */
    select?: produtoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produto
     */
    omit?: produtoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produtoInclude<ExtArgs> | null
    where?: produtoWhereInput
    orderBy?: produtoOrderByWithRelationInput | produtoOrderByWithRelationInput[]
    cursor?: produtoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProdutoScalarFieldEnum | ProdutoScalarFieldEnum[]
  }

  /**
   * fornecedor without action
   */
  export type fornecedorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the fornecedor
     */
    select?: fornecedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the fornecedor
     */
    omit?: fornecedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fornecedorInclude<ExtArgs> | null
  }


  /**
   * Model historico_previsao
   */

  export type AggregateHistorico_previsao = {
    _count: Historico_previsaoCountAggregateOutputType | null
    _avg: Historico_previsaoAvgAggregateOutputType | null
    _sum: Historico_previsaoSumAggregateOutputType | null
    _min: Historico_previsaoMinAggregateOutputType | null
    _max: Historico_previsaoMaxAggregateOutputType | null
  }

  export type Historico_previsaoAvgAggregateOutputType = {
    id_historico: number | null
    id_produto: number | null
    id_previsao: number | null
    id_financeiro: number | null
    demanda_real: number | null
    diferenca: number | null
    precisao_modelo: number | null
  }

  export type Historico_previsaoSumAggregateOutputType = {
    id_historico: number | null
    id_produto: number | null
    id_previsao: number | null
    id_financeiro: number | null
    demanda_real: number | null
    diferenca: number | null
    precisao_modelo: number | null
  }

  export type Historico_previsaoMinAggregateOutputType = {
    id_historico: number | null
    id_produto: number | null
    id_previsao: number | null
    id_financeiro: number | null
    demanda_real: number | null
    diferenca: number | null
    precisao_modelo: number | null
  }

  export type Historico_previsaoMaxAggregateOutputType = {
    id_historico: number | null
    id_produto: number | null
    id_previsao: number | null
    id_financeiro: number | null
    demanda_real: number | null
    diferenca: number | null
    precisao_modelo: number | null
  }

  export type Historico_previsaoCountAggregateOutputType = {
    id_historico: number
    id_produto: number
    id_previsao: number
    id_financeiro: number
    demanda_real: number
    diferenca: number
    precisao_modelo: number
    _all: number
  }


  export type Historico_previsaoAvgAggregateInputType = {
    id_historico?: true
    id_produto?: true
    id_previsao?: true
    id_financeiro?: true
    demanda_real?: true
    diferenca?: true
    precisao_modelo?: true
  }

  export type Historico_previsaoSumAggregateInputType = {
    id_historico?: true
    id_produto?: true
    id_previsao?: true
    id_financeiro?: true
    demanda_real?: true
    diferenca?: true
    precisao_modelo?: true
  }

  export type Historico_previsaoMinAggregateInputType = {
    id_historico?: true
    id_produto?: true
    id_previsao?: true
    id_financeiro?: true
    demanda_real?: true
    diferenca?: true
    precisao_modelo?: true
  }

  export type Historico_previsaoMaxAggregateInputType = {
    id_historico?: true
    id_produto?: true
    id_previsao?: true
    id_financeiro?: true
    demanda_real?: true
    diferenca?: true
    precisao_modelo?: true
  }

  export type Historico_previsaoCountAggregateInputType = {
    id_historico?: true
    id_produto?: true
    id_previsao?: true
    id_financeiro?: true
    demanda_real?: true
    diferenca?: true
    precisao_modelo?: true
    _all?: true
  }

  export type Historico_previsaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which historico_previsao to aggregate.
     */
    where?: historico_previsaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historico_previsaos to fetch.
     */
    orderBy?: historico_previsaoOrderByWithRelationInput | historico_previsaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: historico_previsaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historico_previsaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historico_previsaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned historico_previsaos
    **/
    _count?: true | Historico_previsaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Historico_previsaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Historico_previsaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Historico_previsaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Historico_previsaoMaxAggregateInputType
  }

  export type GetHistorico_previsaoAggregateType<T extends Historico_previsaoAggregateArgs> = {
        [P in keyof T & keyof AggregateHistorico_previsao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHistorico_previsao[P]>
      : GetScalarType<T[P], AggregateHistorico_previsao[P]>
  }




  export type historico_previsaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: historico_previsaoWhereInput
    orderBy?: historico_previsaoOrderByWithAggregationInput | historico_previsaoOrderByWithAggregationInput[]
    by: Historico_previsaoScalarFieldEnum[] | Historico_previsaoScalarFieldEnum
    having?: historico_previsaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Historico_previsaoCountAggregateInputType | true
    _avg?: Historico_previsaoAvgAggregateInputType
    _sum?: Historico_previsaoSumAggregateInputType
    _min?: Historico_previsaoMinAggregateInputType
    _max?: Historico_previsaoMaxAggregateInputType
  }

  export type Historico_previsaoGroupByOutputType = {
    id_historico: number
    id_produto: number
    id_previsao: number
    id_financeiro: number | null
    demanda_real: number
    diferenca: number
    precisao_modelo: number | null
    _count: Historico_previsaoCountAggregateOutputType | null
    _avg: Historico_previsaoAvgAggregateOutputType | null
    _sum: Historico_previsaoSumAggregateOutputType | null
    _min: Historico_previsaoMinAggregateOutputType | null
    _max: Historico_previsaoMaxAggregateOutputType | null
  }

  type GetHistorico_previsaoGroupByPayload<T extends historico_previsaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Historico_previsaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Historico_previsaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Historico_previsaoGroupByOutputType[P]>
            : GetScalarType<T[P], Historico_previsaoGroupByOutputType[P]>
        }
      >
    >


  export type historico_previsaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_historico?: boolean
    id_produto?: boolean
    id_previsao?: boolean
    id_financeiro?: boolean
    demanda_real?: boolean
    diferenca?: boolean
    precisao_modelo?: boolean
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    previsao?: boolean | previsao_demandaDefaultArgs<ExtArgs>
    financeiro?: boolean | historico_previsao$financeiroArgs<ExtArgs>
  }, ExtArgs["result"]["historico_previsao"]>

  export type historico_previsaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_historico?: boolean
    id_produto?: boolean
    id_previsao?: boolean
    id_financeiro?: boolean
    demanda_real?: boolean
    diferenca?: boolean
    precisao_modelo?: boolean
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    previsao?: boolean | previsao_demandaDefaultArgs<ExtArgs>
    financeiro?: boolean | historico_previsao$financeiroArgs<ExtArgs>
  }, ExtArgs["result"]["historico_previsao"]>

  export type historico_previsaoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_historico?: boolean
    id_produto?: boolean
    id_previsao?: boolean
    id_financeiro?: boolean
    demanda_real?: boolean
    diferenca?: boolean
    precisao_modelo?: boolean
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    previsao?: boolean | previsao_demandaDefaultArgs<ExtArgs>
    financeiro?: boolean | historico_previsao$financeiroArgs<ExtArgs>
  }, ExtArgs["result"]["historico_previsao"]>

  export type historico_previsaoSelectScalar = {
    id_historico?: boolean
    id_produto?: boolean
    id_previsao?: boolean
    id_financeiro?: boolean
    demanda_real?: boolean
    diferenca?: boolean
    precisao_modelo?: boolean
  }

  export type historico_previsaoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_historico" | "id_produto" | "id_previsao" | "id_financeiro" | "demanda_real" | "diferenca" | "precisao_modelo", ExtArgs["result"]["historico_previsao"]>
  export type historico_previsaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    previsao?: boolean | previsao_demandaDefaultArgs<ExtArgs>
    financeiro?: boolean | historico_previsao$financeiroArgs<ExtArgs>
  }
  export type historico_previsaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    previsao?: boolean | previsao_demandaDefaultArgs<ExtArgs>
    financeiro?: boolean | historico_previsao$financeiroArgs<ExtArgs>
  }
  export type historico_previsaoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    previsao?: boolean | previsao_demandaDefaultArgs<ExtArgs>
    financeiro?: boolean | historico_previsao$financeiroArgs<ExtArgs>
  }

  export type $historico_previsaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "historico_previsao"
    objects: {
      produto: Prisma.$produtoPayload<ExtArgs>
      previsao: Prisma.$previsao_demandaPayload<ExtArgs>
      financeiro: Prisma.$financeiroPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_historico: number
      id_produto: number
      id_previsao: number
      id_financeiro: number | null
      demanda_real: number
      diferenca: number
      precisao_modelo: number | null
    }, ExtArgs["result"]["historico_previsao"]>
    composites: {}
  }

  type historico_previsaoGetPayload<S extends boolean | null | undefined | historico_previsaoDefaultArgs> = $Result.GetResult<Prisma.$historico_previsaoPayload, S>

  type historico_previsaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<historico_previsaoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Historico_previsaoCountAggregateInputType | true
    }

  export interface historico_previsaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['historico_previsao'], meta: { name: 'historico_previsao' } }
    /**
     * Find zero or one Historico_previsao that matches the filter.
     * @param {historico_previsaoFindUniqueArgs} args - Arguments to find a Historico_previsao
     * @example
     * // Get one Historico_previsao
     * const historico_previsao = await prisma.historico_previsao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends historico_previsaoFindUniqueArgs>(args: SelectSubset<T, historico_previsaoFindUniqueArgs<ExtArgs>>): Prisma__historico_previsaoClient<$Result.GetResult<Prisma.$historico_previsaoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Historico_previsao that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {historico_previsaoFindUniqueOrThrowArgs} args - Arguments to find a Historico_previsao
     * @example
     * // Get one Historico_previsao
     * const historico_previsao = await prisma.historico_previsao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends historico_previsaoFindUniqueOrThrowArgs>(args: SelectSubset<T, historico_previsaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__historico_previsaoClient<$Result.GetResult<Prisma.$historico_previsaoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Historico_previsao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historico_previsaoFindFirstArgs} args - Arguments to find a Historico_previsao
     * @example
     * // Get one Historico_previsao
     * const historico_previsao = await prisma.historico_previsao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends historico_previsaoFindFirstArgs>(args?: SelectSubset<T, historico_previsaoFindFirstArgs<ExtArgs>>): Prisma__historico_previsaoClient<$Result.GetResult<Prisma.$historico_previsaoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Historico_previsao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historico_previsaoFindFirstOrThrowArgs} args - Arguments to find a Historico_previsao
     * @example
     * // Get one Historico_previsao
     * const historico_previsao = await prisma.historico_previsao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends historico_previsaoFindFirstOrThrowArgs>(args?: SelectSubset<T, historico_previsaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__historico_previsaoClient<$Result.GetResult<Prisma.$historico_previsaoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Historico_previsaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historico_previsaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Historico_previsaos
     * const historico_previsaos = await prisma.historico_previsao.findMany()
     * 
     * // Get first 10 Historico_previsaos
     * const historico_previsaos = await prisma.historico_previsao.findMany({ take: 10 })
     * 
     * // Only select the `id_historico`
     * const historico_previsaoWithId_historicoOnly = await prisma.historico_previsao.findMany({ select: { id_historico: true } })
     * 
     */
    findMany<T extends historico_previsaoFindManyArgs>(args?: SelectSubset<T, historico_previsaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$historico_previsaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Historico_previsao.
     * @param {historico_previsaoCreateArgs} args - Arguments to create a Historico_previsao.
     * @example
     * // Create one Historico_previsao
     * const Historico_previsao = await prisma.historico_previsao.create({
     *   data: {
     *     // ... data to create a Historico_previsao
     *   }
     * })
     * 
     */
    create<T extends historico_previsaoCreateArgs>(args: SelectSubset<T, historico_previsaoCreateArgs<ExtArgs>>): Prisma__historico_previsaoClient<$Result.GetResult<Prisma.$historico_previsaoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Historico_previsaos.
     * @param {historico_previsaoCreateManyArgs} args - Arguments to create many Historico_previsaos.
     * @example
     * // Create many Historico_previsaos
     * const historico_previsao = await prisma.historico_previsao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends historico_previsaoCreateManyArgs>(args?: SelectSubset<T, historico_previsaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Historico_previsaos and returns the data saved in the database.
     * @param {historico_previsaoCreateManyAndReturnArgs} args - Arguments to create many Historico_previsaos.
     * @example
     * // Create many Historico_previsaos
     * const historico_previsao = await prisma.historico_previsao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Historico_previsaos and only return the `id_historico`
     * const historico_previsaoWithId_historicoOnly = await prisma.historico_previsao.createManyAndReturn({
     *   select: { id_historico: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends historico_previsaoCreateManyAndReturnArgs>(args?: SelectSubset<T, historico_previsaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$historico_previsaoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Historico_previsao.
     * @param {historico_previsaoDeleteArgs} args - Arguments to delete one Historico_previsao.
     * @example
     * // Delete one Historico_previsao
     * const Historico_previsao = await prisma.historico_previsao.delete({
     *   where: {
     *     // ... filter to delete one Historico_previsao
     *   }
     * })
     * 
     */
    delete<T extends historico_previsaoDeleteArgs>(args: SelectSubset<T, historico_previsaoDeleteArgs<ExtArgs>>): Prisma__historico_previsaoClient<$Result.GetResult<Prisma.$historico_previsaoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Historico_previsao.
     * @param {historico_previsaoUpdateArgs} args - Arguments to update one Historico_previsao.
     * @example
     * // Update one Historico_previsao
     * const historico_previsao = await prisma.historico_previsao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends historico_previsaoUpdateArgs>(args: SelectSubset<T, historico_previsaoUpdateArgs<ExtArgs>>): Prisma__historico_previsaoClient<$Result.GetResult<Prisma.$historico_previsaoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Historico_previsaos.
     * @param {historico_previsaoDeleteManyArgs} args - Arguments to filter Historico_previsaos to delete.
     * @example
     * // Delete a few Historico_previsaos
     * const { count } = await prisma.historico_previsao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends historico_previsaoDeleteManyArgs>(args?: SelectSubset<T, historico_previsaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Historico_previsaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historico_previsaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Historico_previsaos
     * const historico_previsao = await prisma.historico_previsao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends historico_previsaoUpdateManyArgs>(args: SelectSubset<T, historico_previsaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Historico_previsaos and returns the data updated in the database.
     * @param {historico_previsaoUpdateManyAndReturnArgs} args - Arguments to update many Historico_previsaos.
     * @example
     * // Update many Historico_previsaos
     * const historico_previsao = await prisma.historico_previsao.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Historico_previsaos and only return the `id_historico`
     * const historico_previsaoWithId_historicoOnly = await prisma.historico_previsao.updateManyAndReturn({
     *   select: { id_historico: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends historico_previsaoUpdateManyAndReturnArgs>(args: SelectSubset<T, historico_previsaoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$historico_previsaoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Historico_previsao.
     * @param {historico_previsaoUpsertArgs} args - Arguments to update or create a Historico_previsao.
     * @example
     * // Update or create a Historico_previsao
     * const historico_previsao = await prisma.historico_previsao.upsert({
     *   create: {
     *     // ... data to create a Historico_previsao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Historico_previsao we want to update
     *   }
     * })
     */
    upsert<T extends historico_previsaoUpsertArgs>(args: SelectSubset<T, historico_previsaoUpsertArgs<ExtArgs>>): Prisma__historico_previsaoClient<$Result.GetResult<Prisma.$historico_previsaoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Historico_previsaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historico_previsaoCountArgs} args - Arguments to filter Historico_previsaos to count.
     * @example
     * // Count the number of Historico_previsaos
     * const count = await prisma.historico_previsao.count({
     *   where: {
     *     // ... the filter for the Historico_previsaos we want to count
     *   }
     * })
    **/
    count<T extends historico_previsaoCountArgs>(
      args?: Subset<T, historico_previsaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Historico_previsaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Historico_previsao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Historico_previsaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Historico_previsaoAggregateArgs>(args: Subset<T, Historico_previsaoAggregateArgs>): Prisma.PrismaPromise<GetHistorico_previsaoAggregateType<T>>

    /**
     * Group by Historico_previsao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historico_previsaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends historico_previsaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: historico_previsaoGroupByArgs['orderBy'] }
        : { orderBy?: historico_previsaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, historico_previsaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHistorico_previsaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the historico_previsao model
   */
  readonly fields: historico_previsaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for historico_previsao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__historico_previsaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    produto<T extends produtoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, produtoDefaultArgs<ExtArgs>>): Prisma__produtoClient<$Result.GetResult<Prisma.$produtoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    previsao<T extends previsao_demandaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, previsao_demandaDefaultArgs<ExtArgs>>): Prisma__previsao_demandaClient<$Result.GetResult<Prisma.$previsao_demandaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    financeiro<T extends historico_previsao$financeiroArgs<ExtArgs> = {}>(args?: Subset<T, historico_previsao$financeiroArgs<ExtArgs>>): Prisma__financeiroClient<$Result.GetResult<Prisma.$financeiroPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the historico_previsao model
   */
  interface historico_previsaoFieldRefs {
    readonly id_historico: FieldRef<"historico_previsao", 'Int'>
    readonly id_produto: FieldRef<"historico_previsao", 'Int'>
    readonly id_previsao: FieldRef<"historico_previsao", 'Int'>
    readonly id_financeiro: FieldRef<"historico_previsao", 'Int'>
    readonly demanda_real: FieldRef<"historico_previsao", 'Int'>
    readonly diferenca: FieldRef<"historico_previsao", 'Int'>
    readonly precisao_modelo: FieldRef<"historico_previsao", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * historico_previsao findUnique
   */
  export type historico_previsaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historico_previsao
     */
    select?: historico_previsaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historico_previsao
     */
    omit?: historico_previsaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historico_previsaoInclude<ExtArgs> | null
    /**
     * Filter, which historico_previsao to fetch.
     */
    where: historico_previsaoWhereUniqueInput
  }

  /**
   * historico_previsao findUniqueOrThrow
   */
  export type historico_previsaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historico_previsao
     */
    select?: historico_previsaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historico_previsao
     */
    omit?: historico_previsaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historico_previsaoInclude<ExtArgs> | null
    /**
     * Filter, which historico_previsao to fetch.
     */
    where: historico_previsaoWhereUniqueInput
  }

  /**
   * historico_previsao findFirst
   */
  export type historico_previsaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historico_previsao
     */
    select?: historico_previsaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historico_previsao
     */
    omit?: historico_previsaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historico_previsaoInclude<ExtArgs> | null
    /**
     * Filter, which historico_previsao to fetch.
     */
    where?: historico_previsaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historico_previsaos to fetch.
     */
    orderBy?: historico_previsaoOrderByWithRelationInput | historico_previsaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for historico_previsaos.
     */
    cursor?: historico_previsaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historico_previsaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historico_previsaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of historico_previsaos.
     */
    distinct?: Historico_previsaoScalarFieldEnum | Historico_previsaoScalarFieldEnum[]
  }

  /**
   * historico_previsao findFirstOrThrow
   */
  export type historico_previsaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historico_previsao
     */
    select?: historico_previsaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historico_previsao
     */
    omit?: historico_previsaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historico_previsaoInclude<ExtArgs> | null
    /**
     * Filter, which historico_previsao to fetch.
     */
    where?: historico_previsaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historico_previsaos to fetch.
     */
    orderBy?: historico_previsaoOrderByWithRelationInput | historico_previsaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for historico_previsaos.
     */
    cursor?: historico_previsaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historico_previsaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historico_previsaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of historico_previsaos.
     */
    distinct?: Historico_previsaoScalarFieldEnum | Historico_previsaoScalarFieldEnum[]
  }

  /**
   * historico_previsao findMany
   */
  export type historico_previsaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historico_previsao
     */
    select?: historico_previsaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historico_previsao
     */
    omit?: historico_previsaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historico_previsaoInclude<ExtArgs> | null
    /**
     * Filter, which historico_previsaos to fetch.
     */
    where?: historico_previsaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historico_previsaos to fetch.
     */
    orderBy?: historico_previsaoOrderByWithRelationInput | historico_previsaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing historico_previsaos.
     */
    cursor?: historico_previsaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historico_previsaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historico_previsaos.
     */
    skip?: number
    distinct?: Historico_previsaoScalarFieldEnum | Historico_previsaoScalarFieldEnum[]
  }

  /**
   * historico_previsao create
   */
  export type historico_previsaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historico_previsao
     */
    select?: historico_previsaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historico_previsao
     */
    omit?: historico_previsaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historico_previsaoInclude<ExtArgs> | null
    /**
     * The data needed to create a historico_previsao.
     */
    data: XOR<historico_previsaoCreateInput, historico_previsaoUncheckedCreateInput>
  }

  /**
   * historico_previsao createMany
   */
  export type historico_previsaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many historico_previsaos.
     */
    data: historico_previsaoCreateManyInput | historico_previsaoCreateManyInput[]
  }

  /**
   * historico_previsao createManyAndReturn
   */
  export type historico_previsaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historico_previsao
     */
    select?: historico_previsaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the historico_previsao
     */
    omit?: historico_previsaoOmit<ExtArgs> | null
    /**
     * The data used to create many historico_previsaos.
     */
    data: historico_previsaoCreateManyInput | historico_previsaoCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historico_previsaoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * historico_previsao update
   */
  export type historico_previsaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historico_previsao
     */
    select?: historico_previsaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historico_previsao
     */
    omit?: historico_previsaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historico_previsaoInclude<ExtArgs> | null
    /**
     * The data needed to update a historico_previsao.
     */
    data: XOR<historico_previsaoUpdateInput, historico_previsaoUncheckedUpdateInput>
    /**
     * Choose, which historico_previsao to update.
     */
    where: historico_previsaoWhereUniqueInput
  }

  /**
   * historico_previsao updateMany
   */
  export type historico_previsaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update historico_previsaos.
     */
    data: XOR<historico_previsaoUpdateManyMutationInput, historico_previsaoUncheckedUpdateManyInput>
    /**
     * Filter which historico_previsaos to update
     */
    where?: historico_previsaoWhereInput
    /**
     * Limit how many historico_previsaos to update.
     */
    limit?: number
  }

  /**
   * historico_previsao updateManyAndReturn
   */
  export type historico_previsaoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historico_previsao
     */
    select?: historico_previsaoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the historico_previsao
     */
    omit?: historico_previsaoOmit<ExtArgs> | null
    /**
     * The data used to update historico_previsaos.
     */
    data: XOR<historico_previsaoUpdateManyMutationInput, historico_previsaoUncheckedUpdateManyInput>
    /**
     * Filter which historico_previsaos to update
     */
    where?: historico_previsaoWhereInput
    /**
     * Limit how many historico_previsaos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historico_previsaoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * historico_previsao upsert
   */
  export type historico_previsaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historico_previsao
     */
    select?: historico_previsaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historico_previsao
     */
    omit?: historico_previsaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historico_previsaoInclude<ExtArgs> | null
    /**
     * The filter to search for the historico_previsao to update in case it exists.
     */
    where: historico_previsaoWhereUniqueInput
    /**
     * In case the historico_previsao found by the `where` argument doesn't exist, create a new historico_previsao with this data.
     */
    create: XOR<historico_previsaoCreateInput, historico_previsaoUncheckedCreateInput>
    /**
     * In case the historico_previsao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<historico_previsaoUpdateInput, historico_previsaoUncheckedUpdateInput>
  }

  /**
   * historico_previsao delete
   */
  export type historico_previsaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historico_previsao
     */
    select?: historico_previsaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historico_previsao
     */
    omit?: historico_previsaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historico_previsaoInclude<ExtArgs> | null
    /**
     * Filter which historico_previsao to delete.
     */
    where: historico_previsaoWhereUniqueInput
  }

  /**
   * historico_previsao deleteMany
   */
  export type historico_previsaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which historico_previsaos to delete
     */
    where?: historico_previsaoWhereInput
    /**
     * Limit how many historico_previsaos to delete.
     */
    limit?: number
  }

  /**
   * historico_previsao.financeiro
   */
  export type historico_previsao$financeiroArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the financeiro
     */
    select?: financeiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the financeiro
     */
    omit?: financeiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: financeiroInclude<ExtArgs> | null
    where?: financeiroWhereInput
  }

  /**
   * historico_previsao without action
   */
  export type historico_previsaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historico_previsao
     */
    select?: historico_previsaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the historico_previsao
     */
    omit?: historico_previsaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historico_previsaoInclude<ExtArgs> | null
  }


  /**
   * Model relatorio
   */

  export type AggregateRelatorio = {
    _count: RelatorioCountAggregateOutputType | null
    _avg: RelatorioAvgAggregateOutputType | null
    _sum: RelatorioSumAggregateOutputType | null
    _min: RelatorioMinAggregateOutputType | null
    _max: RelatorioMaxAggregateOutputType | null
  }

  export type RelatorioAvgAggregateOutputType = {
    id_relatorio: number | null
    id_usuario: number | null
  }

  export type RelatorioSumAggregateOutputType = {
    id_relatorio: number | null
    id_usuario: number | null
  }

  export type RelatorioMinAggregateOutputType = {
    id_relatorio: number | null
    id_usuario: number | null
    tipo_relatorio: string | null
    caminho_arquivo: string | null
    gerado_por: string | null
    gerado_em: Date | null
    status: string | null
  }

  export type RelatorioMaxAggregateOutputType = {
    id_relatorio: number | null
    id_usuario: number | null
    tipo_relatorio: string | null
    caminho_arquivo: string | null
    gerado_por: string | null
    gerado_em: Date | null
    status: string | null
  }

  export type RelatorioCountAggregateOutputType = {
    id_relatorio: number
    id_usuario: number
    tipo_relatorio: number
    caminho_arquivo: number
    gerado_por: number
    gerado_em: number
    status: number
    _all: number
  }


  export type RelatorioAvgAggregateInputType = {
    id_relatorio?: true
    id_usuario?: true
  }

  export type RelatorioSumAggregateInputType = {
    id_relatorio?: true
    id_usuario?: true
  }

  export type RelatorioMinAggregateInputType = {
    id_relatorio?: true
    id_usuario?: true
    tipo_relatorio?: true
    caminho_arquivo?: true
    gerado_por?: true
    gerado_em?: true
    status?: true
  }

  export type RelatorioMaxAggregateInputType = {
    id_relatorio?: true
    id_usuario?: true
    tipo_relatorio?: true
    caminho_arquivo?: true
    gerado_por?: true
    gerado_em?: true
    status?: true
  }

  export type RelatorioCountAggregateInputType = {
    id_relatorio?: true
    id_usuario?: true
    tipo_relatorio?: true
    caminho_arquivo?: true
    gerado_por?: true
    gerado_em?: true
    status?: true
    _all?: true
  }

  export type RelatorioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which relatorio to aggregate.
     */
    where?: relatorioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of relatorios to fetch.
     */
    orderBy?: relatorioOrderByWithRelationInput | relatorioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: relatorioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` relatorios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` relatorios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned relatorios
    **/
    _count?: true | RelatorioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RelatorioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RelatorioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RelatorioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RelatorioMaxAggregateInputType
  }

  export type GetRelatorioAggregateType<T extends RelatorioAggregateArgs> = {
        [P in keyof T & keyof AggregateRelatorio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRelatorio[P]>
      : GetScalarType<T[P], AggregateRelatorio[P]>
  }




  export type relatorioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: relatorioWhereInput
    orderBy?: relatorioOrderByWithAggregationInput | relatorioOrderByWithAggregationInput[]
    by: RelatorioScalarFieldEnum[] | RelatorioScalarFieldEnum
    having?: relatorioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RelatorioCountAggregateInputType | true
    _avg?: RelatorioAvgAggregateInputType
    _sum?: RelatorioSumAggregateInputType
    _min?: RelatorioMinAggregateInputType
    _max?: RelatorioMaxAggregateInputType
  }

  export type RelatorioGroupByOutputType = {
    id_relatorio: number
    id_usuario: number
    tipo_relatorio: string
    caminho_arquivo: string
    gerado_por: string
    gerado_em: Date
    status: string | null
    _count: RelatorioCountAggregateOutputType | null
    _avg: RelatorioAvgAggregateOutputType | null
    _sum: RelatorioSumAggregateOutputType | null
    _min: RelatorioMinAggregateOutputType | null
    _max: RelatorioMaxAggregateOutputType | null
  }

  type GetRelatorioGroupByPayload<T extends relatorioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RelatorioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RelatorioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RelatorioGroupByOutputType[P]>
            : GetScalarType<T[P], RelatorioGroupByOutputType[P]>
        }
      >
    >


  export type relatorioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_relatorio?: boolean
    id_usuario?: boolean
    tipo_relatorio?: boolean
    caminho_arquivo?: boolean
    gerado_por?: boolean
    gerado_em?: boolean
    status?: boolean
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["relatorio"]>

  export type relatorioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_relatorio?: boolean
    id_usuario?: boolean
    tipo_relatorio?: boolean
    caminho_arquivo?: boolean
    gerado_por?: boolean
    gerado_em?: boolean
    status?: boolean
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["relatorio"]>

  export type relatorioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_relatorio?: boolean
    id_usuario?: boolean
    tipo_relatorio?: boolean
    caminho_arquivo?: boolean
    gerado_por?: boolean
    gerado_em?: boolean
    status?: boolean
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["relatorio"]>

  export type relatorioSelectScalar = {
    id_relatorio?: boolean
    id_usuario?: boolean
    tipo_relatorio?: boolean
    caminho_arquivo?: boolean
    gerado_por?: boolean
    gerado_em?: boolean
    status?: boolean
  }

  export type relatorioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_relatorio" | "id_usuario" | "tipo_relatorio" | "caminho_arquivo" | "gerado_por" | "gerado_em" | "status", ExtArgs["result"]["relatorio"]>
  export type relatorioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }
  export type relatorioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }
  export type relatorioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }

  export type $relatorioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "relatorio"
    objects: {
      usuario: Prisma.$usuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_relatorio: number
      id_usuario: number
      tipo_relatorio: string
      caminho_arquivo: string
      gerado_por: string
      gerado_em: Date
      status: string | null
    }, ExtArgs["result"]["relatorio"]>
    composites: {}
  }

  type relatorioGetPayload<S extends boolean | null | undefined | relatorioDefaultArgs> = $Result.GetResult<Prisma.$relatorioPayload, S>

  type relatorioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<relatorioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RelatorioCountAggregateInputType | true
    }

  export interface relatorioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['relatorio'], meta: { name: 'relatorio' } }
    /**
     * Find zero or one Relatorio that matches the filter.
     * @param {relatorioFindUniqueArgs} args - Arguments to find a Relatorio
     * @example
     * // Get one Relatorio
     * const relatorio = await prisma.relatorio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends relatorioFindUniqueArgs>(args: SelectSubset<T, relatorioFindUniqueArgs<ExtArgs>>): Prisma__relatorioClient<$Result.GetResult<Prisma.$relatorioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Relatorio that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {relatorioFindUniqueOrThrowArgs} args - Arguments to find a Relatorio
     * @example
     * // Get one Relatorio
     * const relatorio = await prisma.relatorio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends relatorioFindUniqueOrThrowArgs>(args: SelectSubset<T, relatorioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__relatorioClient<$Result.GetResult<Prisma.$relatorioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Relatorio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {relatorioFindFirstArgs} args - Arguments to find a Relatorio
     * @example
     * // Get one Relatorio
     * const relatorio = await prisma.relatorio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends relatorioFindFirstArgs>(args?: SelectSubset<T, relatorioFindFirstArgs<ExtArgs>>): Prisma__relatorioClient<$Result.GetResult<Prisma.$relatorioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Relatorio that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {relatorioFindFirstOrThrowArgs} args - Arguments to find a Relatorio
     * @example
     * // Get one Relatorio
     * const relatorio = await prisma.relatorio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends relatorioFindFirstOrThrowArgs>(args?: SelectSubset<T, relatorioFindFirstOrThrowArgs<ExtArgs>>): Prisma__relatorioClient<$Result.GetResult<Prisma.$relatorioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Relatorios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {relatorioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Relatorios
     * const relatorios = await prisma.relatorio.findMany()
     * 
     * // Get first 10 Relatorios
     * const relatorios = await prisma.relatorio.findMany({ take: 10 })
     * 
     * // Only select the `id_relatorio`
     * const relatorioWithId_relatorioOnly = await prisma.relatorio.findMany({ select: { id_relatorio: true } })
     * 
     */
    findMany<T extends relatorioFindManyArgs>(args?: SelectSubset<T, relatorioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$relatorioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Relatorio.
     * @param {relatorioCreateArgs} args - Arguments to create a Relatorio.
     * @example
     * // Create one Relatorio
     * const Relatorio = await prisma.relatorio.create({
     *   data: {
     *     // ... data to create a Relatorio
     *   }
     * })
     * 
     */
    create<T extends relatorioCreateArgs>(args: SelectSubset<T, relatorioCreateArgs<ExtArgs>>): Prisma__relatorioClient<$Result.GetResult<Prisma.$relatorioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Relatorios.
     * @param {relatorioCreateManyArgs} args - Arguments to create many Relatorios.
     * @example
     * // Create many Relatorios
     * const relatorio = await prisma.relatorio.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends relatorioCreateManyArgs>(args?: SelectSubset<T, relatorioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Relatorios and returns the data saved in the database.
     * @param {relatorioCreateManyAndReturnArgs} args - Arguments to create many Relatorios.
     * @example
     * // Create many Relatorios
     * const relatorio = await prisma.relatorio.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Relatorios and only return the `id_relatorio`
     * const relatorioWithId_relatorioOnly = await prisma.relatorio.createManyAndReturn({
     *   select: { id_relatorio: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends relatorioCreateManyAndReturnArgs>(args?: SelectSubset<T, relatorioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$relatorioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Relatorio.
     * @param {relatorioDeleteArgs} args - Arguments to delete one Relatorio.
     * @example
     * // Delete one Relatorio
     * const Relatorio = await prisma.relatorio.delete({
     *   where: {
     *     // ... filter to delete one Relatorio
     *   }
     * })
     * 
     */
    delete<T extends relatorioDeleteArgs>(args: SelectSubset<T, relatorioDeleteArgs<ExtArgs>>): Prisma__relatorioClient<$Result.GetResult<Prisma.$relatorioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Relatorio.
     * @param {relatorioUpdateArgs} args - Arguments to update one Relatorio.
     * @example
     * // Update one Relatorio
     * const relatorio = await prisma.relatorio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends relatorioUpdateArgs>(args: SelectSubset<T, relatorioUpdateArgs<ExtArgs>>): Prisma__relatorioClient<$Result.GetResult<Prisma.$relatorioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Relatorios.
     * @param {relatorioDeleteManyArgs} args - Arguments to filter Relatorios to delete.
     * @example
     * // Delete a few Relatorios
     * const { count } = await prisma.relatorio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends relatorioDeleteManyArgs>(args?: SelectSubset<T, relatorioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Relatorios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {relatorioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Relatorios
     * const relatorio = await prisma.relatorio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends relatorioUpdateManyArgs>(args: SelectSubset<T, relatorioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Relatorios and returns the data updated in the database.
     * @param {relatorioUpdateManyAndReturnArgs} args - Arguments to update many Relatorios.
     * @example
     * // Update many Relatorios
     * const relatorio = await prisma.relatorio.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Relatorios and only return the `id_relatorio`
     * const relatorioWithId_relatorioOnly = await prisma.relatorio.updateManyAndReturn({
     *   select: { id_relatorio: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends relatorioUpdateManyAndReturnArgs>(args: SelectSubset<T, relatorioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$relatorioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Relatorio.
     * @param {relatorioUpsertArgs} args - Arguments to update or create a Relatorio.
     * @example
     * // Update or create a Relatorio
     * const relatorio = await prisma.relatorio.upsert({
     *   create: {
     *     // ... data to create a Relatorio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Relatorio we want to update
     *   }
     * })
     */
    upsert<T extends relatorioUpsertArgs>(args: SelectSubset<T, relatorioUpsertArgs<ExtArgs>>): Prisma__relatorioClient<$Result.GetResult<Prisma.$relatorioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Relatorios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {relatorioCountArgs} args - Arguments to filter Relatorios to count.
     * @example
     * // Count the number of Relatorios
     * const count = await prisma.relatorio.count({
     *   where: {
     *     // ... the filter for the Relatorios we want to count
     *   }
     * })
    **/
    count<T extends relatorioCountArgs>(
      args?: Subset<T, relatorioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RelatorioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Relatorio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RelatorioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RelatorioAggregateArgs>(args: Subset<T, RelatorioAggregateArgs>): Prisma.PrismaPromise<GetRelatorioAggregateType<T>>

    /**
     * Group by Relatorio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {relatorioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends relatorioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: relatorioGroupByArgs['orderBy'] }
        : { orderBy?: relatorioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, relatorioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRelatorioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the relatorio model
   */
  readonly fields: relatorioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for relatorio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__relatorioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends usuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuarioDefaultArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the relatorio model
   */
  interface relatorioFieldRefs {
    readonly id_relatorio: FieldRef<"relatorio", 'Int'>
    readonly id_usuario: FieldRef<"relatorio", 'Int'>
    readonly tipo_relatorio: FieldRef<"relatorio", 'String'>
    readonly caminho_arquivo: FieldRef<"relatorio", 'String'>
    readonly gerado_por: FieldRef<"relatorio", 'String'>
    readonly gerado_em: FieldRef<"relatorio", 'DateTime'>
    readonly status: FieldRef<"relatorio", 'String'>
  }
    

  // Custom InputTypes
  /**
   * relatorio findUnique
   */
  export type relatorioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the relatorio
     */
    select?: relatorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the relatorio
     */
    omit?: relatorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: relatorioInclude<ExtArgs> | null
    /**
     * Filter, which relatorio to fetch.
     */
    where: relatorioWhereUniqueInput
  }

  /**
   * relatorio findUniqueOrThrow
   */
  export type relatorioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the relatorio
     */
    select?: relatorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the relatorio
     */
    omit?: relatorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: relatorioInclude<ExtArgs> | null
    /**
     * Filter, which relatorio to fetch.
     */
    where: relatorioWhereUniqueInput
  }

  /**
   * relatorio findFirst
   */
  export type relatorioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the relatorio
     */
    select?: relatorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the relatorio
     */
    omit?: relatorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: relatorioInclude<ExtArgs> | null
    /**
     * Filter, which relatorio to fetch.
     */
    where?: relatorioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of relatorios to fetch.
     */
    orderBy?: relatorioOrderByWithRelationInput | relatorioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for relatorios.
     */
    cursor?: relatorioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` relatorios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` relatorios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of relatorios.
     */
    distinct?: RelatorioScalarFieldEnum | RelatorioScalarFieldEnum[]
  }

  /**
   * relatorio findFirstOrThrow
   */
  export type relatorioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the relatorio
     */
    select?: relatorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the relatorio
     */
    omit?: relatorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: relatorioInclude<ExtArgs> | null
    /**
     * Filter, which relatorio to fetch.
     */
    where?: relatorioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of relatorios to fetch.
     */
    orderBy?: relatorioOrderByWithRelationInput | relatorioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for relatorios.
     */
    cursor?: relatorioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` relatorios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` relatorios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of relatorios.
     */
    distinct?: RelatorioScalarFieldEnum | RelatorioScalarFieldEnum[]
  }

  /**
   * relatorio findMany
   */
  export type relatorioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the relatorio
     */
    select?: relatorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the relatorio
     */
    omit?: relatorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: relatorioInclude<ExtArgs> | null
    /**
     * Filter, which relatorios to fetch.
     */
    where?: relatorioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of relatorios to fetch.
     */
    orderBy?: relatorioOrderByWithRelationInput | relatorioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing relatorios.
     */
    cursor?: relatorioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` relatorios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` relatorios.
     */
    skip?: number
    distinct?: RelatorioScalarFieldEnum | RelatorioScalarFieldEnum[]
  }

  /**
   * relatorio create
   */
  export type relatorioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the relatorio
     */
    select?: relatorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the relatorio
     */
    omit?: relatorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: relatorioInclude<ExtArgs> | null
    /**
     * The data needed to create a relatorio.
     */
    data: XOR<relatorioCreateInput, relatorioUncheckedCreateInput>
  }

  /**
   * relatorio createMany
   */
  export type relatorioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many relatorios.
     */
    data: relatorioCreateManyInput | relatorioCreateManyInput[]
  }

  /**
   * relatorio createManyAndReturn
   */
  export type relatorioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the relatorio
     */
    select?: relatorioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the relatorio
     */
    omit?: relatorioOmit<ExtArgs> | null
    /**
     * The data used to create many relatorios.
     */
    data: relatorioCreateManyInput | relatorioCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: relatorioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * relatorio update
   */
  export type relatorioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the relatorio
     */
    select?: relatorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the relatorio
     */
    omit?: relatorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: relatorioInclude<ExtArgs> | null
    /**
     * The data needed to update a relatorio.
     */
    data: XOR<relatorioUpdateInput, relatorioUncheckedUpdateInput>
    /**
     * Choose, which relatorio to update.
     */
    where: relatorioWhereUniqueInput
  }

  /**
   * relatorio updateMany
   */
  export type relatorioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update relatorios.
     */
    data: XOR<relatorioUpdateManyMutationInput, relatorioUncheckedUpdateManyInput>
    /**
     * Filter which relatorios to update
     */
    where?: relatorioWhereInput
    /**
     * Limit how many relatorios to update.
     */
    limit?: number
  }

  /**
   * relatorio updateManyAndReturn
   */
  export type relatorioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the relatorio
     */
    select?: relatorioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the relatorio
     */
    omit?: relatorioOmit<ExtArgs> | null
    /**
     * The data used to update relatorios.
     */
    data: XOR<relatorioUpdateManyMutationInput, relatorioUncheckedUpdateManyInput>
    /**
     * Filter which relatorios to update
     */
    where?: relatorioWhereInput
    /**
     * Limit how many relatorios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: relatorioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * relatorio upsert
   */
  export type relatorioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the relatorio
     */
    select?: relatorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the relatorio
     */
    omit?: relatorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: relatorioInclude<ExtArgs> | null
    /**
     * The filter to search for the relatorio to update in case it exists.
     */
    where: relatorioWhereUniqueInput
    /**
     * In case the relatorio found by the `where` argument doesn't exist, create a new relatorio with this data.
     */
    create: XOR<relatorioCreateInput, relatorioUncheckedCreateInput>
    /**
     * In case the relatorio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<relatorioUpdateInput, relatorioUncheckedUpdateInput>
  }

  /**
   * relatorio delete
   */
  export type relatorioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the relatorio
     */
    select?: relatorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the relatorio
     */
    omit?: relatorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: relatorioInclude<ExtArgs> | null
    /**
     * Filter which relatorio to delete.
     */
    where: relatorioWhereUniqueInput
  }

  /**
   * relatorio deleteMany
   */
  export type relatorioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which relatorios to delete
     */
    where?: relatorioWhereInput
    /**
     * Limit how many relatorios to delete.
     */
    limit?: number
  }

  /**
   * relatorio without action
   */
  export type relatorioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the relatorio
     */
    select?: relatorioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the relatorio
     */
    omit?: relatorioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: relatorioInclude<ExtArgs> | null
  }


  /**
   * Model garantia
   */

  export type AggregateGarantia = {
    _count: GarantiaCountAggregateOutputType | null
    _avg: GarantiaAvgAggregateOutputType | null
    _sum: GarantiaSumAggregateOutputType | null
    _min: GarantiaMinAggregateOutputType | null
    _max: GarantiaMaxAggregateOutputType | null
  }

  export type GarantiaAvgAggregateOutputType = {
    id_garantia: number | null
    id_produto: number | null
    id_usuario: number | null
  }

  export type GarantiaSumAggregateOutputType = {
    id_garantia: number | null
    id_produto: number | null
    id_usuario: number | null
  }

  export type GarantiaMinAggregateOutputType = {
    id_garantia: number | null
    id_produto: number | null
    id_usuario: number | null
    data_inicio: Date | null
    data_fim: Date | null
    descricao: string | null
    status: string | null
  }

  export type GarantiaMaxAggregateOutputType = {
    id_garantia: number | null
    id_produto: number | null
    id_usuario: number | null
    data_inicio: Date | null
    data_fim: Date | null
    descricao: string | null
    status: string | null
  }

  export type GarantiaCountAggregateOutputType = {
    id_garantia: number
    id_produto: number
    id_usuario: number
    data_inicio: number
    data_fim: number
    descricao: number
    status: number
    _all: number
  }


  export type GarantiaAvgAggregateInputType = {
    id_garantia?: true
    id_produto?: true
    id_usuario?: true
  }

  export type GarantiaSumAggregateInputType = {
    id_garantia?: true
    id_produto?: true
    id_usuario?: true
  }

  export type GarantiaMinAggregateInputType = {
    id_garantia?: true
    id_produto?: true
    id_usuario?: true
    data_inicio?: true
    data_fim?: true
    descricao?: true
    status?: true
  }

  export type GarantiaMaxAggregateInputType = {
    id_garantia?: true
    id_produto?: true
    id_usuario?: true
    data_inicio?: true
    data_fim?: true
    descricao?: true
    status?: true
  }

  export type GarantiaCountAggregateInputType = {
    id_garantia?: true
    id_produto?: true
    id_usuario?: true
    data_inicio?: true
    data_fim?: true
    descricao?: true
    status?: true
    _all?: true
  }

  export type GarantiaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which garantia to aggregate.
     */
    where?: garantiaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of garantias to fetch.
     */
    orderBy?: garantiaOrderByWithRelationInput | garantiaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: garantiaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` garantias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` garantias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned garantias
    **/
    _count?: true | GarantiaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: GarantiaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: GarantiaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: GarantiaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: GarantiaMaxAggregateInputType
  }

  export type GetGarantiaAggregateType<T extends GarantiaAggregateArgs> = {
        [P in keyof T & keyof AggregateGarantia]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGarantia[P]>
      : GetScalarType<T[P], AggregateGarantia[P]>
  }




  export type garantiaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: garantiaWhereInput
    orderBy?: garantiaOrderByWithAggregationInput | garantiaOrderByWithAggregationInput[]
    by: GarantiaScalarFieldEnum[] | GarantiaScalarFieldEnum
    having?: garantiaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: GarantiaCountAggregateInputType | true
    _avg?: GarantiaAvgAggregateInputType
    _sum?: GarantiaSumAggregateInputType
    _min?: GarantiaMinAggregateInputType
    _max?: GarantiaMaxAggregateInputType
  }

  export type GarantiaGroupByOutputType = {
    id_garantia: number
    id_produto: number
    id_usuario: number
    data_inicio: Date
    data_fim: Date
    descricao: string | null
    status: string
    _count: GarantiaCountAggregateOutputType | null
    _avg: GarantiaAvgAggregateOutputType | null
    _sum: GarantiaSumAggregateOutputType | null
    _min: GarantiaMinAggregateOutputType | null
    _max: GarantiaMaxAggregateOutputType | null
  }

  type GetGarantiaGroupByPayload<T extends garantiaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<GarantiaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof GarantiaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], GarantiaGroupByOutputType[P]>
            : GetScalarType<T[P], GarantiaGroupByOutputType[P]>
        }
      >
    >


  export type garantiaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_garantia?: boolean
    id_produto?: boolean
    id_usuario?: boolean
    data_inicio?: boolean
    data_fim?: boolean
    descricao?: boolean
    status?: boolean
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["garantia"]>

  export type garantiaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_garantia?: boolean
    id_produto?: boolean
    id_usuario?: boolean
    data_inicio?: boolean
    data_fim?: boolean
    descricao?: boolean
    status?: boolean
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["garantia"]>

  export type garantiaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_garantia?: boolean
    id_produto?: boolean
    id_usuario?: boolean
    data_inicio?: boolean
    data_fim?: boolean
    descricao?: boolean
    status?: boolean
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["garantia"]>

  export type garantiaSelectScalar = {
    id_garantia?: boolean
    id_produto?: boolean
    id_usuario?: boolean
    data_inicio?: boolean
    data_fim?: boolean
    descricao?: boolean
    status?: boolean
  }

  export type garantiaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_garantia" | "id_produto" | "id_usuario" | "data_inicio" | "data_fim" | "descricao" | "status", ExtArgs["result"]["garantia"]>
  export type garantiaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }
  export type garantiaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }
  export type garantiaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    produto?: boolean | produtoDefaultArgs<ExtArgs>
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }

  export type $garantiaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "garantia"
    objects: {
      produto: Prisma.$produtoPayload<ExtArgs>
      usuario: Prisma.$usuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_garantia: number
      id_produto: number
      id_usuario: number
      data_inicio: Date
      data_fim: Date
      descricao: string | null
      status: string
    }, ExtArgs["result"]["garantia"]>
    composites: {}
  }

  type garantiaGetPayload<S extends boolean | null | undefined | garantiaDefaultArgs> = $Result.GetResult<Prisma.$garantiaPayload, S>

  type garantiaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<garantiaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: GarantiaCountAggregateInputType | true
    }

  export interface garantiaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['garantia'], meta: { name: 'garantia' } }
    /**
     * Find zero or one Garantia that matches the filter.
     * @param {garantiaFindUniqueArgs} args - Arguments to find a Garantia
     * @example
     * // Get one Garantia
     * const garantia = await prisma.garantia.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends garantiaFindUniqueArgs>(args: SelectSubset<T, garantiaFindUniqueArgs<ExtArgs>>): Prisma__garantiaClient<$Result.GetResult<Prisma.$garantiaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Garantia that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {garantiaFindUniqueOrThrowArgs} args - Arguments to find a Garantia
     * @example
     * // Get one Garantia
     * const garantia = await prisma.garantia.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends garantiaFindUniqueOrThrowArgs>(args: SelectSubset<T, garantiaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__garantiaClient<$Result.GetResult<Prisma.$garantiaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Garantia that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {garantiaFindFirstArgs} args - Arguments to find a Garantia
     * @example
     * // Get one Garantia
     * const garantia = await prisma.garantia.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends garantiaFindFirstArgs>(args?: SelectSubset<T, garantiaFindFirstArgs<ExtArgs>>): Prisma__garantiaClient<$Result.GetResult<Prisma.$garantiaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Garantia that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {garantiaFindFirstOrThrowArgs} args - Arguments to find a Garantia
     * @example
     * // Get one Garantia
     * const garantia = await prisma.garantia.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends garantiaFindFirstOrThrowArgs>(args?: SelectSubset<T, garantiaFindFirstOrThrowArgs<ExtArgs>>): Prisma__garantiaClient<$Result.GetResult<Prisma.$garantiaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Garantias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {garantiaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Garantias
     * const garantias = await prisma.garantia.findMany()
     * 
     * // Get first 10 Garantias
     * const garantias = await prisma.garantia.findMany({ take: 10 })
     * 
     * // Only select the `id_garantia`
     * const garantiaWithId_garantiaOnly = await prisma.garantia.findMany({ select: { id_garantia: true } })
     * 
     */
    findMany<T extends garantiaFindManyArgs>(args?: SelectSubset<T, garantiaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$garantiaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Garantia.
     * @param {garantiaCreateArgs} args - Arguments to create a Garantia.
     * @example
     * // Create one Garantia
     * const Garantia = await prisma.garantia.create({
     *   data: {
     *     // ... data to create a Garantia
     *   }
     * })
     * 
     */
    create<T extends garantiaCreateArgs>(args: SelectSubset<T, garantiaCreateArgs<ExtArgs>>): Prisma__garantiaClient<$Result.GetResult<Prisma.$garantiaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Garantias.
     * @param {garantiaCreateManyArgs} args - Arguments to create many Garantias.
     * @example
     * // Create many Garantias
     * const garantia = await prisma.garantia.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends garantiaCreateManyArgs>(args?: SelectSubset<T, garantiaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Garantias and returns the data saved in the database.
     * @param {garantiaCreateManyAndReturnArgs} args - Arguments to create many Garantias.
     * @example
     * // Create many Garantias
     * const garantia = await prisma.garantia.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Garantias and only return the `id_garantia`
     * const garantiaWithId_garantiaOnly = await prisma.garantia.createManyAndReturn({
     *   select: { id_garantia: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends garantiaCreateManyAndReturnArgs>(args?: SelectSubset<T, garantiaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$garantiaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Garantia.
     * @param {garantiaDeleteArgs} args - Arguments to delete one Garantia.
     * @example
     * // Delete one Garantia
     * const Garantia = await prisma.garantia.delete({
     *   where: {
     *     // ... filter to delete one Garantia
     *   }
     * })
     * 
     */
    delete<T extends garantiaDeleteArgs>(args: SelectSubset<T, garantiaDeleteArgs<ExtArgs>>): Prisma__garantiaClient<$Result.GetResult<Prisma.$garantiaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Garantia.
     * @param {garantiaUpdateArgs} args - Arguments to update one Garantia.
     * @example
     * // Update one Garantia
     * const garantia = await prisma.garantia.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends garantiaUpdateArgs>(args: SelectSubset<T, garantiaUpdateArgs<ExtArgs>>): Prisma__garantiaClient<$Result.GetResult<Prisma.$garantiaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Garantias.
     * @param {garantiaDeleteManyArgs} args - Arguments to filter Garantias to delete.
     * @example
     * // Delete a few Garantias
     * const { count } = await prisma.garantia.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends garantiaDeleteManyArgs>(args?: SelectSubset<T, garantiaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Garantias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {garantiaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Garantias
     * const garantia = await prisma.garantia.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends garantiaUpdateManyArgs>(args: SelectSubset<T, garantiaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Garantias and returns the data updated in the database.
     * @param {garantiaUpdateManyAndReturnArgs} args - Arguments to update many Garantias.
     * @example
     * // Update many Garantias
     * const garantia = await prisma.garantia.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Garantias and only return the `id_garantia`
     * const garantiaWithId_garantiaOnly = await prisma.garantia.updateManyAndReturn({
     *   select: { id_garantia: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends garantiaUpdateManyAndReturnArgs>(args: SelectSubset<T, garantiaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$garantiaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Garantia.
     * @param {garantiaUpsertArgs} args - Arguments to update or create a Garantia.
     * @example
     * // Update or create a Garantia
     * const garantia = await prisma.garantia.upsert({
     *   create: {
     *     // ... data to create a Garantia
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Garantia we want to update
     *   }
     * })
     */
    upsert<T extends garantiaUpsertArgs>(args: SelectSubset<T, garantiaUpsertArgs<ExtArgs>>): Prisma__garantiaClient<$Result.GetResult<Prisma.$garantiaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Garantias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {garantiaCountArgs} args - Arguments to filter Garantias to count.
     * @example
     * // Count the number of Garantias
     * const count = await prisma.garantia.count({
     *   where: {
     *     // ... the filter for the Garantias we want to count
     *   }
     * })
    **/
    count<T extends garantiaCountArgs>(
      args?: Subset<T, garantiaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], GarantiaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Garantia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GarantiaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends GarantiaAggregateArgs>(args: Subset<T, GarantiaAggregateArgs>): Prisma.PrismaPromise<GetGarantiaAggregateType<T>>

    /**
     * Group by Garantia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {garantiaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends garantiaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: garantiaGroupByArgs['orderBy'] }
        : { orderBy?: garantiaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, garantiaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGarantiaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the garantia model
   */
  readonly fields: garantiaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for garantia.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__garantiaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    produto<T extends produtoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, produtoDefaultArgs<ExtArgs>>): Prisma__produtoClient<$Result.GetResult<Prisma.$produtoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuario<T extends usuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuarioDefaultArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the garantia model
   */
  interface garantiaFieldRefs {
    readonly id_garantia: FieldRef<"garantia", 'Int'>
    readonly id_produto: FieldRef<"garantia", 'Int'>
    readonly id_usuario: FieldRef<"garantia", 'Int'>
    readonly data_inicio: FieldRef<"garantia", 'DateTime'>
    readonly data_fim: FieldRef<"garantia", 'DateTime'>
    readonly descricao: FieldRef<"garantia", 'String'>
    readonly status: FieldRef<"garantia", 'String'>
  }
    

  // Custom InputTypes
  /**
   * garantia findUnique
   */
  export type garantiaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the garantia
     */
    select?: garantiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the garantia
     */
    omit?: garantiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: garantiaInclude<ExtArgs> | null
    /**
     * Filter, which garantia to fetch.
     */
    where: garantiaWhereUniqueInput
  }

  /**
   * garantia findUniqueOrThrow
   */
  export type garantiaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the garantia
     */
    select?: garantiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the garantia
     */
    omit?: garantiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: garantiaInclude<ExtArgs> | null
    /**
     * Filter, which garantia to fetch.
     */
    where: garantiaWhereUniqueInput
  }

  /**
   * garantia findFirst
   */
  export type garantiaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the garantia
     */
    select?: garantiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the garantia
     */
    omit?: garantiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: garantiaInclude<ExtArgs> | null
    /**
     * Filter, which garantia to fetch.
     */
    where?: garantiaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of garantias to fetch.
     */
    orderBy?: garantiaOrderByWithRelationInput | garantiaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for garantias.
     */
    cursor?: garantiaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` garantias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` garantias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of garantias.
     */
    distinct?: GarantiaScalarFieldEnum | GarantiaScalarFieldEnum[]
  }

  /**
   * garantia findFirstOrThrow
   */
  export type garantiaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the garantia
     */
    select?: garantiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the garantia
     */
    omit?: garantiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: garantiaInclude<ExtArgs> | null
    /**
     * Filter, which garantia to fetch.
     */
    where?: garantiaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of garantias to fetch.
     */
    orderBy?: garantiaOrderByWithRelationInput | garantiaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for garantias.
     */
    cursor?: garantiaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` garantias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` garantias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of garantias.
     */
    distinct?: GarantiaScalarFieldEnum | GarantiaScalarFieldEnum[]
  }

  /**
   * garantia findMany
   */
  export type garantiaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the garantia
     */
    select?: garantiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the garantia
     */
    omit?: garantiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: garantiaInclude<ExtArgs> | null
    /**
     * Filter, which garantias to fetch.
     */
    where?: garantiaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of garantias to fetch.
     */
    orderBy?: garantiaOrderByWithRelationInput | garantiaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing garantias.
     */
    cursor?: garantiaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` garantias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` garantias.
     */
    skip?: number
    distinct?: GarantiaScalarFieldEnum | GarantiaScalarFieldEnum[]
  }

  /**
   * garantia create
   */
  export type garantiaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the garantia
     */
    select?: garantiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the garantia
     */
    omit?: garantiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: garantiaInclude<ExtArgs> | null
    /**
     * The data needed to create a garantia.
     */
    data: XOR<garantiaCreateInput, garantiaUncheckedCreateInput>
  }

  /**
   * garantia createMany
   */
  export type garantiaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many garantias.
     */
    data: garantiaCreateManyInput | garantiaCreateManyInput[]
  }

  /**
   * garantia createManyAndReturn
   */
  export type garantiaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the garantia
     */
    select?: garantiaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the garantia
     */
    omit?: garantiaOmit<ExtArgs> | null
    /**
     * The data used to create many garantias.
     */
    data: garantiaCreateManyInput | garantiaCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: garantiaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * garantia update
   */
  export type garantiaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the garantia
     */
    select?: garantiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the garantia
     */
    omit?: garantiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: garantiaInclude<ExtArgs> | null
    /**
     * The data needed to update a garantia.
     */
    data: XOR<garantiaUpdateInput, garantiaUncheckedUpdateInput>
    /**
     * Choose, which garantia to update.
     */
    where: garantiaWhereUniqueInput
  }

  /**
   * garantia updateMany
   */
  export type garantiaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update garantias.
     */
    data: XOR<garantiaUpdateManyMutationInput, garantiaUncheckedUpdateManyInput>
    /**
     * Filter which garantias to update
     */
    where?: garantiaWhereInput
    /**
     * Limit how many garantias to update.
     */
    limit?: number
  }

  /**
   * garantia updateManyAndReturn
   */
  export type garantiaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the garantia
     */
    select?: garantiaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the garantia
     */
    omit?: garantiaOmit<ExtArgs> | null
    /**
     * The data used to update garantias.
     */
    data: XOR<garantiaUpdateManyMutationInput, garantiaUncheckedUpdateManyInput>
    /**
     * Filter which garantias to update
     */
    where?: garantiaWhereInput
    /**
     * Limit how many garantias to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: garantiaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * garantia upsert
   */
  export type garantiaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the garantia
     */
    select?: garantiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the garantia
     */
    omit?: garantiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: garantiaInclude<ExtArgs> | null
    /**
     * The filter to search for the garantia to update in case it exists.
     */
    where: garantiaWhereUniqueInput
    /**
     * In case the garantia found by the `where` argument doesn't exist, create a new garantia with this data.
     */
    create: XOR<garantiaCreateInput, garantiaUncheckedCreateInput>
    /**
     * In case the garantia was found with the provided `where` argument, update it with this data.
     */
    update: XOR<garantiaUpdateInput, garantiaUncheckedUpdateInput>
  }

  /**
   * garantia delete
   */
  export type garantiaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the garantia
     */
    select?: garantiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the garantia
     */
    omit?: garantiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: garantiaInclude<ExtArgs> | null
    /**
     * Filter which garantia to delete.
     */
    where: garantiaWhereUniqueInput
  }

  /**
   * garantia deleteMany
   */
  export type garantiaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which garantias to delete
     */
    where?: garantiaWhereInput
    /**
     * Limit how many garantias to delete.
     */
    limit?: number
  }

  /**
   * garantia without action
   */
  export type garantiaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the garantia
     */
    select?: garantiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the garantia
     */
    omit?: garantiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: garantiaInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UsuarioScalarFieldEnum: {
    id_usuario: 'id_usuario',
    nome: 'nome',
    email: 'email',
    senha_hash: 'senha_hash',
    id_tipo_usuario: 'id_tipo_usuario',
    ativo: 'ativo',
    criado_em: 'criado_em',
    CPF: 'CPF'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const Tipo_usuarioScalarFieldEnum: {
    id_tipo_usuario: 'id_tipo_usuario',
    descricao: 'descricao'
  };

  export type Tipo_usuarioScalarFieldEnum = (typeof Tipo_usuarioScalarFieldEnum)[keyof typeof Tipo_usuarioScalarFieldEnum]


  export const ProdutoScalarFieldEnum: {
    id_produto: 'id_produto',
    nome: 'nome',
    descricao: 'descricao',
    categoria: 'categoria',
    codigo_publico: 'codigo_publico',
    preco_unitario: 'preco_unitario',
    unidade_medida: 'unidade_medida',
    id_fornecedor: 'id_fornecedor'
  };

  export type ProdutoScalarFieldEnum = (typeof ProdutoScalarFieldEnum)[keyof typeof ProdutoScalarFieldEnum]


  export const EstoqueScalarFieldEnum: {
    id_estoque: 'id_estoque',
    id_produto: 'id_produto',
    id_sala: 'id_sala',
    quantidade_atual: 'quantidade_atual',
    quantidade_minima: 'quantidade_minima',
    ultima_atualizacao: 'ultima_atualizacao',
    status: 'status'
  };

  export type EstoqueScalarFieldEnum = (typeof EstoqueScalarFieldEnum)[keyof typeof EstoqueScalarFieldEnum]


  export const FinanceiroScalarFieldEnum: {
    id_financeiro: 'id_financeiro',
    tipo: 'tipo',
    descricao: 'descricao',
    valor: 'valor',
    data_movimento: 'data_movimento',
    status: 'status'
  };

  export type FinanceiroScalarFieldEnum = (typeof FinanceiroScalarFieldEnum)[keyof typeof FinanceiroScalarFieldEnum]


  export const CompraScalarFieldEnum: {
    id_compra: 'id_compra',
    id_produto: 'id_produto',
    id_fornecedor: 'id_fornecedor',
    id_financeiro: 'id_financeiro',
    id_usuario: 'id_usuario',
    data_pedido: 'data_pedido',
    data_recebimento: 'data_recebimento',
    valor_total: 'valor_total',
    origem: 'origem',
    observacoes: 'observacoes'
  };

  export type CompraScalarFieldEnum = (typeof CompraScalarFieldEnum)[keyof typeof CompraScalarFieldEnum]


  export const SalaScalarFieldEnum: {
    id_sala: 'id_sala',
    nome_sala: 'nome_sala',
    descricao: 'descricao',
    capacidade: 'capacidade',
    localizacao: 'localizacao'
  };

  export type SalaScalarFieldEnum = (typeof SalaScalarFieldEnum)[keyof typeof SalaScalarFieldEnum]


  export const MovimentacaoScalarFieldEnum: {
    id_movimentacao: 'id_movimentacao',
    id_produto: 'id_produto',
    id_usuario: 'id_usuario',
    tipo_movimentacao: 'tipo_movimentacao',
    origem: 'origem',
    data_movimento: 'data_movimento',
    status: 'status',
    observacao: 'observacao'
  };

  export type MovimentacaoScalarFieldEnum = (typeof MovimentacaoScalarFieldEnum)[keyof typeof MovimentacaoScalarFieldEnum]


  export const AlertaScalarFieldEnum: {
    id_alerta: 'id_alerta',
    id_produto: 'id_produto',
    tipo_alerta: 'tipo_alerta',
    mensagem: 'mensagem'
  };

  export type AlertaScalarFieldEnum = (typeof AlertaScalarFieldEnum)[keyof typeof AlertaScalarFieldEnum]


  export const Previsao_demandaScalarFieldEnum: {
    id_previsao: 'id_previsao',
    id_produto: 'id_produto',
    data_prevista: 'data_prevista',
    demanda_prevista: 'demanda_prevista',
    id_financeiro: 'id_financeiro',
    confianca_modelo: 'confianca_modelo'
  };

  export type Previsao_demandaScalarFieldEnum = (typeof Previsao_demandaScalarFieldEnum)[keyof typeof Previsao_demandaScalarFieldEnum]


  export const FornecedorScalarFieldEnum: {
    id_fornecedor: 'id_fornecedor',
    nome: 'nome',
    cnpj: 'cnpj',
    telefone: 'telefone',
    email: 'email',
    endereco: 'endereco'
  };

  export type FornecedorScalarFieldEnum = (typeof FornecedorScalarFieldEnum)[keyof typeof FornecedorScalarFieldEnum]


  export const Historico_previsaoScalarFieldEnum: {
    id_historico: 'id_historico',
    id_produto: 'id_produto',
    id_previsao: 'id_previsao',
    id_financeiro: 'id_financeiro',
    demanda_real: 'demanda_real',
    diferenca: 'diferenca',
    precisao_modelo: 'precisao_modelo'
  };

  export type Historico_previsaoScalarFieldEnum = (typeof Historico_previsaoScalarFieldEnum)[keyof typeof Historico_previsaoScalarFieldEnum]


  export const RelatorioScalarFieldEnum: {
    id_relatorio: 'id_relatorio',
    id_usuario: 'id_usuario',
    tipo_relatorio: 'tipo_relatorio',
    caminho_arquivo: 'caminho_arquivo',
    gerado_por: 'gerado_por',
    gerado_em: 'gerado_em',
    status: 'status'
  };

  export type RelatorioScalarFieldEnum = (typeof RelatorioScalarFieldEnum)[keyof typeof RelatorioScalarFieldEnum]


  export const GarantiaScalarFieldEnum: {
    id_garantia: 'id_garantia',
    id_produto: 'id_produto',
    id_usuario: 'id_usuario',
    data_inicio: 'data_inicio',
    data_fim: 'data_fim',
    descricao: 'descricao',
    status: 'status'
  };

  export type GarantiaScalarFieldEnum = (typeof GarantiaScalarFieldEnum)[keyof typeof GarantiaScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type usuarioWhereInput = {
    AND?: usuarioWhereInput | usuarioWhereInput[]
    OR?: usuarioWhereInput[]
    NOT?: usuarioWhereInput | usuarioWhereInput[]
    id_usuario?: IntFilter<"usuario"> | number
    nome?: StringFilter<"usuario"> | string
    email?: StringFilter<"usuario"> | string
    senha_hash?: StringFilter<"usuario"> | string
    id_tipo_usuario?: IntFilter<"usuario"> | number
    ativo?: BoolFilter<"usuario"> | boolean
    criado_em?: DateTimeFilter<"usuario"> | Date | string
    CPF?: StringNullableFilter<"usuario"> | string | null
    tipo_usuario?: XOR<Tipo_usuarioScalarRelationFilter, tipo_usuarioWhereInput>
    compras?: CompraListRelationFilter
    movimentacoes?: MovimentacaoListRelationFilter
    relatorios?: RelatorioListRelationFilter
    garantias?: GarantiaListRelationFilter
  }

  export type usuarioOrderByWithRelationInput = {
    id_usuario?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha_hash?: SortOrder
    id_tipo_usuario?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    CPF?: SortOrderInput | SortOrder
    tipo_usuario?: tipo_usuarioOrderByWithRelationInput
    compras?: compraOrderByRelationAggregateInput
    movimentacoes?: movimentacaoOrderByRelationAggregateInput
    relatorios?: relatorioOrderByRelationAggregateInput
    garantias?: garantiaOrderByRelationAggregateInput
  }

  export type usuarioWhereUniqueInput = Prisma.AtLeast<{
    id_usuario?: number
    email?: string
    AND?: usuarioWhereInput | usuarioWhereInput[]
    OR?: usuarioWhereInput[]
    NOT?: usuarioWhereInput | usuarioWhereInput[]
    nome?: StringFilter<"usuario"> | string
    senha_hash?: StringFilter<"usuario"> | string
    id_tipo_usuario?: IntFilter<"usuario"> | number
    ativo?: BoolFilter<"usuario"> | boolean
    criado_em?: DateTimeFilter<"usuario"> | Date | string
    CPF?: StringNullableFilter<"usuario"> | string | null
    tipo_usuario?: XOR<Tipo_usuarioScalarRelationFilter, tipo_usuarioWhereInput>
    compras?: CompraListRelationFilter
    movimentacoes?: MovimentacaoListRelationFilter
    relatorios?: RelatorioListRelationFilter
    garantias?: GarantiaListRelationFilter
  }, "id_usuario" | "email">

  export type usuarioOrderByWithAggregationInput = {
    id_usuario?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha_hash?: SortOrder
    id_tipo_usuario?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    CPF?: SortOrderInput | SortOrder
    _count?: usuarioCountOrderByAggregateInput
    _avg?: usuarioAvgOrderByAggregateInput
    _max?: usuarioMaxOrderByAggregateInput
    _min?: usuarioMinOrderByAggregateInput
    _sum?: usuarioSumOrderByAggregateInput
  }

  export type usuarioScalarWhereWithAggregatesInput = {
    AND?: usuarioScalarWhereWithAggregatesInput | usuarioScalarWhereWithAggregatesInput[]
    OR?: usuarioScalarWhereWithAggregatesInput[]
    NOT?: usuarioScalarWhereWithAggregatesInput | usuarioScalarWhereWithAggregatesInput[]
    id_usuario?: IntWithAggregatesFilter<"usuario"> | number
    nome?: StringWithAggregatesFilter<"usuario"> | string
    email?: StringWithAggregatesFilter<"usuario"> | string
    senha_hash?: StringWithAggregatesFilter<"usuario"> | string
    id_tipo_usuario?: IntWithAggregatesFilter<"usuario"> | number
    ativo?: BoolWithAggregatesFilter<"usuario"> | boolean
    criado_em?: DateTimeWithAggregatesFilter<"usuario"> | Date | string
    CPF?: StringNullableWithAggregatesFilter<"usuario"> | string | null
  }

  export type tipo_usuarioWhereInput = {
    AND?: tipo_usuarioWhereInput | tipo_usuarioWhereInput[]
    OR?: tipo_usuarioWhereInput[]
    NOT?: tipo_usuarioWhereInput | tipo_usuarioWhereInput[]
    id_tipo_usuario?: IntFilter<"tipo_usuario"> | number
    descricao?: StringFilter<"tipo_usuario"> | string
    usuarios?: UsuarioListRelationFilter
  }

  export type tipo_usuarioOrderByWithRelationInput = {
    id_tipo_usuario?: SortOrder
    descricao?: SortOrder
    usuarios?: usuarioOrderByRelationAggregateInput
  }

  export type tipo_usuarioWhereUniqueInput = Prisma.AtLeast<{
    id_tipo_usuario?: number
    AND?: tipo_usuarioWhereInput | tipo_usuarioWhereInput[]
    OR?: tipo_usuarioWhereInput[]
    NOT?: tipo_usuarioWhereInput | tipo_usuarioWhereInput[]
    descricao?: StringFilter<"tipo_usuario"> | string
    usuarios?: UsuarioListRelationFilter
  }, "id_tipo_usuario">

  export type tipo_usuarioOrderByWithAggregationInput = {
    id_tipo_usuario?: SortOrder
    descricao?: SortOrder
    _count?: tipo_usuarioCountOrderByAggregateInput
    _avg?: tipo_usuarioAvgOrderByAggregateInput
    _max?: tipo_usuarioMaxOrderByAggregateInput
    _min?: tipo_usuarioMinOrderByAggregateInput
    _sum?: tipo_usuarioSumOrderByAggregateInput
  }

  export type tipo_usuarioScalarWhereWithAggregatesInput = {
    AND?: tipo_usuarioScalarWhereWithAggregatesInput | tipo_usuarioScalarWhereWithAggregatesInput[]
    OR?: tipo_usuarioScalarWhereWithAggregatesInput[]
    NOT?: tipo_usuarioScalarWhereWithAggregatesInput | tipo_usuarioScalarWhereWithAggregatesInput[]
    id_tipo_usuario?: IntWithAggregatesFilter<"tipo_usuario"> | number
    descricao?: StringWithAggregatesFilter<"tipo_usuario"> | string
  }

  export type produtoWhereInput = {
    AND?: produtoWhereInput | produtoWhereInput[]
    OR?: produtoWhereInput[]
    NOT?: produtoWhereInput | produtoWhereInput[]
    id_produto?: IntFilter<"produto"> | number
    nome?: StringFilter<"produto"> | string
    descricao?: StringNullableFilter<"produto"> | string | null
    categoria?: StringNullableFilter<"produto"> | string | null
    codigo_publico?: StringNullableFilter<"produto"> | string | null
    preco_unitario?: FloatNullableFilter<"produto"> | number | null
    unidade_medida?: StringNullableFilter<"produto"> | string | null
    id_fornecedor?: IntNullableFilter<"produto"> | number | null
    estoque?: EstoqueListRelationFilter
    compras?: CompraListRelationFilter
    alertas?: AlertaListRelationFilter
    previsoes?: Previsao_demandaListRelationFilter
    historicos?: Historico_previsaoListRelationFilter
    movimentacoes?: MovimentacaoListRelationFilter
    garantias?: GarantiaListRelationFilter
    fornecedor?: XOR<FornecedorNullableScalarRelationFilter, fornecedorWhereInput> | null
  }

  export type produtoOrderByWithRelationInput = {
    id_produto?: SortOrder
    nome?: SortOrder
    descricao?: SortOrderInput | SortOrder
    categoria?: SortOrderInput | SortOrder
    codigo_publico?: SortOrderInput | SortOrder
    preco_unitario?: SortOrderInput | SortOrder
    unidade_medida?: SortOrderInput | SortOrder
    id_fornecedor?: SortOrderInput | SortOrder
    estoque?: estoqueOrderByRelationAggregateInput
    compras?: compraOrderByRelationAggregateInput
    alertas?: alertaOrderByRelationAggregateInput
    previsoes?: previsao_demandaOrderByRelationAggregateInput
    historicos?: historico_previsaoOrderByRelationAggregateInput
    movimentacoes?: movimentacaoOrderByRelationAggregateInput
    garantias?: garantiaOrderByRelationAggregateInput
    fornecedor?: fornecedorOrderByWithRelationInput
  }

  export type produtoWhereUniqueInput = Prisma.AtLeast<{
    id_produto?: number
    AND?: produtoWhereInput | produtoWhereInput[]
    OR?: produtoWhereInput[]
    NOT?: produtoWhereInput | produtoWhereInput[]
    nome?: StringFilter<"produto"> | string
    descricao?: StringNullableFilter<"produto"> | string | null
    categoria?: StringNullableFilter<"produto"> | string | null
    codigo_publico?: StringNullableFilter<"produto"> | string | null
    preco_unitario?: FloatNullableFilter<"produto"> | number | null
    unidade_medida?: StringNullableFilter<"produto"> | string | null
    id_fornecedor?: IntNullableFilter<"produto"> | number | null
    estoque?: EstoqueListRelationFilter
    compras?: CompraListRelationFilter
    alertas?: AlertaListRelationFilter
    previsoes?: Previsao_demandaListRelationFilter
    historicos?: Historico_previsaoListRelationFilter
    movimentacoes?: MovimentacaoListRelationFilter
    garantias?: GarantiaListRelationFilter
    fornecedor?: XOR<FornecedorNullableScalarRelationFilter, fornecedorWhereInput> | null
  }, "id_produto">

  export type produtoOrderByWithAggregationInput = {
    id_produto?: SortOrder
    nome?: SortOrder
    descricao?: SortOrderInput | SortOrder
    categoria?: SortOrderInput | SortOrder
    codigo_publico?: SortOrderInput | SortOrder
    preco_unitario?: SortOrderInput | SortOrder
    unidade_medida?: SortOrderInput | SortOrder
    id_fornecedor?: SortOrderInput | SortOrder
    _count?: produtoCountOrderByAggregateInput
    _avg?: produtoAvgOrderByAggregateInput
    _max?: produtoMaxOrderByAggregateInput
    _min?: produtoMinOrderByAggregateInput
    _sum?: produtoSumOrderByAggregateInput
  }

  export type produtoScalarWhereWithAggregatesInput = {
    AND?: produtoScalarWhereWithAggregatesInput | produtoScalarWhereWithAggregatesInput[]
    OR?: produtoScalarWhereWithAggregatesInput[]
    NOT?: produtoScalarWhereWithAggregatesInput | produtoScalarWhereWithAggregatesInput[]
    id_produto?: IntWithAggregatesFilter<"produto"> | number
    nome?: StringWithAggregatesFilter<"produto"> | string
    descricao?: StringNullableWithAggregatesFilter<"produto"> | string | null
    categoria?: StringNullableWithAggregatesFilter<"produto"> | string | null
    codigo_publico?: StringNullableWithAggregatesFilter<"produto"> | string | null
    preco_unitario?: FloatNullableWithAggregatesFilter<"produto"> | number | null
    unidade_medida?: StringNullableWithAggregatesFilter<"produto"> | string | null
    id_fornecedor?: IntNullableWithAggregatesFilter<"produto"> | number | null
  }

  export type estoqueWhereInput = {
    AND?: estoqueWhereInput | estoqueWhereInput[]
    OR?: estoqueWhereInput[]
    NOT?: estoqueWhereInput | estoqueWhereInput[]
    id_estoque?: IntFilter<"estoque"> | number
    id_produto?: IntFilter<"estoque"> | number
    id_sala?: IntFilter<"estoque"> | number
    quantidade_atual?: IntFilter<"estoque"> | number
    quantidade_minima?: IntFilter<"estoque"> | number
    ultima_atualizacao?: DateTimeFilter<"estoque"> | Date | string
    status?: StringNullableFilter<"estoque"> | string | null
    produto?: XOR<ProdutoScalarRelationFilter, produtoWhereInput>
    sala?: XOR<SalaScalarRelationFilter, salaWhereInput>
  }

  export type estoqueOrderByWithRelationInput = {
    id_estoque?: SortOrder
    id_produto?: SortOrder
    id_sala?: SortOrder
    quantidade_atual?: SortOrder
    quantidade_minima?: SortOrder
    ultima_atualizacao?: SortOrder
    status?: SortOrderInput | SortOrder
    produto?: produtoOrderByWithRelationInput
    sala?: salaOrderByWithRelationInput
  }

  export type estoqueWhereUniqueInput = Prisma.AtLeast<{
    id_estoque?: number
    AND?: estoqueWhereInput | estoqueWhereInput[]
    OR?: estoqueWhereInput[]
    NOT?: estoqueWhereInput | estoqueWhereInput[]
    id_produto?: IntFilter<"estoque"> | number
    id_sala?: IntFilter<"estoque"> | number
    quantidade_atual?: IntFilter<"estoque"> | number
    quantidade_minima?: IntFilter<"estoque"> | number
    ultima_atualizacao?: DateTimeFilter<"estoque"> | Date | string
    status?: StringNullableFilter<"estoque"> | string | null
    produto?: XOR<ProdutoScalarRelationFilter, produtoWhereInput>
    sala?: XOR<SalaScalarRelationFilter, salaWhereInput>
  }, "id_estoque">

  export type estoqueOrderByWithAggregationInput = {
    id_estoque?: SortOrder
    id_produto?: SortOrder
    id_sala?: SortOrder
    quantidade_atual?: SortOrder
    quantidade_minima?: SortOrder
    ultima_atualizacao?: SortOrder
    status?: SortOrderInput | SortOrder
    _count?: estoqueCountOrderByAggregateInput
    _avg?: estoqueAvgOrderByAggregateInput
    _max?: estoqueMaxOrderByAggregateInput
    _min?: estoqueMinOrderByAggregateInput
    _sum?: estoqueSumOrderByAggregateInput
  }

  export type estoqueScalarWhereWithAggregatesInput = {
    AND?: estoqueScalarWhereWithAggregatesInput | estoqueScalarWhereWithAggregatesInput[]
    OR?: estoqueScalarWhereWithAggregatesInput[]
    NOT?: estoqueScalarWhereWithAggregatesInput | estoqueScalarWhereWithAggregatesInput[]
    id_estoque?: IntWithAggregatesFilter<"estoque"> | number
    id_produto?: IntWithAggregatesFilter<"estoque"> | number
    id_sala?: IntWithAggregatesFilter<"estoque"> | number
    quantidade_atual?: IntWithAggregatesFilter<"estoque"> | number
    quantidade_minima?: IntWithAggregatesFilter<"estoque"> | number
    ultima_atualizacao?: DateTimeWithAggregatesFilter<"estoque"> | Date | string
    status?: StringNullableWithAggregatesFilter<"estoque"> | string | null
  }

  export type financeiroWhereInput = {
    AND?: financeiroWhereInput | financeiroWhereInput[]
    OR?: financeiroWhereInput[]
    NOT?: financeiroWhereInput | financeiroWhereInput[]
    id_financeiro?: IntFilter<"financeiro"> | number
    tipo?: StringFilter<"financeiro"> | string
    descricao?: StringFilter<"financeiro"> | string
    valor?: FloatFilter<"financeiro"> | number
    data_movimento?: DateTimeFilter<"financeiro"> | Date | string
    status?: StringNullableFilter<"financeiro"> | string | null
    compras?: CompraListRelationFilter
    historicos?: Historico_previsaoListRelationFilter
  }

  export type financeiroOrderByWithRelationInput = {
    id_financeiro?: SortOrder
    tipo?: SortOrder
    descricao?: SortOrder
    valor?: SortOrder
    data_movimento?: SortOrder
    status?: SortOrderInput | SortOrder
    compras?: compraOrderByRelationAggregateInput
    historicos?: historico_previsaoOrderByRelationAggregateInput
  }

  export type financeiroWhereUniqueInput = Prisma.AtLeast<{
    id_financeiro?: number
    AND?: financeiroWhereInput | financeiroWhereInput[]
    OR?: financeiroWhereInput[]
    NOT?: financeiroWhereInput | financeiroWhereInput[]
    tipo?: StringFilter<"financeiro"> | string
    descricao?: StringFilter<"financeiro"> | string
    valor?: FloatFilter<"financeiro"> | number
    data_movimento?: DateTimeFilter<"financeiro"> | Date | string
    status?: StringNullableFilter<"financeiro"> | string | null
    compras?: CompraListRelationFilter
    historicos?: Historico_previsaoListRelationFilter
  }, "id_financeiro">

  export type financeiroOrderByWithAggregationInput = {
    id_financeiro?: SortOrder
    tipo?: SortOrder
    descricao?: SortOrder
    valor?: SortOrder
    data_movimento?: SortOrder
    status?: SortOrderInput | SortOrder
    _count?: financeiroCountOrderByAggregateInput
    _avg?: financeiroAvgOrderByAggregateInput
    _max?: financeiroMaxOrderByAggregateInput
    _min?: financeiroMinOrderByAggregateInput
    _sum?: financeiroSumOrderByAggregateInput
  }

  export type financeiroScalarWhereWithAggregatesInput = {
    AND?: financeiroScalarWhereWithAggregatesInput | financeiroScalarWhereWithAggregatesInput[]
    OR?: financeiroScalarWhereWithAggregatesInput[]
    NOT?: financeiroScalarWhereWithAggregatesInput | financeiroScalarWhereWithAggregatesInput[]
    id_financeiro?: IntWithAggregatesFilter<"financeiro"> | number
    tipo?: StringWithAggregatesFilter<"financeiro"> | string
    descricao?: StringWithAggregatesFilter<"financeiro"> | string
    valor?: FloatWithAggregatesFilter<"financeiro"> | number
    data_movimento?: DateTimeWithAggregatesFilter<"financeiro"> | Date | string
    status?: StringNullableWithAggregatesFilter<"financeiro"> | string | null
  }

  export type compraWhereInput = {
    AND?: compraWhereInput | compraWhereInput[]
    OR?: compraWhereInput[]
    NOT?: compraWhereInput | compraWhereInput[]
    id_compra?: IntFilter<"compra"> | number
    id_produto?: IntFilter<"compra"> | number
    id_fornecedor?: IntFilter<"compra"> | number
    id_financeiro?: IntFilter<"compra"> | number
    id_usuario?: IntFilter<"compra"> | number
    data_pedido?: DateTimeFilter<"compra"> | Date | string
    data_recebimento?: DateTimeNullableFilter<"compra"> | Date | string | null
    valor_total?: FloatFilter<"compra"> | number
    origem?: StringNullableFilter<"compra"> | string | null
    observacoes?: StringNullableFilter<"compra"> | string | null
    produto?: XOR<ProdutoScalarRelationFilter, produtoWhereInput>
    fornecedor?: XOR<FornecedorScalarRelationFilter, fornecedorWhereInput>
    financeiro?: XOR<FinanceiroScalarRelationFilter, financeiroWhereInput>
    usuario?: XOR<UsuarioScalarRelationFilter, usuarioWhereInput>
  }

  export type compraOrderByWithRelationInput = {
    id_compra?: SortOrder
    id_produto?: SortOrder
    id_fornecedor?: SortOrder
    id_financeiro?: SortOrder
    id_usuario?: SortOrder
    data_pedido?: SortOrder
    data_recebimento?: SortOrderInput | SortOrder
    valor_total?: SortOrder
    origem?: SortOrderInput | SortOrder
    observacoes?: SortOrderInput | SortOrder
    produto?: produtoOrderByWithRelationInput
    fornecedor?: fornecedorOrderByWithRelationInput
    financeiro?: financeiroOrderByWithRelationInput
    usuario?: usuarioOrderByWithRelationInput
  }

  export type compraWhereUniqueInput = Prisma.AtLeast<{
    id_compra?: number
    AND?: compraWhereInput | compraWhereInput[]
    OR?: compraWhereInput[]
    NOT?: compraWhereInput | compraWhereInput[]
    id_produto?: IntFilter<"compra"> | number
    id_fornecedor?: IntFilter<"compra"> | number
    id_financeiro?: IntFilter<"compra"> | number
    id_usuario?: IntFilter<"compra"> | number
    data_pedido?: DateTimeFilter<"compra"> | Date | string
    data_recebimento?: DateTimeNullableFilter<"compra"> | Date | string | null
    valor_total?: FloatFilter<"compra"> | number
    origem?: StringNullableFilter<"compra"> | string | null
    observacoes?: StringNullableFilter<"compra"> | string | null
    produto?: XOR<ProdutoScalarRelationFilter, produtoWhereInput>
    fornecedor?: XOR<FornecedorScalarRelationFilter, fornecedorWhereInput>
    financeiro?: XOR<FinanceiroScalarRelationFilter, financeiroWhereInput>
    usuario?: XOR<UsuarioScalarRelationFilter, usuarioWhereInput>
  }, "id_compra">

  export type compraOrderByWithAggregationInput = {
    id_compra?: SortOrder
    id_produto?: SortOrder
    id_fornecedor?: SortOrder
    id_financeiro?: SortOrder
    id_usuario?: SortOrder
    data_pedido?: SortOrder
    data_recebimento?: SortOrderInput | SortOrder
    valor_total?: SortOrder
    origem?: SortOrderInput | SortOrder
    observacoes?: SortOrderInput | SortOrder
    _count?: compraCountOrderByAggregateInput
    _avg?: compraAvgOrderByAggregateInput
    _max?: compraMaxOrderByAggregateInput
    _min?: compraMinOrderByAggregateInput
    _sum?: compraSumOrderByAggregateInput
  }

  export type compraScalarWhereWithAggregatesInput = {
    AND?: compraScalarWhereWithAggregatesInput | compraScalarWhereWithAggregatesInput[]
    OR?: compraScalarWhereWithAggregatesInput[]
    NOT?: compraScalarWhereWithAggregatesInput | compraScalarWhereWithAggregatesInput[]
    id_compra?: IntWithAggregatesFilter<"compra"> | number
    id_produto?: IntWithAggregatesFilter<"compra"> | number
    id_fornecedor?: IntWithAggregatesFilter<"compra"> | number
    id_financeiro?: IntWithAggregatesFilter<"compra"> | number
    id_usuario?: IntWithAggregatesFilter<"compra"> | number
    data_pedido?: DateTimeWithAggregatesFilter<"compra"> | Date | string
    data_recebimento?: DateTimeNullableWithAggregatesFilter<"compra"> | Date | string | null
    valor_total?: FloatWithAggregatesFilter<"compra"> | number
    origem?: StringNullableWithAggregatesFilter<"compra"> | string | null
    observacoes?: StringNullableWithAggregatesFilter<"compra"> | string | null
  }

  export type salaWhereInput = {
    AND?: salaWhereInput | salaWhereInput[]
    OR?: salaWhereInput[]
    NOT?: salaWhereInput | salaWhereInput[]
    id_sala?: IntFilter<"sala"> | number
    nome_sala?: StringFilter<"sala"> | string
    descricao?: StringNullableFilter<"sala"> | string | null
    capacidade?: IntFilter<"sala"> | number
    localizacao?: StringNullableFilter<"sala"> | string | null
    estoques?: EstoqueListRelationFilter
  }

  export type salaOrderByWithRelationInput = {
    id_sala?: SortOrder
    nome_sala?: SortOrder
    descricao?: SortOrderInput | SortOrder
    capacidade?: SortOrder
    localizacao?: SortOrderInput | SortOrder
    estoques?: estoqueOrderByRelationAggregateInput
  }

  export type salaWhereUniqueInput = Prisma.AtLeast<{
    id_sala?: number
    AND?: salaWhereInput | salaWhereInput[]
    OR?: salaWhereInput[]
    NOT?: salaWhereInput | salaWhereInput[]
    nome_sala?: StringFilter<"sala"> | string
    descricao?: StringNullableFilter<"sala"> | string | null
    capacidade?: IntFilter<"sala"> | number
    localizacao?: StringNullableFilter<"sala"> | string | null
    estoques?: EstoqueListRelationFilter
  }, "id_sala">

  export type salaOrderByWithAggregationInput = {
    id_sala?: SortOrder
    nome_sala?: SortOrder
    descricao?: SortOrderInput | SortOrder
    capacidade?: SortOrder
    localizacao?: SortOrderInput | SortOrder
    _count?: salaCountOrderByAggregateInput
    _avg?: salaAvgOrderByAggregateInput
    _max?: salaMaxOrderByAggregateInput
    _min?: salaMinOrderByAggregateInput
    _sum?: salaSumOrderByAggregateInput
  }

  export type salaScalarWhereWithAggregatesInput = {
    AND?: salaScalarWhereWithAggregatesInput | salaScalarWhereWithAggregatesInput[]
    OR?: salaScalarWhereWithAggregatesInput[]
    NOT?: salaScalarWhereWithAggregatesInput | salaScalarWhereWithAggregatesInput[]
    id_sala?: IntWithAggregatesFilter<"sala"> | number
    nome_sala?: StringWithAggregatesFilter<"sala"> | string
    descricao?: StringNullableWithAggregatesFilter<"sala"> | string | null
    capacidade?: IntWithAggregatesFilter<"sala"> | number
    localizacao?: StringNullableWithAggregatesFilter<"sala"> | string | null
  }

  export type movimentacaoWhereInput = {
    AND?: movimentacaoWhereInput | movimentacaoWhereInput[]
    OR?: movimentacaoWhereInput[]
    NOT?: movimentacaoWhereInput | movimentacaoWhereInput[]
    id_movimentacao?: IntFilter<"movimentacao"> | number
    id_produto?: IntFilter<"movimentacao"> | number
    id_usuario?: IntFilter<"movimentacao"> | number
    tipo_movimentacao?: StringFilter<"movimentacao"> | string
    origem?: StringNullableFilter<"movimentacao"> | string | null
    data_movimento?: DateTimeFilter<"movimentacao"> | Date | string
    status?: StringNullableFilter<"movimentacao"> | string | null
    observacao?: StringNullableFilter<"movimentacao"> | string | null
    produto?: XOR<ProdutoScalarRelationFilter, produtoWhereInput>
    usuario?: XOR<UsuarioScalarRelationFilter, usuarioWhereInput>
  }

  export type movimentacaoOrderByWithRelationInput = {
    id_movimentacao?: SortOrder
    id_produto?: SortOrder
    id_usuario?: SortOrder
    tipo_movimentacao?: SortOrder
    origem?: SortOrderInput | SortOrder
    data_movimento?: SortOrder
    status?: SortOrderInput | SortOrder
    observacao?: SortOrderInput | SortOrder
    produto?: produtoOrderByWithRelationInput
    usuario?: usuarioOrderByWithRelationInput
  }

  export type movimentacaoWhereUniqueInput = Prisma.AtLeast<{
    id_movimentacao?: number
    AND?: movimentacaoWhereInput | movimentacaoWhereInput[]
    OR?: movimentacaoWhereInput[]
    NOT?: movimentacaoWhereInput | movimentacaoWhereInput[]
    id_produto?: IntFilter<"movimentacao"> | number
    id_usuario?: IntFilter<"movimentacao"> | number
    tipo_movimentacao?: StringFilter<"movimentacao"> | string
    origem?: StringNullableFilter<"movimentacao"> | string | null
    data_movimento?: DateTimeFilter<"movimentacao"> | Date | string
    status?: StringNullableFilter<"movimentacao"> | string | null
    observacao?: StringNullableFilter<"movimentacao"> | string | null
    produto?: XOR<ProdutoScalarRelationFilter, produtoWhereInput>
    usuario?: XOR<UsuarioScalarRelationFilter, usuarioWhereInput>
  }, "id_movimentacao">

  export type movimentacaoOrderByWithAggregationInput = {
    id_movimentacao?: SortOrder
    id_produto?: SortOrder
    id_usuario?: SortOrder
    tipo_movimentacao?: SortOrder
    origem?: SortOrderInput | SortOrder
    data_movimento?: SortOrder
    status?: SortOrderInput | SortOrder
    observacao?: SortOrderInput | SortOrder
    _count?: movimentacaoCountOrderByAggregateInput
    _avg?: movimentacaoAvgOrderByAggregateInput
    _max?: movimentacaoMaxOrderByAggregateInput
    _min?: movimentacaoMinOrderByAggregateInput
    _sum?: movimentacaoSumOrderByAggregateInput
  }

  export type movimentacaoScalarWhereWithAggregatesInput = {
    AND?: movimentacaoScalarWhereWithAggregatesInput | movimentacaoScalarWhereWithAggregatesInput[]
    OR?: movimentacaoScalarWhereWithAggregatesInput[]
    NOT?: movimentacaoScalarWhereWithAggregatesInput | movimentacaoScalarWhereWithAggregatesInput[]
    id_movimentacao?: IntWithAggregatesFilter<"movimentacao"> | number
    id_produto?: IntWithAggregatesFilter<"movimentacao"> | number
    id_usuario?: IntWithAggregatesFilter<"movimentacao"> | number
    tipo_movimentacao?: StringWithAggregatesFilter<"movimentacao"> | string
    origem?: StringNullableWithAggregatesFilter<"movimentacao"> | string | null
    data_movimento?: DateTimeWithAggregatesFilter<"movimentacao"> | Date | string
    status?: StringNullableWithAggregatesFilter<"movimentacao"> | string | null
    observacao?: StringNullableWithAggregatesFilter<"movimentacao"> | string | null
  }

  export type alertaWhereInput = {
    AND?: alertaWhereInput | alertaWhereInput[]
    OR?: alertaWhereInput[]
    NOT?: alertaWhereInput | alertaWhereInput[]
    id_alerta?: IntFilter<"alerta"> | number
    id_produto?: IntFilter<"alerta"> | number
    tipo_alerta?: StringFilter<"alerta"> | string
    mensagem?: StringFilter<"alerta"> | string
    produto?: XOR<ProdutoScalarRelationFilter, produtoWhereInput>
  }

  export type alertaOrderByWithRelationInput = {
    id_alerta?: SortOrder
    id_produto?: SortOrder
    tipo_alerta?: SortOrder
    mensagem?: SortOrder
    produto?: produtoOrderByWithRelationInput
  }

  export type alertaWhereUniqueInput = Prisma.AtLeast<{
    id_alerta?: number
    AND?: alertaWhereInput | alertaWhereInput[]
    OR?: alertaWhereInput[]
    NOT?: alertaWhereInput | alertaWhereInput[]
    id_produto?: IntFilter<"alerta"> | number
    tipo_alerta?: StringFilter<"alerta"> | string
    mensagem?: StringFilter<"alerta"> | string
    produto?: XOR<ProdutoScalarRelationFilter, produtoWhereInput>
  }, "id_alerta">

  export type alertaOrderByWithAggregationInput = {
    id_alerta?: SortOrder
    id_produto?: SortOrder
    tipo_alerta?: SortOrder
    mensagem?: SortOrder
    _count?: alertaCountOrderByAggregateInput
    _avg?: alertaAvgOrderByAggregateInput
    _max?: alertaMaxOrderByAggregateInput
    _min?: alertaMinOrderByAggregateInput
    _sum?: alertaSumOrderByAggregateInput
  }

  export type alertaScalarWhereWithAggregatesInput = {
    AND?: alertaScalarWhereWithAggregatesInput | alertaScalarWhereWithAggregatesInput[]
    OR?: alertaScalarWhereWithAggregatesInput[]
    NOT?: alertaScalarWhereWithAggregatesInput | alertaScalarWhereWithAggregatesInput[]
    id_alerta?: IntWithAggregatesFilter<"alerta"> | number
    id_produto?: IntWithAggregatesFilter<"alerta"> | number
    tipo_alerta?: StringWithAggregatesFilter<"alerta"> | string
    mensagem?: StringWithAggregatesFilter<"alerta"> | string
  }

  export type previsao_demandaWhereInput = {
    AND?: previsao_demandaWhereInput | previsao_demandaWhereInput[]
    OR?: previsao_demandaWhereInput[]
    NOT?: previsao_demandaWhereInput | previsao_demandaWhereInput[]
    id_previsao?: IntFilter<"previsao_demanda"> | number
    id_produto?: IntFilter<"previsao_demanda"> | number
    data_prevista?: DateTimeFilter<"previsao_demanda"> | Date | string
    demanda_prevista?: IntFilter<"previsao_demanda"> | number
    id_financeiro?: IntNullableFilter<"previsao_demanda"> | number | null
    confianca_modelo?: FloatNullableFilter<"previsao_demanda"> | number | null
    produto?: XOR<ProdutoScalarRelationFilter, produtoWhereInput>
    historicos?: Historico_previsaoListRelationFilter
  }

  export type previsao_demandaOrderByWithRelationInput = {
    id_previsao?: SortOrder
    id_produto?: SortOrder
    data_prevista?: SortOrder
    demanda_prevista?: SortOrder
    id_financeiro?: SortOrderInput | SortOrder
    confianca_modelo?: SortOrderInput | SortOrder
    produto?: produtoOrderByWithRelationInput
    historicos?: historico_previsaoOrderByRelationAggregateInput
  }

  export type previsao_demandaWhereUniqueInput = Prisma.AtLeast<{
    id_previsao?: number
    AND?: previsao_demandaWhereInput | previsao_demandaWhereInput[]
    OR?: previsao_demandaWhereInput[]
    NOT?: previsao_demandaWhereInput | previsao_demandaWhereInput[]
    id_produto?: IntFilter<"previsao_demanda"> | number
    data_prevista?: DateTimeFilter<"previsao_demanda"> | Date | string
    demanda_prevista?: IntFilter<"previsao_demanda"> | number
    id_financeiro?: IntNullableFilter<"previsao_demanda"> | number | null
    confianca_modelo?: FloatNullableFilter<"previsao_demanda"> | number | null
    produto?: XOR<ProdutoScalarRelationFilter, produtoWhereInput>
    historicos?: Historico_previsaoListRelationFilter
  }, "id_previsao">

  export type previsao_demandaOrderByWithAggregationInput = {
    id_previsao?: SortOrder
    id_produto?: SortOrder
    data_prevista?: SortOrder
    demanda_prevista?: SortOrder
    id_financeiro?: SortOrderInput | SortOrder
    confianca_modelo?: SortOrderInput | SortOrder
    _count?: previsao_demandaCountOrderByAggregateInput
    _avg?: previsao_demandaAvgOrderByAggregateInput
    _max?: previsao_demandaMaxOrderByAggregateInput
    _min?: previsao_demandaMinOrderByAggregateInput
    _sum?: previsao_demandaSumOrderByAggregateInput
  }

  export type previsao_demandaScalarWhereWithAggregatesInput = {
    AND?: previsao_demandaScalarWhereWithAggregatesInput | previsao_demandaScalarWhereWithAggregatesInput[]
    OR?: previsao_demandaScalarWhereWithAggregatesInput[]
    NOT?: previsao_demandaScalarWhereWithAggregatesInput | previsao_demandaScalarWhereWithAggregatesInput[]
    id_previsao?: IntWithAggregatesFilter<"previsao_demanda"> | number
    id_produto?: IntWithAggregatesFilter<"previsao_demanda"> | number
    data_prevista?: DateTimeWithAggregatesFilter<"previsao_demanda"> | Date | string
    demanda_prevista?: IntWithAggregatesFilter<"previsao_demanda"> | number
    id_financeiro?: IntNullableWithAggregatesFilter<"previsao_demanda"> | number | null
    confianca_modelo?: FloatNullableWithAggregatesFilter<"previsao_demanda"> | number | null
  }

  export type fornecedorWhereInput = {
    AND?: fornecedorWhereInput | fornecedorWhereInput[]
    OR?: fornecedorWhereInput[]
    NOT?: fornecedorWhereInput | fornecedorWhereInput[]
    id_fornecedor?: IntFilter<"fornecedor"> | number
    nome?: StringFilter<"fornecedor"> | string
    cnpj?: StringFilter<"fornecedor"> | string
    telefone?: StringNullableFilter<"fornecedor"> | string | null
    email?: StringNullableFilter<"fornecedor"> | string | null
    endereco?: StringNullableFilter<"fornecedor"> | string | null
    compras?: CompraListRelationFilter
    produtos?: ProdutoListRelationFilter
  }

  export type fornecedorOrderByWithRelationInput = {
    id_fornecedor?: SortOrder
    nome?: SortOrder
    cnpj?: SortOrder
    telefone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    endereco?: SortOrderInput | SortOrder
    compras?: compraOrderByRelationAggregateInput
    produtos?: produtoOrderByRelationAggregateInput
  }

  export type fornecedorWhereUniqueInput = Prisma.AtLeast<{
    id_fornecedor?: number
    AND?: fornecedorWhereInput | fornecedorWhereInput[]
    OR?: fornecedorWhereInput[]
    NOT?: fornecedorWhereInput | fornecedorWhereInput[]
    nome?: StringFilter<"fornecedor"> | string
    cnpj?: StringFilter<"fornecedor"> | string
    telefone?: StringNullableFilter<"fornecedor"> | string | null
    email?: StringNullableFilter<"fornecedor"> | string | null
    endereco?: StringNullableFilter<"fornecedor"> | string | null
    compras?: CompraListRelationFilter
    produtos?: ProdutoListRelationFilter
  }, "id_fornecedor">

  export type fornecedorOrderByWithAggregationInput = {
    id_fornecedor?: SortOrder
    nome?: SortOrder
    cnpj?: SortOrder
    telefone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    endereco?: SortOrderInput | SortOrder
    _count?: fornecedorCountOrderByAggregateInput
    _avg?: fornecedorAvgOrderByAggregateInput
    _max?: fornecedorMaxOrderByAggregateInput
    _min?: fornecedorMinOrderByAggregateInput
    _sum?: fornecedorSumOrderByAggregateInput
  }

  export type fornecedorScalarWhereWithAggregatesInput = {
    AND?: fornecedorScalarWhereWithAggregatesInput | fornecedorScalarWhereWithAggregatesInput[]
    OR?: fornecedorScalarWhereWithAggregatesInput[]
    NOT?: fornecedorScalarWhereWithAggregatesInput | fornecedorScalarWhereWithAggregatesInput[]
    id_fornecedor?: IntWithAggregatesFilter<"fornecedor"> | number
    nome?: StringWithAggregatesFilter<"fornecedor"> | string
    cnpj?: StringWithAggregatesFilter<"fornecedor"> | string
    telefone?: StringNullableWithAggregatesFilter<"fornecedor"> | string | null
    email?: StringNullableWithAggregatesFilter<"fornecedor"> | string | null
    endereco?: StringNullableWithAggregatesFilter<"fornecedor"> | string | null
  }

  export type historico_previsaoWhereInput = {
    AND?: historico_previsaoWhereInput | historico_previsaoWhereInput[]
    OR?: historico_previsaoWhereInput[]
    NOT?: historico_previsaoWhereInput | historico_previsaoWhereInput[]
    id_historico?: IntFilter<"historico_previsao"> | number
    id_produto?: IntFilter<"historico_previsao"> | number
    id_previsao?: IntFilter<"historico_previsao"> | number
    id_financeiro?: IntNullableFilter<"historico_previsao"> | number | null
    demanda_real?: IntFilter<"historico_previsao"> | number
    diferenca?: IntFilter<"historico_previsao"> | number
    precisao_modelo?: FloatNullableFilter<"historico_previsao"> | number | null
    produto?: XOR<ProdutoScalarRelationFilter, produtoWhereInput>
    previsao?: XOR<Previsao_demandaScalarRelationFilter, previsao_demandaWhereInput>
    financeiro?: XOR<FinanceiroNullableScalarRelationFilter, financeiroWhereInput> | null
  }

  export type historico_previsaoOrderByWithRelationInput = {
    id_historico?: SortOrder
    id_produto?: SortOrder
    id_previsao?: SortOrder
    id_financeiro?: SortOrderInput | SortOrder
    demanda_real?: SortOrder
    diferenca?: SortOrder
    precisao_modelo?: SortOrderInput | SortOrder
    produto?: produtoOrderByWithRelationInput
    previsao?: previsao_demandaOrderByWithRelationInput
    financeiro?: financeiroOrderByWithRelationInput
  }

  export type historico_previsaoWhereUniqueInput = Prisma.AtLeast<{
    id_historico?: number
    AND?: historico_previsaoWhereInput | historico_previsaoWhereInput[]
    OR?: historico_previsaoWhereInput[]
    NOT?: historico_previsaoWhereInput | historico_previsaoWhereInput[]
    id_produto?: IntFilter<"historico_previsao"> | number
    id_previsao?: IntFilter<"historico_previsao"> | number
    id_financeiro?: IntNullableFilter<"historico_previsao"> | number | null
    demanda_real?: IntFilter<"historico_previsao"> | number
    diferenca?: IntFilter<"historico_previsao"> | number
    precisao_modelo?: FloatNullableFilter<"historico_previsao"> | number | null
    produto?: XOR<ProdutoScalarRelationFilter, produtoWhereInput>
    previsao?: XOR<Previsao_demandaScalarRelationFilter, previsao_demandaWhereInput>
    financeiro?: XOR<FinanceiroNullableScalarRelationFilter, financeiroWhereInput> | null
  }, "id_historico">

  export type historico_previsaoOrderByWithAggregationInput = {
    id_historico?: SortOrder
    id_produto?: SortOrder
    id_previsao?: SortOrder
    id_financeiro?: SortOrderInput | SortOrder
    demanda_real?: SortOrder
    diferenca?: SortOrder
    precisao_modelo?: SortOrderInput | SortOrder
    _count?: historico_previsaoCountOrderByAggregateInput
    _avg?: historico_previsaoAvgOrderByAggregateInput
    _max?: historico_previsaoMaxOrderByAggregateInput
    _min?: historico_previsaoMinOrderByAggregateInput
    _sum?: historico_previsaoSumOrderByAggregateInput
  }

  export type historico_previsaoScalarWhereWithAggregatesInput = {
    AND?: historico_previsaoScalarWhereWithAggregatesInput | historico_previsaoScalarWhereWithAggregatesInput[]
    OR?: historico_previsaoScalarWhereWithAggregatesInput[]
    NOT?: historico_previsaoScalarWhereWithAggregatesInput | historico_previsaoScalarWhereWithAggregatesInput[]
    id_historico?: IntWithAggregatesFilter<"historico_previsao"> | number
    id_produto?: IntWithAggregatesFilter<"historico_previsao"> | number
    id_previsao?: IntWithAggregatesFilter<"historico_previsao"> | number
    id_financeiro?: IntNullableWithAggregatesFilter<"historico_previsao"> | number | null
    demanda_real?: IntWithAggregatesFilter<"historico_previsao"> | number
    diferenca?: IntWithAggregatesFilter<"historico_previsao"> | number
    precisao_modelo?: FloatNullableWithAggregatesFilter<"historico_previsao"> | number | null
  }

  export type relatorioWhereInput = {
    AND?: relatorioWhereInput | relatorioWhereInput[]
    OR?: relatorioWhereInput[]
    NOT?: relatorioWhereInput | relatorioWhereInput[]
    id_relatorio?: IntFilter<"relatorio"> | number
    id_usuario?: IntFilter<"relatorio"> | number
    tipo_relatorio?: StringFilter<"relatorio"> | string
    caminho_arquivo?: StringFilter<"relatorio"> | string
    gerado_por?: StringFilter<"relatorio"> | string
    gerado_em?: DateTimeFilter<"relatorio"> | Date | string
    status?: StringNullableFilter<"relatorio"> | string | null
    usuario?: XOR<UsuarioScalarRelationFilter, usuarioWhereInput>
  }

  export type relatorioOrderByWithRelationInput = {
    id_relatorio?: SortOrder
    id_usuario?: SortOrder
    tipo_relatorio?: SortOrder
    caminho_arquivo?: SortOrder
    gerado_por?: SortOrder
    gerado_em?: SortOrder
    status?: SortOrderInput | SortOrder
    usuario?: usuarioOrderByWithRelationInput
  }

  export type relatorioWhereUniqueInput = Prisma.AtLeast<{
    id_relatorio?: number
    AND?: relatorioWhereInput | relatorioWhereInput[]
    OR?: relatorioWhereInput[]
    NOT?: relatorioWhereInput | relatorioWhereInput[]
    id_usuario?: IntFilter<"relatorio"> | number
    tipo_relatorio?: StringFilter<"relatorio"> | string
    caminho_arquivo?: StringFilter<"relatorio"> | string
    gerado_por?: StringFilter<"relatorio"> | string
    gerado_em?: DateTimeFilter<"relatorio"> | Date | string
    status?: StringNullableFilter<"relatorio"> | string | null
    usuario?: XOR<UsuarioScalarRelationFilter, usuarioWhereInput>
  }, "id_relatorio">

  export type relatorioOrderByWithAggregationInput = {
    id_relatorio?: SortOrder
    id_usuario?: SortOrder
    tipo_relatorio?: SortOrder
    caminho_arquivo?: SortOrder
    gerado_por?: SortOrder
    gerado_em?: SortOrder
    status?: SortOrderInput | SortOrder
    _count?: relatorioCountOrderByAggregateInput
    _avg?: relatorioAvgOrderByAggregateInput
    _max?: relatorioMaxOrderByAggregateInput
    _min?: relatorioMinOrderByAggregateInput
    _sum?: relatorioSumOrderByAggregateInput
  }

  export type relatorioScalarWhereWithAggregatesInput = {
    AND?: relatorioScalarWhereWithAggregatesInput | relatorioScalarWhereWithAggregatesInput[]
    OR?: relatorioScalarWhereWithAggregatesInput[]
    NOT?: relatorioScalarWhereWithAggregatesInput | relatorioScalarWhereWithAggregatesInput[]
    id_relatorio?: IntWithAggregatesFilter<"relatorio"> | number
    id_usuario?: IntWithAggregatesFilter<"relatorio"> | number
    tipo_relatorio?: StringWithAggregatesFilter<"relatorio"> | string
    caminho_arquivo?: StringWithAggregatesFilter<"relatorio"> | string
    gerado_por?: StringWithAggregatesFilter<"relatorio"> | string
    gerado_em?: DateTimeWithAggregatesFilter<"relatorio"> | Date | string
    status?: StringNullableWithAggregatesFilter<"relatorio"> | string | null
  }

  export type garantiaWhereInput = {
    AND?: garantiaWhereInput | garantiaWhereInput[]
    OR?: garantiaWhereInput[]
    NOT?: garantiaWhereInput | garantiaWhereInput[]
    id_garantia?: IntFilter<"garantia"> | number
    id_produto?: IntFilter<"garantia"> | number
    id_usuario?: IntFilter<"garantia"> | number
    data_inicio?: DateTimeFilter<"garantia"> | Date | string
    data_fim?: DateTimeFilter<"garantia"> | Date | string
    descricao?: StringNullableFilter<"garantia"> | string | null
    status?: StringFilter<"garantia"> | string
    produto?: XOR<ProdutoScalarRelationFilter, produtoWhereInput>
    usuario?: XOR<UsuarioScalarRelationFilter, usuarioWhereInput>
  }

  export type garantiaOrderByWithRelationInput = {
    id_garantia?: SortOrder
    id_produto?: SortOrder
    id_usuario?: SortOrder
    data_inicio?: SortOrder
    data_fim?: SortOrder
    descricao?: SortOrderInput | SortOrder
    status?: SortOrder
    produto?: produtoOrderByWithRelationInput
    usuario?: usuarioOrderByWithRelationInput
  }

  export type garantiaWhereUniqueInput = Prisma.AtLeast<{
    id_garantia?: number
    AND?: garantiaWhereInput | garantiaWhereInput[]
    OR?: garantiaWhereInput[]
    NOT?: garantiaWhereInput | garantiaWhereInput[]
    id_produto?: IntFilter<"garantia"> | number
    id_usuario?: IntFilter<"garantia"> | number
    data_inicio?: DateTimeFilter<"garantia"> | Date | string
    data_fim?: DateTimeFilter<"garantia"> | Date | string
    descricao?: StringNullableFilter<"garantia"> | string | null
    status?: StringFilter<"garantia"> | string
    produto?: XOR<ProdutoScalarRelationFilter, produtoWhereInput>
    usuario?: XOR<UsuarioScalarRelationFilter, usuarioWhereInput>
  }, "id_garantia">

  export type garantiaOrderByWithAggregationInput = {
    id_garantia?: SortOrder
    id_produto?: SortOrder
    id_usuario?: SortOrder
    data_inicio?: SortOrder
    data_fim?: SortOrder
    descricao?: SortOrderInput | SortOrder
    status?: SortOrder
    _count?: garantiaCountOrderByAggregateInput
    _avg?: garantiaAvgOrderByAggregateInput
    _max?: garantiaMaxOrderByAggregateInput
    _min?: garantiaMinOrderByAggregateInput
    _sum?: garantiaSumOrderByAggregateInput
  }

  export type garantiaScalarWhereWithAggregatesInput = {
    AND?: garantiaScalarWhereWithAggregatesInput | garantiaScalarWhereWithAggregatesInput[]
    OR?: garantiaScalarWhereWithAggregatesInput[]
    NOT?: garantiaScalarWhereWithAggregatesInput | garantiaScalarWhereWithAggregatesInput[]
    id_garantia?: IntWithAggregatesFilter<"garantia"> | number
    id_produto?: IntWithAggregatesFilter<"garantia"> | number
    id_usuario?: IntWithAggregatesFilter<"garantia"> | number
    data_inicio?: DateTimeWithAggregatesFilter<"garantia"> | Date | string
    data_fim?: DateTimeWithAggregatesFilter<"garantia"> | Date | string
    descricao?: StringNullableWithAggregatesFilter<"garantia"> | string | null
    status?: StringWithAggregatesFilter<"garantia"> | string
  }

  export type usuarioCreateInput = {
    nome: string
    email: string
    senha_hash: string
    ativo: boolean
    criado_em?: Date | string
    CPF?: string | null
    tipo_usuario: tipo_usuarioCreateNestedOneWithoutUsuariosInput
    compras?: compraCreateNestedManyWithoutUsuarioInput
    movimentacoes?: movimentacaoCreateNestedManyWithoutUsuarioInput
    relatorios?: relatorioCreateNestedManyWithoutUsuarioInput
    garantias?: garantiaCreateNestedManyWithoutUsuarioInput
  }

  export type usuarioUncheckedCreateInput = {
    id_usuario?: number
    nome: string
    email: string
    senha_hash: string
    id_tipo_usuario: number
    ativo: boolean
    criado_em?: Date | string
    CPF?: string | null
    compras?: compraUncheckedCreateNestedManyWithoutUsuarioInput
    movimentacoes?: movimentacaoUncheckedCreateNestedManyWithoutUsuarioInput
    relatorios?: relatorioUncheckedCreateNestedManyWithoutUsuarioInput
    garantias?: garantiaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type usuarioUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    CPF?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_usuario?: tipo_usuarioUpdateOneRequiredWithoutUsuariosNestedInput
    compras?: compraUpdateManyWithoutUsuarioNestedInput
    movimentacoes?: movimentacaoUpdateManyWithoutUsuarioNestedInput
    relatorios?: relatorioUpdateManyWithoutUsuarioNestedInput
    garantias?: garantiaUpdateManyWithoutUsuarioNestedInput
  }

  export type usuarioUncheckedUpdateInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    id_tipo_usuario?: IntFieldUpdateOperationsInput | number
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    CPF?: NullableStringFieldUpdateOperationsInput | string | null
    compras?: compraUncheckedUpdateManyWithoutUsuarioNestedInput
    movimentacoes?: movimentacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    relatorios?: relatorioUncheckedUpdateManyWithoutUsuarioNestedInput
    garantias?: garantiaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type usuarioCreateManyInput = {
    id_usuario?: number
    nome: string
    email: string
    senha_hash: string
    id_tipo_usuario: number
    ativo: boolean
    criado_em?: Date | string
    CPF?: string | null
  }

  export type usuarioUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    CPF?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type usuarioUncheckedUpdateManyInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    id_tipo_usuario?: IntFieldUpdateOperationsInput | number
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    CPF?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tipo_usuarioCreateInput = {
    descricao: string
    usuarios?: usuarioCreateNestedManyWithoutTipo_usuarioInput
  }

  export type tipo_usuarioUncheckedCreateInput = {
    id_tipo_usuario?: number
    descricao: string
    usuarios?: usuarioUncheckedCreateNestedManyWithoutTipo_usuarioInput
  }

  export type tipo_usuarioUpdateInput = {
    descricao?: StringFieldUpdateOperationsInput | string
    usuarios?: usuarioUpdateManyWithoutTipo_usuarioNestedInput
  }

  export type tipo_usuarioUncheckedUpdateInput = {
    id_tipo_usuario?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
    usuarios?: usuarioUncheckedUpdateManyWithoutTipo_usuarioNestedInput
  }

  export type tipo_usuarioCreateManyInput = {
    id_tipo_usuario?: number
    descricao: string
  }

  export type tipo_usuarioUpdateManyMutationInput = {
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type tipo_usuarioUncheckedUpdateManyInput = {
    id_tipo_usuario?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type produtoCreateInput = {
    nome: string
    descricao?: string | null
    categoria?: string | null
    codigo_publico?: string | null
    preco_unitario?: number | null
    unidade_medida?: string | null
    estoque?: estoqueCreateNestedManyWithoutProdutoInput
    compras?: compraCreateNestedManyWithoutProdutoInput
    alertas?: alertaCreateNestedManyWithoutProdutoInput
    previsoes?: previsao_demandaCreateNestedManyWithoutProdutoInput
    historicos?: historico_previsaoCreateNestedManyWithoutProdutoInput
    movimentacoes?: movimentacaoCreateNestedManyWithoutProdutoInput
    garantias?: garantiaCreateNestedManyWithoutProdutoInput
    fornecedor?: fornecedorCreateNestedOneWithoutProdutosInput
  }

  export type produtoUncheckedCreateInput = {
    id_produto?: number
    nome: string
    descricao?: string | null
    categoria?: string | null
    codigo_publico?: string | null
    preco_unitario?: number | null
    unidade_medida?: string | null
    id_fornecedor?: number | null
    estoque?: estoqueUncheckedCreateNestedManyWithoutProdutoInput
    compras?: compraUncheckedCreateNestedManyWithoutProdutoInput
    alertas?: alertaUncheckedCreateNestedManyWithoutProdutoInput
    previsoes?: previsao_demandaUncheckedCreateNestedManyWithoutProdutoInput
    historicos?: historico_previsaoUncheckedCreateNestedManyWithoutProdutoInput
    movimentacoes?: movimentacaoUncheckedCreateNestedManyWithoutProdutoInput
    garantias?: garantiaUncheckedCreateNestedManyWithoutProdutoInput
  }

  export type produtoUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_publico?: NullableStringFieldUpdateOperationsInput | string | null
    preco_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
    unidade_medida?: NullableStringFieldUpdateOperationsInput | string | null
    estoque?: estoqueUpdateManyWithoutProdutoNestedInput
    compras?: compraUpdateManyWithoutProdutoNestedInput
    alertas?: alertaUpdateManyWithoutProdutoNestedInput
    previsoes?: previsao_demandaUpdateManyWithoutProdutoNestedInput
    historicos?: historico_previsaoUpdateManyWithoutProdutoNestedInput
    movimentacoes?: movimentacaoUpdateManyWithoutProdutoNestedInput
    garantias?: garantiaUpdateManyWithoutProdutoNestedInput
    fornecedor?: fornecedorUpdateOneWithoutProdutosNestedInput
  }

  export type produtoUncheckedUpdateInput = {
    id_produto?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_publico?: NullableStringFieldUpdateOperationsInput | string | null
    preco_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
    unidade_medida?: NullableStringFieldUpdateOperationsInput | string | null
    id_fornecedor?: NullableIntFieldUpdateOperationsInput | number | null
    estoque?: estoqueUncheckedUpdateManyWithoutProdutoNestedInput
    compras?: compraUncheckedUpdateManyWithoutProdutoNestedInput
    alertas?: alertaUncheckedUpdateManyWithoutProdutoNestedInput
    previsoes?: previsao_demandaUncheckedUpdateManyWithoutProdutoNestedInput
    historicos?: historico_previsaoUncheckedUpdateManyWithoutProdutoNestedInput
    movimentacoes?: movimentacaoUncheckedUpdateManyWithoutProdutoNestedInput
    garantias?: garantiaUncheckedUpdateManyWithoutProdutoNestedInput
  }

  export type produtoCreateManyInput = {
    id_produto?: number
    nome: string
    descricao?: string | null
    categoria?: string | null
    codigo_publico?: string | null
    preco_unitario?: number | null
    unidade_medida?: string | null
    id_fornecedor?: number | null
  }

  export type produtoUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_publico?: NullableStringFieldUpdateOperationsInput | string | null
    preco_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
    unidade_medida?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type produtoUncheckedUpdateManyInput = {
    id_produto?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_publico?: NullableStringFieldUpdateOperationsInput | string | null
    preco_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
    unidade_medida?: NullableStringFieldUpdateOperationsInput | string | null
    id_fornecedor?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type estoqueCreateInput = {
    quantidade_atual: number
    quantidade_minima: number
    ultima_atualizacao: Date | string
    status?: string | null
    produto: produtoCreateNestedOneWithoutEstoqueInput
    sala: salaCreateNestedOneWithoutEstoquesInput
  }

  export type estoqueUncheckedCreateInput = {
    id_estoque?: number
    id_produto: number
    id_sala: number
    quantidade_atual: number
    quantidade_minima: number
    ultima_atualizacao: Date | string
    status?: string | null
  }

  export type estoqueUpdateInput = {
    quantidade_atual?: IntFieldUpdateOperationsInput | number
    quantidade_minima?: IntFieldUpdateOperationsInput | number
    ultima_atualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    produto?: produtoUpdateOneRequiredWithoutEstoqueNestedInput
    sala?: salaUpdateOneRequiredWithoutEstoquesNestedInput
  }

  export type estoqueUncheckedUpdateInput = {
    id_estoque?: IntFieldUpdateOperationsInput | number
    id_produto?: IntFieldUpdateOperationsInput | number
    id_sala?: IntFieldUpdateOperationsInput | number
    quantidade_atual?: IntFieldUpdateOperationsInput | number
    quantidade_minima?: IntFieldUpdateOperationsInput | number
    ultima_atualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type estoqueCreateManyInput = {
    id_estoque?: number
    id_produto: number
    id_sala: number
    quantidade_atual: number
    quantidade_minima: number
    ultima_atualizacao: Date | string
    status?: string | null
  }

  export type estoqueUpdateManyMutationInput = {
    quantidade_atual?: IntFieldUpdateOperationsInput | number
    quantidade_minima?: IntFieldUpdateOperationsInput | number
    ultima_atualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type estoqueUncheckedUpdateManyInput = {
    id_estoque?: IntFieldUpdateOperationsInput | number
    id_produto?: IntFieldUpdateOperationsInput | number
    id_sala?: IntFieldUpdateOperationsInput | number
    quantidade_atual?: IntFieldUpdateOperationsInput | number
    quantidade_minima?: IntFieldUpdateOperationsInput | number
    ultima_atualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type financeiroCreateInput = {
    tipo: string
    descricao: string
    valor: number
    data_movimento: Date | string
    status?: string | null
    compras?: compraCreateNestedManyWithoutFinanceiroInput
    historicos?: historico_previsaoCreateNestedManyWithoutFinanceiroInput
  }

  export type financeiroUncheckedCreateInput = {
    id_financeiro?: number
    tipo: string
    descricao: string
    valor: number
    data_movimento: Date | string
    status?: string | null
    compras?: compraUncheckedCreateNestedManyWithoutFinanceiroInput
    historicos?: historico_previsaoUncheckedCreateNestedManyWithoutFinanceiroInput
  }

  export type financeiroUpdateInput = {
    tipo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    data_movimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    compras?: compraUpdateManyWithoutFinanceiroNestedInput
    historicos?: historico_previsaoUpdateManyWithoutFinanceiroNestedInput
  }

  export type financeiroUncheckedUpdateInput = {
    id_financeiro?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    data_movimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    compras?: compraUncheckedUpdateManyWithoutFinanceiroNestedInput
    historicos?: historico_previsaoUncheckedUpdateManyWithoutFinanceiroNestedInput
  }

  export type financeiroCreateManyInput = {
    id_financeiro?: number
    tipo: string
    descricao: string
    valor: number
    data_movimento: Date | string
    status?: string | null
  }

  export type financeiroUpdateManyMutationInput = {
    tipo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    data_movimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type financeiroUncheckedUpdateManyInput = {
    id_financeiro?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    data_movimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type compraCreateInput = {
    data_pedido: Date | string
    data_recebimento?: Date | string | null
    valor_total: number
    origem?: string | null
    observacoes?: string | null
    produto: produtoCreateNestedOneWithoutComprasInput
    fornecedor: fornecedorCreateNestedOneWithoutComprasInput
    financeiro: financeiroCreateNestedOneWithoutComprasInput
    usuario: usuarioCreateNestedOneWithoutComprasInput
  }

  export type compraUncheckedCreateInput = {
    id_compra?: number
    id_produto: number
    id_fornecedor: number
    id_financeiro: number
    id_usuario: number
    data_pedido: Date | string
    data_recebimento?: Date | string | null
    valor_total: number
    origem?: string | null
    observacoes?: string | null
  }

  export type compraUpdateInput = {
    data_pedido?: DateTimeFieldUpdateOperationsInput | Date | string
    data_recebimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor_total?: FloatFieldUpdateOperationsInput | number
    origem?: NullableStringFieldUpdateOperationsInput | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    produto?: produtoUpdateOneRequiredWithoutComprasNestedInput
    fornecedor?: fornecedorUpdateOneRequiredWithoutComprasNestedInput
    financeiro?: financeiroUpdateOneRequiredWithoutComprasNestedInput
    usuario?: usuarioUpdateOneRequiredWithoutComprasNestedInput
  }

  export type compraUncheckedUpdateInput = {
    id_compra?: IntFieldUpdateOperationsInput | number
    id_produto?: IntFieldUpdateOperationsInput | number
    id_fornecedor?: IntFieldUpdateOperationsInput | number
    id_financeiro?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    data_pedido?: DateTimeFieldUpdateOperationsInput | Date | string
    data_recebimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor_total?: FloatFieldUpdateOperationsInput | number
    origem?: NullableStringFieldUpdateOperationsInput | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type compraCreateManyInput = {
    id_compra?: number
    id_produto: number
    id_fornecedor: number
    id_financeiro: number
    id_usuario: number
    data_pedido: Date | string
    data_recebimento?: Date | string | null
    valor_total: number
    origem?: string | null
    observacoes?: string | null
  }

  export type compraUpdateManyMutationInput = {
    data_pedido?: DateTimeFieldUpdateOperationsInput | Date | string
    data_recebimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor_total?: FloatFieldUpdateOperationsInput | number
    origem?: NullableStringFieldUpdateOperationsInput | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type compraUncheckedUpdateManyInput = {
    id_compra?: IntFieldUpdateOperationsInput | number
    id_produto?: IntFieldUpdateOperationsInput | number
    id_fornecedor?: IntFieldUpdateOperationsInput | number
    id_financeiro?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    data_pedido?: DateTimeFieldUpdateOperationsInput | Date | string
    data_recebimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor_total?: FloatFieldUpdateOperationsInput | number
    origem?: NullableStringFieldUpdateOperationsInput | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type salaCreateInput = {
    nome_sala: string
    descricao?: string | null
    capacidade: number
    localizacao?: string | null
    estoques?: estoqueCreateNestedManyWithoutSalaInput
  }

  export type salaUncheckedCreateInput = {
    id_sala?: number
    nome_sala: string
    descricao?: string | null
    capacidade: number
    localizacao?: string | null
    estoques?: estoqueUncheckedCreateNestedManyWithoutSalaInput
  }

  export type salaUpdateInput = {
    nome_sala?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    capacidade?: IntFieldUpdateOperationsInput | number
    localizacao?: NullableStringFieldUpdateOperationsInput | string | null
    estoques?: estoqueUpdateManyWithoutSalaNestedInput
  }

  export type salaUncheckedUpdateInput = {
    id_sala?: IntFieldUpdateOperationsInput | number
    nome_sala?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    capacidade?: IntFieldUpdateOperationsInput | number
    localizacao?: NullableStringFieldUpdateOperationsInput | string | null
    estoques?: estoqueUncheckedUpdateManyWithoutSalaNestedInput
  }

  export type salaCreateManyInput = {
    id_sala?: number
    nome_sala: string
    descricao?: string | null
    capacidade: number
    localizacao?: string | null
  }

  export type salaUpdateManyMutationInput = {
    nome_sala?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    capacidade?: IntFieldUpdateOperationsInput | number
    localizacao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type salaUncheckedUpdateManyInput = {
    id_sala?: IntFieldUpdateOperationsInput | number
    nome_sala?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    capacidade?: IntFieldUpdateOperationsInput | number
    localizacao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type movimentacaoCreateInput = {
    tipo_movimentacao: string
    origem?: string | null
    data_movimento: Date | string
    status?: string | null
    observacao?: string | null
    produto: produtoCreateNestedOneWithoutMovimentacoesInput
    usuario: usuarioCreateNestedOneWithoutMovimentacoesInput
  }

  export type movimentacaoUncheckedCreateInput = {
    id_movimentacao?: number
    id_produto: number
    id_usuario: number
    tipo_movimentacao: string
    origem?: string | null
    data_movimento: Date | string
    status?: string | null
    observacao?: string | null
  }

  export type movimentacaoUpdateInput = {
    tipo_movimentacao?: StringFieldUpdateOperationsInput | string
    origem?: NullableStringFieldUpdateOperationsInput | string | null
    data_movimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
    produto?: produtoUpdateOneRequiredWithoutMovimentacoesNestedInput
    usuario?: usuarioUpdateOneRequiredWithoutMovimentacoesNestedInput
  }

  export type movimentacaoUncheckedUpdateInput = {
    id_movimentacao?: IntFieldUpdateOperationsInput | number
    id_produto?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    tipo_movimentacao?: StringFieldUpdateOperationsInput | string
    origem?: NullableStringFieldUpdateOperationsInput | string | null
    data_movimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type movimentacaoCreateManyInput = {
    id_movimentacao?: number
    id_produto: number
    id_usuario: number
    tipo_movimentacao: string
    origem?: string | null
    data_movimento: Date | string
    status?: string | null
    observacao?: string | null
  }

  export type movimentacaoUpdateManyMutationInput = {
    tipo_movimentacao?: StringFieldUpdateOperationsInput | string
    origem?: NullableStringFieldUpdateOperationsInput | string | null
    data_movimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type movimentacaoUncheckedUpdateManyInput = {
    id_movimentacao?: IntFieldUpdateOperationsInput | number
    id_produto?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    tipo_movimentacao?: StringFieldUpdateOperationsInput | string
    origem?: NullableStringFieldUpdateOperationsInput | string | null
    data_movimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type alertaCreateInput = {
    tipo_alerta: string
    mensagem: string
    produto: produtoCreateNestedOneWithoutAlertasInput
  }

  export type alertaUncheckedCreateInput = {
    id_alerta?: number
    id_produto: number
    tipo_alerta: string
    mensagem: string
  }

  export type alertaUpdateInput = {
    tipo_alerta?: StringFieldUpdateOperationsInput | string
    mensagem?: StringFieldUpdateOperationsInput | string
    produto?: produtoUpdateOneRequiredWithoutAlertasNestedInput
  }

  export type alertaUncheckedUpdateInput = {
    id_alerta?: IntFieldUpdateOperationsInput | number
    id_produto?: IntFieldUpdateOperationsInput | number
    tipo_alerta?: StringFieldUpdateOperationsInput | string
    mensagem?: StringFieldUpdateOperationsInput | string
  }

  export type alertaCreateManyInput = {
    id_alerta?: number
    id_produto: number
    tipo_alerta: string
    mensagem: string
  }

  export type alertaUpdateManyMutationInput = {
    tipo_alerta?: StringFieldUpdateOperationsInput | string
    mensagem?: StringFieldUpdateOperationsInput | string
  }

  export type alertaUncheckedUpdateManyInput = {
    id_alerta?: IntFieldUpdateOperationsInput | number
    id_produto?: IntFieldUpdateOperationsInput | number
    tipo_alerta?: StringFieldUpdateOperationsInput | string
    mensagem?: StringFieldUpdateOperationsInput | string
  }

  export type previsao_demandaCreateInput = {
    data_prevista: Date | string
    demanda_prevista: number
    id_financeiro?: number | null
    confianca_modelo?: number | null
    produto: produtoCreateNestedOneWithoutPrevisoesInput
    historicos?: historico_previsaoCreateNestedManyWithoutPrevisaoInput
  }

  export type previsao_demandaUncheckedCreateInput = {
    id_previsao?: number
    id_produto: number
    data_prevista: Date | string
    demanda_prevista: number
    id_financeiro?: number | null
    confianca_modelo?: number | null
    historicos?: historico_previsaoUncheckedCreateNestedManyWithoutPrevisaoInput
  }

  export type previsao_demandaUpdateInput = {
    data_prevista?: DateTimeFieldUpdateOperationsInput | Date | string
    demanda_prevista?: IntFieldUpdateOperationsInput | number
    id_financeiro?: NullableIntFieldUpdateOperationsInput | number | null
    confianca_modelo?: NullableFloatFieldUpdateOperationsInput | number | null
    produto?: produtoUpdateOneRequiredWithoutPrevisoesNestedInput
    historicos?: historico_previsaoUpdateManyWithoutPrevisaoNestedInput
  }

  export type previsao_demandaUncheckedUpdateInput = {
    id_previsao?: IntFieldUpdateOperationsInput | number
    id_produto?: IntFieldUpdateOperationsInput | number
    data_prevista?: DateTimeFieldUpdateOperationsInput | Date | string
    demanda_prevista?: IntFieldUpdateOperationsInput | number
    id_financeiro?: NullableIntFieldUpdateOperationsInput | number | null
    confianca_modelo?: NullableFloatFieldUpdateOperationsInput | number | null
    historicos?: historico_previsaoUncheckedUpdateManyWithoutPrevisaoNestedInput
  }

  export type previsao_demandaCreateManyInput = {
    id_previsao?: number
    id_produto: number
    data_prevista: Date | string
    demanda_prevista: number
    id_financeiro?: number | null
    confianca_modelo?: number | null
  }

  export type previsao_demandaUpdateManyMutationInput = {
    data_prevista?: DateTimeFieldUpdateOperationsInput | Date | string
    demanda_prevista?: IntFieldUpdateOperationsInput | number
    id_financeiro?: NullableIntFieldUpdateOperationsInput | number | null
    confianca_modelo?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type previsao_demandaUncheckedUpdateManyInput = {
    id_previsao?: IntFieldUpdateOperationsInput | number
    id_produto?: IntFieldUpdateOperationsInput | number
    data_prevista?: DateTimeFieldUpdateOperationsInput | Date | string
    demanda_prevista?: IntFieldUpdateOperationsInput | number
    id_financeiro?: NullableIntFieldUpdateOperationsInput | number | null
    confianca_modelo?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type fornecedorCreateInput = {
    nome: string
    cnpj: string
    telefone?: string | null
    email?: string | null
    endereco?: string | null
    compras?: compraCreateNestedManyWithoutFornecedorInput
    produtos?: produtoCreateNestedManyWithoutFornecedorInput
  }

  export type fornecedorUncheckedCreateInput = {
    id_fornecedor?: number
    nome: string
    cnpj: string
    telefone?: string | null
    email?: string | null
    endereco?: string | null
    compras?: compraUncheckedCreateNestedManyWithoutFornecedorInput
    produtos?: produtoUncheckedCreateNestedManyWithoutFornecedorInput
  }

  export type fornecedorUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    compras?: compraUpdateManyWithoutFornecedorNestedInput
    produtos?: produtoUpdateManyWithoutFornecedorNestedInput
  }

  export type fornecedorUncheckedUpdateInput = {
    id_fornecedor?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    compras?: compraUncheckedUpdateManyWithoutFornecedorNestedInput
    produtos?: produtoUncheckedUpdateManyWithoutFornecedorNestedInput
  }

  export type fornecedorCreateManyInput = {
    id_fornecedor?: number
    nome: string
    cnpj: string
    telefone?: string | null
    email?: string | null
    endereco?: string | null
  }

  export type fornecedorUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type fornecedorUncheckedUpdateManyInput = {
    id_fornecedor?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type historico_previsaoCreateInput = {
    demanda_real: number
    diferenca: number
    precisao_modelo?: number | null
    produto: produtoCreateNestedOneWithoutHistoricosInput
    previsao: previsao_demandaCreateNestedOneWithoutHistoricosInput
    financeiro?: financeiroCreateNestedOneWithoutHistoricosInput
  }

  export type historico_previsaoUncheckedCreateInput = {
    id_historico?: number
    id_produto: number
    id_previsao: number
    id_financeiro?: number | null
    demanda_real: number
    diferenca: number
    precisao_modelo?: number | null
  }

  export type historico_previsaoUpdateInput = {
    demanda_real?: IntFieldUpdateOperationsInput | number
    diferenca?: IntFieldUpdateOperationsInput | number
    precisao_modelo?: NullableFloatFieldUpdateOperationsInput | number | null
    produto?: produtoUpdateOneRequiredWithoutHistoricosNestedInput
    previsao?: previsao_demandaUpdateOneRequiredWithoutHistoricosNestedInput
    financeiro?: financeiroUpdateOneWithoutHistoricosNestedInput
  }

  export type historico_previsaoUncheckedUpdateInput = {
    id_historico?: IntFieldUpdateOperationsInput | number
    id_produto?: IntFieldUpdateOperationsInput | number
    id_previsao?: IntFieldUpdateOperationsInput | number
    id_financeiro?: NullableIntFieldUpdateOperationsInput | number | null
    demanda_real?: IntFieldUpdateOperationsInput | number
    diferenca?: IntFieldUpdateOperationsInput | number
    precisao_modelo?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type historico_previsaoCreateManyInput = {
    id_historico?: number
    id_produto: number
    id_previsao: number
    id_financeiro?: number | null
    demanda_real: number
    diferenca: number
    precisao_modelo?: number | null
  }

  export type historico_previsaoUpdateManyMutationInput = {
    demanda_real?: IntFieldUpdateOperationsInput | number
    diferenca?: IntFieldUpdateOperationsInput | number
    precisao_modelo?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type historico_previsaoUncheckedUpdateManyInput = {
    id_historico?: IntFieldUpdateOperationsInput | number
    id_produto?: IntFieldUpdateOperationsInput | number
    id_previsao?: IntFieldUpdateOperationsInput | number
    id_financeiro?: NullableIntFieldUpdateOperationsInput | number | null
    demanda_real?: IntFieldUpdateOperationsInput | number
    diferenca?: IntFieldUpdateOperationsInput | number
    precisao_modelo?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type relatorioCreateInput = {
    tipo_relatorio: string
    caminho_arquivo: string
    gerado_por: string
    gerado_em: Date | string
    status?: string | null
    usuario: usuarioCreateNestedOneWithoutRelatoriosInput
  }

  export type relatorioUncheckedCreateInput = {
    id_relatorio?: number
    id_usuario: number
    tipo_relatorio: string
    caminho_arquivo: string
    gerado_por: string
    gerado_em: Date | string
    status?: string | null
  }

  export type relatorioUpdateInput = {
    tipo_relatorio?: StringFieldUpdateOperationsInput | string
    caminho_arquivo?: StringFieldUpdateOperationsInput | string
    gerado_por?: StringFieldUpdateOperationsInput | string
    gerado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: usuarioUpdateOneRequiredWithoutRelatoriosNestedInput
  }

  export type relatorioUncheckedUpdateInput = {
    id_relatorio?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    tipo_relatorio?: StringFieldUpdateOperationsInput | string
    caminho_arquivo?: StringFieldUpdateOperationsInput | string
    gerado_por?: StringFieldUpdateOperationsInput | string
    gerado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type relatorioCreateManyInput = {
    id_relatorio?: number
    id_usuario: number
    tipo_relatorio: string
    caminho_arquivo: string
    gerado_por: string
    gerado_em: Date | string
    status?: string | null
  }

  export type relatorioUpdateManyMutationInput = {
    tipo_relatorio?: StringFieldUpdateOperationsInput | string
    caminho_arquivo?: StringFieldUpdateOperationsInput | string
    gerado_por?: StringFieldUpdateOperationsInput | string
    gerado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type relatorioUncheckedUpdateManyInput = {
    id_relatorio?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    tipo_relatorio?: StringFieldUpdateOperationsInput | string
    caminho_arquivo?: StringFieldUpdateOperationsInput | string
    gerado_por?: StringFieldUpdateOperationsInput | string
    gerado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type garantiaCreateInput = {
    data_inicio: Date | string
    data_fim: Date | string
    descricao?: string | null
    status?: string
    produto: produtoCreateNestedOneWithoutGarantiasInput
    usuario: usuarioCreateNestedOneWithoutGarantiasInput
  }

  export type garantiaUncheckedCreateInput = {
    id_garantia?: number
    id_produto: number
    id_usuario: number
    data_inicio: Date | string
    data_fim: Date | string
    descricao?: string | null
    status?: string
  }

  export type garantiaUpdateInput = {
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    produto?: produtoUpdateOneRequiredWithoutGarantiasNestedInput
    usuario?: usuarioUpdateOneRequiredWithoutGarantiasNestedInput
  }

  export type garantiaUncheckedUpdateInput = {
    id_garantia?: IntFieldUpdateOperationsInput | number
    id_produto?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
  }

  export type garantiaCreateManyInput = {
    id_garantia?: number
    id_produto: number
    id_usuario: number
    data_inicio: Date | string
    data_fim: Date | string
    descricao?: string | null
    status?: string
  }

  export type garantiaUpdateManyMutationInput = {
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
  }

  export type garantiaUncheckedUpdateManyInput = {
    id_garantia?: IntFieldUpdateOperationsInput | number
    id_produto?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type Tipo_usuarioScalarRelationFilter = {
    is?: tipo_usuarioWhereInput
    isNot?: tipo_usuarioWhereInput
  }

  export type CompraListRelationFilter = {
    every?: compraWhereInput
    some?: compraWhereInput
    none?: compraWhereInput
  }

  export type MovimentacaoListRelationFilter = {
    every?: movimentacaoWhereInput
    some?: movimentacaoWhereInput
    none?: movimentacaoWhereInput
  }

  export type RelatorioListRelationFilter = {
    every?: relatorioWhereInput
    some?: relatorioWhereInput
    none?: relatorioWhereInput
  }

  export type GarantiaListRelationFilter = {
    every?: garantiaWhereInput
    some?: garantiaWhereInput
    none?: garantiaWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type compraOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type movimentacaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type relatorioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type garantiaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usuarioCountOrderByAggregateInput = {
    id_usuario?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha_hash?: SortOrder
    id_tipo_usuario?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    CPF?: SortOrder
  }

  export type usuarioAvgOrderByAggregateInput = {
    id_usuario?: SortOrder
    id_tipo_usuario?: SortOrder
  }

  export type usuarioMaxOrderByAggregateInput = {
    id_usuario?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha_hash?: SortOrder
    id_tipo_usuario?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    CPF?: SortOrder
  }

  export type usuarioMinOrderByAggregateInput = {
    id_usuario?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha_hash?: SortOrder
    id_tipo_usuario?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    CPF?: SortOrder
  }

  export type usuarioSumOrderByAggregateInput = {
    id_usuario?: SortOrder
    id_tipo_usuario?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type UsuarioListRelationFilter = {
    every?: usuarioWhereInput
    some?: usuarioWhereInput
    none?: usuarioWhereInput
  }

  export type usuarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tipo_usuarioCountOrderByAggregateInput = {
    id_tipo_usuario?: SortOrder
    descricao?: SortOrder
  }

  export type tipo_usuarioAvgOrderByAggregateInput = {
    id_tipo_usuario?: SortOrder
  }

  export type tipo_usuarioMaxOrderByAggregateInput = {
    id_tipo_usuario?: SortOrder
    descricao?: SortOrder
  }

  export type tipo_usuarioMinOrderByAggregateInput = {
    id_tipo_usuario?: SortOrder
    descricao?: SortOrder
  }

  export type tipo_usuarioSumOrderByAggregateInput = {
    id_tipo_usuario?: SortOrder
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type EstoqueListRelationFilter = {
    every?: estoqueWhereInput
    some?: estoqueWhereInput
    none?: estoqueWhereInput
  }

  export type AlertaListRelationFilter = {
    every?: alertaWhereInput
    some?: alertaWhereInput
    none?: alertaWhereInput
  }

  export type Previsao_demandaListRelationFilter = {
    every?: previsao_demandaWhereInput
    some?: previsao_demandaWhereInput
    none?: previsao_demandaWhereInput
  }

  export type Historico_previsaoListRelationFilter = {
    every?: historico_previsaoWhereInput
    some?: historico_previsaoWhereInput
    none?: historico_previsaoWhereInput
  }

  export type FornecedorNullableScalarRelationFilter = {
    is?: fornecedorWhereInput | null
    isNot?: fornecedorWhereInput | null
  }

  export type estoqueOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type alertaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type previsao_demandaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type historico_previsaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type produtoCountOrderByAggregateInput = {
    id_produto?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    categoria?: SortOrder
    codigo_publico?: SortOrder
    preco_unitario?: SortOrder
    unidade_medida?: SortOrder
    id_fornecedor?: SortOrder
  }

  export type produtoAvgOrderByAggregateInput = {
    id_produto?: SortOrder
    preco_unitario?: SortOrder
    id_fornecedor?: SortOrder
  }

  export type produtoMaxOrderByAggregateInput = {
    id_produto?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    categoria?: SortOrder
    codigo_publico?: SortOrder
    preco_unitario?: SortOrder
    unidade_medida?: SortOrder
    id_fornecedor?: SortOrder
  }

  export type produtoMinOrderByAggregateInput = {
    id_produto?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    categoria?: SortOrder
    codigo_publico?: SortOrder
    preco_unitario?: SortOrder
    unidade_medida?: SortOrder
    id_fornecedor?: SortOrder
  }

  export type produtoSumOrderByAggregateInput = {
    id_produto?: SortOrder
    preco_unitario?: SortOrder
    id_fornecedor?: SortOrder
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type ProdutoScalarRelationFilter = {
    is?: produtoWhereInput
    isNot?: produtoWhereInput
  }

  export type SalaScalarRelationFilter = {
    is?: salaWhereInput
    isNot?: salaWhereInput
  }

  export type estoqueCountOrderByAggregateInput = {
    id_estoque?: SortOrder
    id_produto?: SortOrder
    id_sala?: SortOrder
    quantidade_atual?: SortOrder
    quantidade_minima?: SortOrder
    ultima_atualizacao?: SortOrder
    status?: SortOrder
  }

  export type estoqueAvgOrderByAggregateInput = {
    id_estoque?: SortOrder
    id_produto?: SortOrder
    id_sala?: SortOrder
    quantidade_atual?: SortOrder
    quantidade_minima?: SortOrder
  }

  export type estoqueMaxOrderByAggregateInput = {
    id_estoque?: SortOrder
    id_produto?: SortOrder
    id_sala?: SortOrder
    quantidade_atual?: SortOrder
    quantidade_minima?: SortOrder
    ultima_atualizacao?: SortOrder
    status?: SortOrder
  }

  export type estoqueMinOrderByAggregateInput = {
    id_estoque?: SortOrder
    id_produto?: SortOrder
    id_sala?: SortOrder
    quantidade_atual?: SortOrder
    quantidade_minima?: SortOrder
    ultima_atualizacao?: SortOrder
    status?: SortOrder
  }

  export type estoqueSumOrderByAggregateInput = {
    id_estoque?: SortOrder
    id_produto?: SortOrder
    id_sala?: SortOrder
    quantidade_atual?: SortOrder
    quantidade_minima?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type financeiroCountOrderByAggregateInput = {
    id_financeiro?: SortOrder
    tipo?: SortOrder
    descricao?: SortOrder
    valor?: SortOrder
    data_movimento?: SortOrder
    status?: SortOrder
  }

  export type financeiroAvgOrderByAggregateInput = {
    id_financeiro?: SortOrder
    valor?: SortOrder
  }

  export type financeiroMaxOrderByAggregateInput = {
    id_financeiro?: SortOrder
    tipo?: SortOrder
    descricao?: SortOrder
    valor?: SortOrder
    data_movimento?: SortOrder
    status?: SortOrder
  }

  export type financeiroMinOrderByAggregateInput = {
    id_financeiro?: SortOrder
    tipo?: SortOrder
    descricao?: SortOrder
    valor?: SortOrder
    data_movimento?: SortOrder
    status?: SortOrder
  }

  export type financeiroSumOrderByAggregateInput = {
    id_financeiro?: SortOrder
    valor?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type FornecedorScalarRelationFilter = {
    is?: fornecedorWhereInput
    isNot?: fornecedorWhereInput
  }

  export type FinanceiroScalarRelationFilter = {
    is?: financeiroWhereInput
    isNot?: financeiroWhereInput
  }

  export type UsuarioScalarRelationFilter = {
    is?: usuarioWhereInput
    isNot?: usuarioWhereInput
  }

  export type compraCountOrderByAggregateInput = {
    id_compra?: SortOrder
    id_produto?: SortOrder
    id_fornecedor?: SortOrder
    id_financeiro?: SortOrder
    id_usuario?: SortOrder
    data_pedido?: SortOrder
    data_recebimento?: SortOrder
    valor_total?: SortOrder
    origem?: SortOrder
    observacoes?: SortOrder
  }

  export type compraAvgOrderByAggregateInput = {
    id_compra?: SortOrder
    id_produto?: SortOrder
    id_fornecedor?: SortOrder
    id_financeiro?: SortOrder
    id_usuario?: SortOrder
    valor_total?: SortOrder
  }

  export type compraMaxOrderByAggregateInput = {
    id_compra?: SortOrder
    id_produto?: SortOrder
    id_fornecedor?: SortOrder
    id_financeiro?: SortOrder
    id_usuario?: SortOrder
    data_pedido?: SortOrder
    data_recebimento?: SortOrder
    valor_total?: SortOrder
    origem?: SortOrder
    observacoes?: SortOrder
  }

  export type compraMinOrderByAggregateInput = {
    id_compra?: SortOrder
    id_produto?: SortOrder
    id_fornecedor?: SortOrder
    id_financeiro?: SortOrder
    id_usuario?: SortOrder
    data_pedido?: SortOrder
    data_recebimento?: SortOrder
    valor_total?: SortOrder
    origem?: SortOrder
    observacoes?: SortOrder
  }

  export type compraSumOrderByAggregateInput = {
    id_compra?: SortOrder
    id_produto?: SortOrder
    id_fornecedor?: SortOrder
    id_financeiro?: SortOrder
    id_usuario?: SortOrder
    valor_total?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type salaCountOrderByAggregateInput = {
    id_sala?: SortOrder
    nome_sala?: SortOrder
    descricao?: SortOrder
    capacidade?: SortOrder
    localizacao?: SortOrder
  }

  export type salaAvgOrderByAggregateInput = {
    id_sala?: SortOrder
    capacidade?: SortOrder
  }

  export type salaMaxOrderByAggregateInput = {
    id_sala?: SortOrder
    nome_sala?: SortOrder
    descricao?: SortOrder
    capacidade?: SortOrder
    localizacao?: SortOrder
  }

  export type salaMinOrderByAggregateInput = {
    id_sala?: SortOrder
    nome_sala?: SortOrder
    descricao?: SortOrder
    capacidade?: SortOrder
    localizacao?: SortOrder
  }

  export type salaSumOrderByAggregateInput = {
    id_sala?: SortOrder
    capacidade?: SortOrder
  }

  export type movimentacaoCountOrderByAggregateInput = {
    id_movimentacao?: SortOrder
    id_produto?: SortOrder
    id_usuario?: SortOrder
    tipo_movimentacao?: SortOrder
    origem?: SortOrder
    data_movimento?: SortOrder
    status?: SortOrder
    observacao?: SortOrder
  }

  export type movimentacaoAvgOrderByAggregateInput = {
    id_movimentacao?: SortOrder
    id_produto?: SortOrder
    id_usuario?: SortOrder
  }

  export type movimentacaoMaxOrderByAggregateInput = {
    id_movimentacao?: SortOrder
    id_produto?: SortOrder
    id_usuario?: SortOrder
    tipo_movimentacao?: SortOrder
    origem?: SortOrder
    data_movimento?: SortOrder
    status?: SortOrder
    observacao?: SortOrder
  }

  export type movimentacaoMinOrderByAggregateInput = {
    id_movimentacao?: SortOrder
    id_produto?: SortOrder
    id_usuario?: SortOrder
    tipo_movimentacao?: SortOrder
    origem?: SortOrder
    data_movimento?: SortOrder
    status?: SortOrder
    observacao?: SortOrder
  }

  export type movimentacaoSumOrderByAggregateInput = {
    id_movimentacao?: SortOrder
    id_produto?: SortOrder
    id_usuario?: SortOrder
  }

  export type alertaCountOrderByAggregateInput = {
    id_alerta?: SortOrder
    id_produto?: SortOrder
    tipo_alerta?: SortOrder
    mensagem?: SortOrder
  }

  export type alertaAvgOrderByAggregateInput = {
    id_alerta?: SortOrder
    id_produto?: SortOrder
  }

  export type alertaMaxOrderByAggregateInput = {
    id_alerta?: SortOrder
    id_produto?: SortOrder
    tipo_alerta?: SortOrder
    mensagem?: SortOrder
  }

  export type alertaMinOrderByAggregateInput = {
    id_alerta?: SortOrder
    id_produto?: SortOrder
    tipo_alerta?: SortOrder
    mensagem?: SortOrder
  }

  export type alertaSumOrderByAggregateInput = {
    id_alerta?: SortOrder
    id_produto?: SortOrder
  }

  export type previsao_demandaCountOrderByAggregateInput = {
    id_previsao?: SortOrder
    id_produto?: SortOrder
    data_prevista?: SortOrder
    demanda_prevista?: SortOrder
    id_financeiro?: SortOrder
    confianca_modelo?: SortOrder
  }

  export type previsao_demandaAvgOrderByAggregateInput = {
    id_previsao?: SortOrder
    id_produto?: SortOrder
    demanda_prevista?: SortOrder
    id_financeiro?: SortOrder
    confianca_modelo?: SortOrder
  }

  export type previsao_demandaMaxOrderByAggregateInput = {
    id_previsao?: SortOrder
    id_produto?: SortOrder
    data_prevista?: SortOrder
    demanda_prevista?: SortOrder
    id_financeiro?: SortOrder
    confianca_modelo?: SortOrder
  }

  export type previsao_demandaMinOrderByAggregateInput = {
    id_previsao?: SortOrder
    id_produto?: SortOrder
    data_prevista?: SortOrder
    demanda_prevista?: SortOrder
    id_financeiro?: SortOrder
    confianca_modelo?: SortOrder
  }

  export type previsao_demandaSumOrderByAggregateInput = {
    id_previsao?: SortOrder
    id_produto?: SortOrder
    demanda_prevista?: SortOrder
    id_financeiro?: SortOrder
    confianca_modelo?: SortOrder
  }

  export type ProdutoListRelationFilter = {
    every?: produtoWhereInput
    some?: produtoWhereInput
    none?: produtoWhereInput
  }

  export type produtoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type fornecedorCountOrderByAggregateInput = {
    id_fornecedor?: SortOrder
    nome?: SortOrder
    cnpj?: SortOrder
    telefone?: SortOrder
    email?: SortOrder
    endereco?: SortOrder
  }

  export type fornecedorAvgOrderByAggregateInput = {
    id_fornecedor?: SortOrder
  }

  export type fornecedorMaxOrderByAggregateInput = {
    id_fornecedor?: SortOrder
    nome?: SortOrder
    cnpj?: SortOrder
    telefone?: SortOrder
    email?: SortOrder
    endereco?: SortOrder
  }

  export type fornecedorMinOrderByAggregateInput = {
    id_fornecedor?: SortOrder
    nome?: SortOrder
    cnpj?: SortOrder
    telefone?: SortOrder
    email?: SortOrder
    endereco?: SortOrder
  }

  export type fornecedorSumOrderByAggregateInput = {
    id_fornecedor?: SortOrder
  }

  export type Previsao_demandaScalarRelationFilter = {
    is?: previsao_demandaWhereInput
    isNot?: previsao_demandaWhereInput
  }

  export type FinanceiroNullableScalarRelationFilter = {
    is?: financeiroWhereInput | null
    isNot?: financeiroWhereInput | null
  }

  export type historico_previsaoCountOrderByAggregateInput = {
    id_historico?: SortOrder
    id_produto?: SortOrder
    id_previsao?: SortOrder
    id_financeiro?: SortOrder
    demanda_real?: SortOrder
    diferenca?: SortOrder
    precisao_modelo?: SortOrder
  }

  export type historico_previsaoAvgOrderByAggregateInput = {
    id_historico?: SortOrder
    id_produto?: SortOrder
    id_previsao?: SortOrder
    id_financeiro?: SortOrder
    demanda_real?: SortOrder
    diferenca?: SortOrder
    precisao_modelo?: SortOrder
  }

  export type historico_previsaoMaxOrderByAggregateInput = {
    id_historico?: SortOrder
    id_produto?: SortOrder
    id_previsao?: SortOrder
    id_financeiro?: SortOrder
    demanda_real?: SortOrder
    diferenca?: SortOrder
    precisao_modelo?: SortOrder
  }

  export type historico_previsaoMinOrderByAggregateInput = {
    id_historico?: SortOrder
    id_produto?: SortOrder
    id_previsao?: SortOrder
    id_financeiro?: SortOrder
    demanda_real?: SortOrder
    diferenca?: SortOrder
    precisao_modelo?: SortOrder
  }

  export type historico_previsaoSumOrderByAggregateInput = {
    id_historico?: SortOrder
    id_produto?: SortOrder
    id_previsao?: SortOrder
    id_financeiro?: SortOrder
    demanda_real?: SortOrder
    diferenca?: SortOrder
    precisao_modelo?: SortOrder
  }

  export type relatorioCountOrderByAggregateInput = {
    id_relatorio?: SortOrder
    id_usuario?: SortOrder
    tipo_relatorio?: SortOrder
    caminho_arquivo?: SortOrder
    gerado_por?: SortOrder
    gerado_em?: SortOrder
    status?: SortOrder
  }

  export type relatorioAvgOrderByAggregateInput = {
    id_relatorio?: SortOrder
    id_usuario?: SortOrder
  }

  export type relatorioMaxOrderByAggregateInput = {
    id_relatorio?: SortOrder
    id_usuario?: SortOrder
    tipo_relatorio?: SortOrder
    caminho_arquivo?: SortOrder
    gerado_por?: SortOrder
    gerado_em?: SortOrder
    status?: SortOrder
  }

  export type relatorioMinOrderByAggregateInput = {
    id_relatorio?: SortOrder
    id_usuario?: SortOrder
    tipo_relatorio?: SortOrder
    caminho_arquivo?: SortOrder
    gerado_por?: SortOrder
    gerado_em?: SortOrder
    status?: SortOrder
  }

  export type relatorioSumOrderByAggregateInput = {
    id_relatorio?: SortOrder
    id_usuario?: SortOrder
  }

  export type garantiaCountOrderByAggregateInput = {
    id_garantia?: SortOrder
    id_produto?: SortOrder
    id_usuario?: SortOrder
    data_inicio?: SortOrder
    data_fim?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
  }

  export type garantiaAvgOrderByAggregateInput = {
    id_garantia?: SortOrder
    id_produto?: SortOrder
    id_usuario?: SortOrder
  }

  export type garantiaMaxOrderByAggregateInput = {
    id_garantia?: SortOrder
    id_produto?: SortOrder
    id_usuario?: SortOrder
    data_inicio?: SortOrder
    data_fim?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
  }

  export type garantiaMinOrderByAggregateInput = {
    id_garantia?: SortOrder
    id_produto?: SortOrder
    id_usuario?: SortOrder
    data_inicio?: SortOrder
    data_fim?: SortOrder
    descricao?: SortOrder
    status?: SortOrder
  }

  export type garantiaSumOrderByAggregateInput = {
    id_garantia?: SortOrder
    id_produto?: SortOrder
    id_usuario?: SortOrder
  }

  export type tipo_usuarioCreateNestedOneWithoutUsuariosInput = {
    create?: XOR<tipo_usuarioCreateWithoutUsuariosInput, tipo_usuarioUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: tipo_usuarioCreateOrConnectWithoutUsuariosInput
    connect?: tipo_usuarioWhereUniqueInput
  }

  export type compraCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<compraCreateWithoutUsuarioInput, compraUncheckedCreateWithoutUsuarioInput> | compraCreateWithoutUsuarioInput[] | compraUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: compraCreateOrConnectWithoutUsuarioInput | compraCreateOrConnectWithoutUsuarioInput[]
    createMany?: compraCreateManyUsuarioInputEnvelope
    connect?: compraWhereUniqueInput | compraWhereUniqueInput[]
  }

  export type movimentacaoCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<movimentacaoCreateWithoutUsuarioInput, movimentacaoUncheckedCreateWithoutUsuarioInput> | movimentacaoCreateWithoutUsuarioInput[] | movimentacaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: movimentacaoCreateOrConnectWithoutUsuarioInput | movimentacaoCreateOrConnectWithoutUsuarioInput[]
    createMany?: movimentacaoCreateManyUsuarioInputEnvelope
    connect?: movimentacaoWhereUniqueInput | movimentacaoWhereUniqueInput[]
  }

  export type relatorioCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<relatorioCreateWithoutUsuarioInput, relatorioUncheckedCreateWithoutUsuarioInput> | relatorioCreateWithoutUsuarioInput[] | relatorioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: relatorioCreateOrConnectWithoutUsuarioInput | relatorioCreateOrConnectWithoutUsuarioInput[]
    createMany?: relatorioCreateManyUsuarioInputEnvelope
    connect?: relatorioWhereUniqueInput | relatorioWhereUniqueInput[]
  }

  export type garantiaCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<garantiaCreateWithoutUsuarioInput, garantiaUncheckedCreateWithoutUsuarioInput> | garantiaCreateWithoutUsuarioInput[] | garantiaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: garantiaCreateOrConnectWithoutUsuarioInput | garantiaCreateOrConnectWithoutUsuarioInput[]
    createMany?: garantiaCreateManyUsuarioInputEnvelope
    connect?: garantiaWhereUniqueInput | garantiaWhereUniqueInput[]
  }

  export type compraUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<compraCreateWithoutUsuarioInput, compraUncheckedCreateWithoutUsuarioInput> | compraCreateWithoutUsuarioInput[] | compraUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: compraCreateOrConnectWithoutUsuarioInput | compraCreateOrConnectWithoutUsuarioInput[]
    createMany?: compraCreateManyUsuarioInputEnvelope
    connect?: compraWhereUniqueInput | compraWhereUniqueInput[]
  }

  export type movimentacaoUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<movimentacaoCreateWithoutUsuarioInput, movimentacaoUncheckedCreateWithoutUsuarioInput> | movimentacaoCreateWithoutUsuarioInput[] | movimentacaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: movimentacaoCreateOrConnectWithoutUsuarioInput | movimentacaoCreateOrConnectWithoutUsuarioInput[]
    createMany?: movimentacaoCreateManyUsuarioInputEnvelope
    connect?: movimentacaoWhereUniqueInput | movimentacaoWhereUniqueInput[]
  }

  export type relatorioUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<relatorioCreateWithoutUsuarioInput, relatorioUncheckedCreateWithoutUsuarioInput> | relatorioCreateWithoutUsuarioInput[] | relatorioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: relatorioCreateOrConnectWithoutUsuarioInput | relatorioCreateOrConnectWithoutUsuarioInput[]
    createMany?: relatorioCreateManyUsuarioInputEnvelope
    connect?: relatorioWhereUniqueInput | relatorioWhereUniqueInput[]
  }

  export type garantiaUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<garantiaCreateWithoutUsuarioInput, garantiaUncheckedCreateWithoutUsuarioInput> | garantiaCreateWithoutUsuarioInput[] | garantiaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: garantiaCreateOrConnectWithoutUsuarioInput | garantiaCreateOrConnectWithoutUsuarioInput[]
    createMany?: garantiaCreateManyUsuarioInputEnvelope
    connect?: garantiaWhereUniqueInput | garantiaWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type tipo_usuarioUpdateOneRequiredWithoutUsuariosNestedInput = {
    create?: XOR<tipo_usuarioCreateWithoutUsuariosInput, tipo_usuarioUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: tipo_usuarioCreateOrConnectWithoutUsuariosInput
    upsert?: tipo_usuarioUpsertWithoutUsuariosInput
    connect?: tipo_usuarioWhereUniqueInput
    update?: XOR<XOR<tipo_usuarioUpdateToOneWithWhereWithoutUsuariosInput, tipo_usuarioUpdateWithoutUsuariosInput>, tipo_usuarioUncheckedUpdateWithoutUsuariosInput>
  }

  export type compraUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<compraCreateWithoutUsuarioInput, compraUncheckedCreateWithoutUsuarioInput> | compraCreateWithoutUsuarioInput[] | compraUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: compraCreateOrConnectWithoutUsuarioInput | compraCreateOrConnectWithoutUsuarioInput[]
    upsert?: compraUpsertWithWhereUniqueWithoutUsuarioInput | compraUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: compraCreateManyUsuarioInputEnvelope
    set?: compraWhereUniqueInput | compraWhereUniqueInput[]
    disconnect?: compraWhereUniqueInput | compraWhereUniqueInput[]
    delete?: compraWhereUniqueInput | compraWhereUniqueInput[]
    connect?: compraWhereUniqueInput | compraWhereUniqueInput[]
    update?: compraUpdateWithWhereUniqueWithoutUsuarioInput | compraUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: compraUpdateManyWithWhereWithoutUsuarioInput | compraUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: compraScalarWhereInput | compraScalarWhereInput[]
  }

  export type movimentacaoUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<movimentacaoCreateWithoutUsuarioInput, movimentacaoUncheckedCreateWithoutUsuarioInput> | movimentacaoCreateWithoutUsuarioInput[] | movimentacaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: movimentacaoCreateOrConnectWithoutUsuarioInput | movimentacaoCreateOrConnectWithoutUsuarioInput[]
    upsert?: movimentacaoUpsertWithWhereUniqueWithoutUsuarioInput | movimentacaoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: movimentacaoCreateManyUsuarioInputEnvelope
    set?: movimentacaoWhereUniqueInput | movimentacaoWhereUniqueInput[]
    disconnect?: movimentacaoWhereUniqueInput | movimentacaoWhereUniqueInput[]
    delete?: movimentacaoWhereUniqueInput | movimentacaoWhereUniqueInput[]
    connect?: movimentacaoWhereUniqueInput | movimentacaoWhereUniqueInput[]
    update?: movimentacaoUpdateWithWhereUniqueWithoutUsuarioInput | movimentacaoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: movimentacaoUpdateManyWithWhereWithoutUsuarioInput | movimentacaoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: movimentacaoScalarWhereInput | movimentacaoScalarWhereInput[]
  }

  export type relatorioUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<relatorioCreateWithoutUsuarioInput, relatorioUncheckedCreateWithoutUsuarioInput> | relatorioCreateWithoutUsuarioInput[] | relatorioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: relatorioCreateOrConnectWithoutUsuarioInput | relatorioCreateOrConnectWithoutUsuarioInput[]
    upsert?: relatorioUpsertWithWhereUniqueWithoutUsuarioInput | relatorioUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: relatorioCreateManyUsuarioInputEnvelope
    set?: relatorioWhereUniqueInput | relatorioWhereUniqueInput[]
    disconnect?: relatorioWhereUniqueInput | relatorioWhereUniqueInput[]
    delete?: relatorioWhereUniqueInput | relatorioWhereUniqueInput[]
    connect?: relatorioWhereUniqueInput | relatorioWhereUniqueInput[]
    update?: relatorioUpdateWithWhereUniqueWithoutUsuarioInput | relatorioUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: relatorioUpdateManyWithWhereWithoutUsuarioInput | relatorioUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: relatorioScalarWhereInput | relatorioScalarWhereInput[]
  }

  export type garantiaUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<garantiaCreateWithoutUsuarioInput, garantiaUncheckedCreateWithoutUsuarioInput> | garantiaCreateWithoutUsuarioInput[] | garantiaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: garantiaCreateOrConnectWithoutUsuarioInput | garantiaCreateOrConnectWithoutUsuarioInput[]
    upsert?: garantiaUpsertWithWhereUniqueWithoutUsuarioInput | garantiaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: garantiaCreateManyUsuarioInputEnvelope
    set?: garantiaWhereUniqueInput | garantiaWhereUniqueInput[]
    disconnect?: garantiaWhereUniqueInput | garantiaWhereUniqueInput[]
    delete?: garantiaWhereUniqueInput | garantiaWhereUniqueInput[]
    connect?: garantiaWhereUniqueInput | garantiaWhereUniqueInput[]
    update?: garantiaUpdateWithWhereUniqueWithoutUsuarioInput | garantiaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: garantiaUpdateManyWithWhereWithoutUsuarioInput | garantiaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: garantiaScalarWhereInput | garantiaScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type compraUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<compraCreateWithoutUsuarioInput, compraUncheckedCreateWithoutUsuarioInput> | compraCreateWithoutUsuarioInput[] | compraUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: compraCreateOrConnectWithoutUsuarioInput | compraCreateOrConnectWithoutUsuarioInput[]
    upsert?: compraUpsertWithWhereUniqueWithoutUsuarioInput | compraUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: compraCreateManyUsuarioInputEnvelope
    set?: compraWhereUniqueInput | compraWhereUniqueInput[]
    disconnect?: compraWhereUniqueInput | compraWhereUniqueInput[]
    delete?: compraWhereUniqueInput | compraWhereUniqueInput[]
    connect?: compraWhereUniqueInput | compraWhereUniqueInput[]
    update?: compraUpdateWithWhereUniqueWithoutUsuarioInput | compraUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: compraUpdateManyWithWhereWithoutUsuarioInput | compraUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: compraScalarWhereInput | compraScalarWhereInput[]
  }

  export type movimentacaoUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<movimentacaoCreateWithoutUsuarioInput, movimentacaoUncheckedCreateWithoutUsuarioInput> | movimentacaoCreateWithoutUsuarioInput[] | movimentacaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: movimentacaoCreateOrConnectWithoutUsuarioInput | movimentacaoCreateOrConnectWithoutUsuarioInput[]
    upsert?: movimentacaoUpsertWithWhereUniqueWithoutUsuarioInput | movimentacaoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: movimentacaoCreateManyUsuarioInputEnvelope
    set?: movimentacaoWhereUniqueInput | movimentacaoWhereUniqueInput[]
    disconnect?: movimentacaoWhereUniqueInput | movimentacaoWhereUniqueInput[]
    delete?: movimentacaoWhereUniqueInput | movimentacaoWhereUniqueInput[]
    connect?: movimentacaoWhereUniqueInput | movimentacaoWhereUniqueInput[]
    update?: movimentacaoUpdateWithWhereUniqueWithoutUsuarioInput | movimentacaoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: movimentacaoUpdateManyWithWhereWithoutUsuarioInput | movimentacaoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: movimentacaoScalarWhereInput | movimentacaoScalarWhereInput[]
  }

  export type relatorioUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<relatorioCreateWithoutUsuarioInput, relatorioUncheckedCreateWithoutUsuarioInput> | relatorioCreateWithoutUsuarioInput[] | relatorioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: relatorioCreateOrConnectWithoutUsuarioInput | relatorioCreateOrConnectWithoutUsuarioInput[]
    upsert?: relatorioUpsertWithWhereUniqueWithoutUsuarioInput | relatorioUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: relatorioCreateManyUsuarioInputEnvelope
    set?: relatorioWhereUniqueInput | relatorioWhereUniqueInput[]
    disconnect?: relatorioWhereUniqueInput | relatorioWhereUniqueInput[]
    delete?: relatorioWhereUniqueInput | relatorioWhereUniqueInput[]
    connect?: relatorioWhereUniqueInput | relatorioWhereUniqueInput[]
    update?: relatorioUpdateWithWhereUniqueWithoutUsuarioInput | relatorioUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: relatorioUpdateManyWithWhereWithoutUsuarioInput | relatorioUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: relatorioScalarWhereInput | relatorioScalarWhereInput[]
  }

  export type garantiaUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<garantiaCreateWithoutUsuarioInput, garantiaUncheckedCreateWithoutUsuarioInput> | garantiaCreateWithoutUsuarioInput[] | garantiaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: garantiaCreateOrConnectWithoutUsuarioInput | garantiaCreateOrConnectWithoutUsuarioInput[]
    upsert?: garantiaUpsertWithWhereUniqueWithoutUsuarioInput | garantiaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: garantiaCreateManyUsuarioInputEnvelope
    set?: garantiaWhereUniqueInput | garantiaWhereUniqueInput[]
    disconnect?: garantiaWhereUniqueInput | garantiaWhereUniqueInput[]
    delete?: garantiaWhereUniqueInput | garantiaWhereUniqueInput[]
    connect?: garantiaWhereUniqueInput | garantiaWhereUniqueInput[]
    update?: garantiaUpdateWithWhereUniqueWithoutUsuarioInput | garantiaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: garantiaUpdateManyWithWhereWithoutUsuarioInput | garantiaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: garantiaScalarWhereInput | garantiaScalarWhereInput[]
  }

  export type usuarioCreateNestedManyWithoutTipo_usuarioInput = {
    create?: XOR<usuarioCreateWithoutTipo_usuarioInput, usuarioUncheckedCreateWithoutTipo_usuarioInput> | usuarioCreateWithoutTipo_usuarioInput[] | usuarioUncheckedCreateWithoutTipo_usuarioInput[]
    connectOrCreate?: usuarioCreateOrConnectWithoutTipo_usuarioInput | usuarioCreateOrConnectWithoutTipo_usuarioInput[]
    createMany?: usuarioCreateManyTipo_usuarioInputEnvelope
    connect?: usuarioWhereUniqueInput | usuarioWhereUniqueInput[]
  }

  export type usuarioUncheckedCreateNestedManyWithoutTipo_usuarioInput = {
    create?: XOR<usuarioCreateWithoutTipo_usuarioInput, usuarioUncheckedCreateWithoutTipo_usuarioInput> | usuarioCreateWithoutTipo_usuarioInput[] | usuarioUncheckedCreateWithoutTipo_usuarioInput[]
    connectOrCreate?: usuarioCreateOrConnectWithoutTipo_usuarioInput | usuarioCreateOrConnectWithoutTipo_usuarioInput[]
    createMany?: usuarioCreateManyTipo_usuarioInputEnvelope
    connect?: usuarioWhereUniqueInput | usuarioWhereUniqueInput[]
  }

  export type usuarioUpdateManyWithoutTipo_usuarioNestedInput = {
    create?: XOR<usuarioCreateWithoutTipo_usuarioInput, usuarioUncheckedCreateWithoutTipo_usuarioInput> | usuarioCreateWithoutTipo_usuarioInput[] | usuarioUncheckedCreateWithoutTipo_usuarioInput[]
    connectOrCreate?: usuarioCreateOrConnectWithoutTipo_usuarioInput | usuarioCreateOrConnectWithoutTipo_usuarioInput[]
    upsert?: usuarioUpsertWithWhereUniqueWithoutTipo_usuarioInput | usuarioUpsertWithWhereUniqueWithoutTipo_usuarioInput[]
    createMany?: usuarioCreateManyTipo_usuarioInputEnvelope
    set?: usuarioWhereUniqueInput | usuarioWhereUniqueInput[]
    disconnect?: usuarioWhereUniqueInput | usuarioWhereUniqueInput[]
    delete?: usuarioWhereUniqueInput | usuarioWhereUniqueInput[]
    connect?: usuarioWhereUniqueInput | usuarioWhereUniqueInput[]
    update?: usuarioUpdateWithWhereUniqueWithoutTipo_usuarioInput | usuarioUpdateWithWhereUniqueWithoutTipo_usuarioInput[]
    updateMany?: usuarioUpdateManyWithWhereWithoutTipo_usuarioInput | usuarioUpdateManyWithWhereWithoutTipo_usuarioInput[]
    deleteMany?: usuarioScalarWhereInput | usuarioScalarWhereInput[]
  }

  export type usuarioUncheckedUpdateManyWithoutTipo_usuarioNestedInput = {
    create?: XOR<usuarioCreateWithoutTipo_usuarioInput, usuarioUncheckedCreateWithoutTipo_usuarioInput> | usuarioCreateWithoutTipo_usuarioInput[] | usuarioUncheckedCreateWithoutTipo_usuarioInput[]
    connectOrCreate?: usuarioCreateOrConnectWithoutTipo_usuarioInput | usuarioCreateOrConnectWithoutTipo_usuarioInput[]
    upsert?: usuarioUpsertWithWhereUniqueWithoutTipo_usuarioInput | usuarioUpsertWithWhereUniqueWithoutTipo_usuarioInput[]
    createMany?: usuarioCreateManyTipo_usuarioInputEnvelope
    set?: usuarioWhereUniqueInput | usuarioWhereUniqueInput[]
    disconnect?: usuarioWhereUniqueInput | usuarioWhereUniqueInput[]
    delete?: usuarioWhereUniqueInput | usuarioWhereUniqueInput[]
    connect?: usuarioWhereUniqueInput | usuarioWhereUniqueInput[]
    update?: usuarioUpdateWithWhereUniqueWithoutTipo_usuarioInput | usuarioUpdateWithWhereUniqueWithoutTipo_usuarioInput[]
    updateMany?: usuarioUpdateManyWithWhereWithoutTipo_usuarioInput | usuarioUpdateManyWithWhereWithoutTipo_usuarioInput[]
    deleteMany?: usuarioScalarWhereInput | usuarioScalarWhereInput[]
  }

  export type estoqueCreateNestedManyWithoutProdutoInput = {
    create?: XOR<estoqueCreateWithoutProdutoInput, estoqueUncheckedCreateWithoutProdutoInput> | estoqueCreateWithoutProdutoInput[] | estoqueUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: estoqueCreateOrConnectWithoutProdutoInput | estoqueCreateOrConnectWithoutProdutoInput[]
    createMany?: estoqueCreateManyProdutoInputEnvelope
    connect?: estoqueWhereUniqueInput | estoqueWhereUniqueInput[]
  }

  export type compraCreateNestedManyWithoutProdutoInput = {
    create?: XOR<compraCreateWithoutProdutoInput, compraUncheckedCreateWithoutProdutoInput> | compraCreateWithoutProdutoInput[] | compraUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: compraCreateOrConnectWithoutProdutoInput | compraCreateOrConnectWithoutProdutoInput[]
    createMany?: compraCreateManyProdutoInputEnvelope
    connect?: compraWhereUniqueInput | compraWhereUniqueInput[]
  }

  export type alertaCreateNestedManyWithoutProdutoInput = {
    create?: XOR<alertaCreateWithoutProdutoInput, alertaUncheckedCreateWithoutProdutoInput> | alertaCreateWithoutProdutoInput[] | alertaUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: alertaCreateOrConnectWithoutProdutoInput | alertaCreateOrConnectWithoutProdutoInput[]
    createMany?: alertaCreateManyProdutoInputEnvelope
    connect?: alertaWhereUniqueInput | alertaWhereUniqueInput[]
  }

  export type previsao_demandaCreateNestedManyWithoutProdutoInput = {
    create?: XOR<previsao_demandaCreateWithoutProdutoInput, previsao_demandaUncheckedCreateWithoutProdutoInput> | previsao_demandaCreateWithoutProdutoInput[] | previsao_demandaUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: previsao_demandaCreateOrConnectWithoutProdutoInput | previsao_demandaCreateOrConnectWithoutProdutoInput[]
    createMany?: previsao_demandaCreateManyProdutoInputEnvelope
    connect?: previsao_demandaWhereUniqueInput | previsao_demandaWhereUniqueInput[]
  }

  export type historico_previsaoCreateNestedManyWithoutProdutoInput = {
    create?: XOR<historico_previsaoCreateWithoutProdutoInput, historico_previsaoUncheckedCreateWithoutProdutoInput> | historico_previsaoCreateWithoutProdutoInput[] | historico_previsaoUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: historico_previsaoCreateOrConnectWithoutProdutoInput | historico_previsaoCreateOrConnectWithoutProdutoInput[]
    createMany?: historico_previsaoCreateManyProdutoInputEnvelope
    connect?: historico_previsaoWhereUniqueInput | historico_previsaoWhereUniqueInput[]
  }

  export type movimentacaoCreateNestedManyWithoutProdutoInput = {
    create?: XOR<movimentacaoCreateWithoutProdutoInput, movimentacaoUncheckedCreateWithoutProdutoInput> | movimentacaoCreateWithoutProdutoInput[] | movimentacaoUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: movimentacaoCreateOrConnectWithoutProdutoInput | movimentacaoCreateOrConnectWithoutProdutoInput[]
    createMany?: movimentacaoCreateManyProdutoInputEnvelope
    connect?: movimentacaoWhereUniqueInput | movimentacaoWhereUniqueInput[]
  }

  export type garantiaCreateNestedManyWithoutProdutoInput = {
    create?: XOR<garantiaCreateWithoutProdutoInput, garantiaUncheckedCreateWithoutProdutoInput> | garantiaCreateWithoutProdutoInput[] | garantiaUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: garantiaCreateOrConnectWithoutProdutoInput | garantiaCreateOrConnectWithoutProdutoInput[]
    createMany?: garantiaCreateManyProdutoInputEnvelope
    connect?: garantiaWhereUniqueInput | garantiaWhereUniqueInput[]
  }

  export type fornecedorCreateNestedOneWithoutProdutosInput = {
    create?: XOR<fornecedorCreateWithoutProdutosInput, fornecedorUncheckedCreateWithoutProdutosInput>
    connectOrCreate?: fornecedorCreateOrConnectWithoutProdutosInput
    connect?: fornecedorWhereUniqueInput
  }

  export type estoqueUncheckedCreateNestedManyWithoutProdutoInput = {
    create?: XOR<estoqueCreateWithoutProdutoInput, estoqueUncheckedCreateWithoutProdutoInput> | estoqueCreateWithoutProdutoInput[] | estoqueUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: estoqueCreateOrConnectWithoutProdutoInput | estoqueCreateOrConnectWithoutProdutoInput[]
    createMany?: estoqueCreateManyProdutoInputEnvelope
    connect?: estoqueWhereUniqueInput | estoqueWhereUniqueInput[]
  }

  export type compraUncheckedCreateNestedManyWithoutProdutoInput = {
    create?: XOR<compraCreateWithoutProdutoInput, compraUncheckedCreateWithoutProdutoInput> | compraCreateWithoutProdutoInput[] | compraUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: compraCreateOrConnectWithoutProdutoInput | compraCreateOrConnectWithoutProdutoInput[]
    createMany?: compraCreateManyProdutoInputEnvelope
    connect?: compraWhereUniqueInput | compraWhereUniqueInput[]
  }

  export type alertaUncheckedCreateNestedManyWithoutProdutoInput = {
    create?: XOR<alertaCreateWithoutProdutoInput, alertaUncheckedCreateWithoutProdutoInput> | alertaCreateWithoutProdutoInput[] | alertaUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: alertaCreateOrConnectWithoutProdutoInput | alertaCreateOrConnectWithoutProdutoInput[]
    createMany?: alertaCreateManyProdutoInputEnvelope
    connect?: alertaWhereUniqueInput | alertaWhereUniqueInput[]
  }

  export type previsao_demandaUncheckedCreateNestedManyWithoutProdutoInput = {
    create?: XOR<previsao_demandaCreateWithoutProdutoInput, previsao_demandaUncheckedCreateWithoutProdutoInput> | previsao_demandaCreateWithoutProdutoInput[] | previsao_demandaUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: previsao_demandaCreateOrConnectWithoutProdutoInput | previsao_demandaCreateOrConnectWithoutProdutoInput[]
    createMany?: previsao_demandaCreateManyProdutoInputEnvelope
    connect?: previsao_demandaWhereUniqueInput | previsao_demandaWhereUniqueInput[]
  }

  export type historico_previsaoUncheckedCreateNestedManyWithoutProdutoInput = {
    create?: XOR<historico_previsaoCreateWithoutProdutoInput, historico_previsaoUncheckedCreateWithoutProdutoInput> | historico_previsaoCreateWithoutProdutoInput[] | historico_previsaoUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: historico_previsaoCreateOrConnectWithoutProdutoInput | historico_previsaoCreateOrConnectWithoutProdutoInput[]
    createMany?: historico_previsaoCreateManyProdutoInputEnvelope
    connect?: historico_previsaoWhereUniqueInput | historico_previsaoWhereUniqueInput[]
  }

  export type movimentacaoUncheckedCreateNestedManyWithoutProdutoInput = {
    create?: XOR<movimentacaoCreateWithoutProdutoInput, movimentacaoUncheckedCreateWithoutProdutoInput> | movimentacaoCreateWithoutProdutoInput[] | movimentacaoUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: movimentacaoCreateOrConnectWithoutProdutoInput | movimentacaoCreateOrConnectWithoutProdutoInput[]
    createMany?: movimentacaoCreateManyProdutoInputEnvelope
    connect?: movimentacaoWhereUniqueInput | movimentacaoWhereUniqueInput[]
  }

  export type garantiaUncheckedCreateNestedManyWithoutProdutoInput = {
    create?: XOR<garantiaCreateWithoutProdutoInput, garantiaUncheckedCreateWithoutProdutoInput> | garantiaCreateWithoutProdutoInput[] | garantiaUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: garantiaCreateOrConnectWithoutProdutoInput | garantiaCreateOrConnectWithoutProdutoInput[]
    createMany?: garantiaCreateManyProdutoInputEnvelope
    connect?: garantiaWhereUniqueInput | garantiaWhereUniqueInput[]
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type estoqueUpdateManyWithoutProdutoNestedInput = {
    create?: XOR<estoqueCreateWithoutProdutoInput, estoqueUncheckedCreateWithoutProdutoInput> | estoqueCreateWithoutProdutoInput[] | estoqueUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: estoqueCreateOrConnectWithoutProdutoInput | estoqueCreateOrConnectWithoutProdutoInput[]
    upsert?: estoqueUpsertWithWhereUniqueWithoutProdutoInput | estoqueUpsertWithWhereUniqueWithoutProdutoInput[]
    createMany?: estoqueCreateManyProdutoInputEnvelope
    set?: estoqueWhereUniqueInput | estoqueWhereUniqueInput[]
    disconnect?: estoqueWhereUniqueInput | estoqueWhereUniqueInput[]
    delete?: estoqueWhereUniqueInput | estoqueWhereUniqueInput[]
    connect?: estoqueWhereUniqueInput | estoqueWhereUniqueInput[]
    update?: estoqueUpdateWithWhereUniqueWithoutProdutoInput | estoqueUpdateWithWhereUniqueWithoutProdutoInput[]
    updateMany?: estoqueUpdateManyWithWhereWithoutProdutoInput | estoqueUpdateManyWithWhereWithoutProdutoInput[]
    deleteMany?: estoqueScalarWhereInput | estoqueScalarWhereInput[]
  }

  export type compraUpdateManyWithoutProdutoNestedInput = {
    create?: XOR<compraCreateWithoutProdutoInput, compraUncheckedCreateWithoutProdutoInput> | compraCreateWithoutProdutoInput[] | compraUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: compraCreateOrConnectWithoutProdutoInput | compraCreateOrConnectWithoutProdutoInput[]
    upsert?: compraUpsertWithWhereUniqueWithoutProdutoInput | compraUpsertWithWhereUniqueWithoutProdutoInput[]
    createMany?: compraCreateManyProdutoInputEnvelope
    set?: compraWhereUniqueInput | compraWhereUniqueInput[]
    disconnect?: compraWhereUniqueInput | compraWhereUniqueInput[]
    delete?: compraWhereUniqueInput | compraWhereUniqueInput[]
    connect?: compraWhereUniqueInput | compraWhereUniqueInput[]
    update?: compraUpdateWithWhereUniqueWithoutProdutoInput | compraUpdateWithWhereUniqueWithoutProdutoInput[]
    updateMany?: compraUpdateManyWithWhereWithoutProdutoInput | compraUpdateManyWithWhereWithoutProdutoInput[]
    deleteMany?: compraScalarWhereInput | compraScalarWhereInput[]
  }

  export type alertaUpdateManyWithoutProdutoNestedInput = {
    create?: XOR<alertaCreateWithoutProdutoInput, alertaUncheckedCreateWithoutProdutoInput> | alertaCreateWithoutProdutoInput[] | alertaUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: alertaCreateOrConnectWithoutProdutoInput | alertaCreateOrConnectWithoutProdutoInput[]
    upsert?: alertaUpsertWithWhereUniqueWithoutProdutoInput | alertaUpsertWithWhereUniqueWithoutProdutoInput[]
    createMany?: alertaCreateManyProdutoInputEnvelope
    set?: alertaWhereUniqueInput | alertaWhereUniqueInput[]
    disconnect?: alertaWhereUniqueInput | alertaWhereUniqueInput[]
    delete?: alertaWhereUniqueInput | alertaWhereUniqueInput[]
    connect?: alertaWhereUniqueInput | alertaWhereUniqueInput[]
    update?: alertaUpdateWithWhereUniqueWithoutProdutoInput | alertaUpdateWithWhereUniqueWithoutProdutoInput[]
    updateMany?: alertaUpdateManyWithWhereWithoutProdutoInput | alertaUpdateManyWithWhereWithoutProdutoInput[]
    deleteMany?: alertaScalarWhereInput | alertaScalarWhereInput[]
  }

  export type previsao_demandaUpdateManyWithoutProdutoNestedInput = {
    create?: XOR<previsao_demandaCreateWithoutProdutoInput, previsao_demandaUncheckedCreateWithoutProdutoInput> | previsao_demandaCreateWithoutProdutoInput[] | previsao_demandaUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: previsao_demandaCreateOrConnectWithoutProdutoInput | previsao_demandaCreateOrConnectWithoutProdutoInput[]
    upsert?: previsao_demandaUpsertWithWhereUniqueWithoutProdutoInput | previsao_demandaUpsertWithWhereUniqueWithoutProdutoInput[]
    createMany?: previsao_demandaCreateManyProdutoInputEnvelope
    set?: previsao_demandaWhereUniqueInput | previsao_demandaWhereUniqueInput[]
    disconnect?: previsao_demandaWhereUniqueInput | previsao_demandaWhereUniqueInput[]
    delete?: previsao_demandaWhereUniqueInput | previsao_demandaWhereUniqueInput[]
    connect?: previsao_demandaWhereUniqueInput | previsao_demandaWhereUniqueInput[]
    update?: previsao_demandaUpdateWithWhereUniqueWithoutProdutoInput | previsao_demandaUpdateWithWhereUniqueWithoutProdutoInput[]
    updateMany?: previsao_demandaUpdateManyWithWhereWithoutProdutoInput | previsao_demandaUpdateManyWithWhereWithoutProdutoInput[]
    deleteMany?: previsao_demandaScalarWhereInput | previsao_demandaScalarWhereInput[]
  }

  export type historico_previsaoUpdateManyWithoutProdutoNestedInput = {
    create?: XOR<historico_previsaoCreateWithoutProdutoInput, historico_previsaoUncheckedCreateWithoutProdutoInput> | historico_previsaoCreateWithoutProdutoInput[] | historico_previsaoUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: historico_previsaoCreateOrConnectWithoutProdutoInput | historico_previsaoCreateOrConnectWithoutProdutoInput[]
    upsert?: historico_previsaoUpsertWithWhereUniqueWithoutProdutoInput | historico_previsaoUpsertWithWhereUniqueWithoutProdutoInput[]
    createMany?: historico_previsaoCreateManyProdutoInputEnvelope
    set?: historico_previsaoWhereUniqueInput | historico_previsaoWhereUniqueInput[]
    disconnect?: historico_previsaoWhereUniqueInput | historico_previsaoWhereUniqueInput[]
    delete?: historico_previsaoWhereUniqueInput | historico_previsaoWhereUniqueInput[]
    connect?: historico_previsaoWhereUniqueInput | historico_previsaoWhereUniqueInput[]
    update?: historico_previsaoUpdateWithWhereUniqueWithoutProdutoInput | historico_previsaoUpdateWithWhereUniqueWithoutProdutoInput[]
    updateMany?: historico_previsaoUpdateManyWithWhereWithoutProdutoInput | historico_previsaoUpdateManyWithWhereWithoutProdutoInput[]
    deleteMany?: historico_previsaoScalarWhereInput | historico_previsaoScalarWhereInput[]
  }

  export type movimentacaoUpdateManyWithoutProdutoNestedInput = {
    create?: XOR<movimentacaoCreateWithoutProdutoInput, movimentacaoUncheckedCreateWithoutProdutoInput> | movimentacaoCreateWithoutProdutoInput[] | movimentacaoUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: movimentacaoCreateOrConnectWithoutProdutoInput | movimentacaoCreateOrConnectWithoutProdutoInput[]
    upsert?: movimentacaoUpsertWithWhereUniqueWithoutProdutoInput | movimentacaoUpsertWithWhereUniqueWithoutProdutoInput[]
    createMany?: movimentacaoCreateManyProdutoInputEnvelope
    set?: movimentacaoWhereUniqueInput | movimentacaoWhereUniqueInput[]
    disconnect?: movimentacaoWhereUniqueInput | movimentacaoWhereUniqueInput[]
    delete?: movimentacaoWhereUniqueInput | movimentacaoWhereUniqueInput[]
    connect?: movimentacaoWhereUniqueInput | movimentacaoWhereUniqueInput[]
    update?: movimentacaoUpdateWithWhereUniqueWithoutProdutoInput | movimentacaoUpdateWithWhereUniqueWithoutProdutoInput[]
    updateMany?: movimentacaoUpdateManyWithWhereWithoutProdutoInput | movimentacaoUpdateManyWithWhereWithoutProdutoInput[]
    deleteMany?: movimentacaoScalarWhereInput | movimentacaoScalarWhereInput[]
  }

  export type garantiaUpdateManyWithoutProdutoNestedInput = {
    create?: XOR<garantiaCreateWithoutProdutoInput, garantiaUncheckedCreateWithoutProdutoInput> | garantiaCreateWithoutProdutoInput[] | garantiaUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: garantiaCreateOrConnectWithoutProdutoInput | garantiaCreateOrConnectWithoutProdutoInput[]
    upsert?: garantiaUpsertWithWhereUniqueWithoutProdutoInput | garantiaUpsertWithWhereUniqueWithoutProdutoInput[]
    createMany?: garantiaCreateManyProdutoInputEnvelope
    set?: garantiaWhereUniqueInput | garantiaWhereUniqueInput[]
    disconnect?: garantiaWhereUniqueInput | garantiaWhereUniqueInput[]
    delete?: garantiaWhereUniqueInput | garantiaWhereUniqueInput[]
    connect?: garantiaWhereUniqueInput | garantiaWhereUniqueInput[]
    update?: garantiaUpdateWithWhereUniqueWithoutProdutoInput | garantiaUpdateWithWhereUniqueWithoutProdutoInput[]
    updateMany?: garantiaUpdateManyWithWhereWithoutProdutoInput | garantiaUpdateManyWithWhereWithoutProdutoInput[]
    deleteMany?: garantiaScalarWhereInput | garantiaScalarWhereInput[]
  }

  export type fornecedorUpdateOneWithoutProdutosNestedInput = {
    create?: XOR<fornecedorCreateWithoutProdutosInput, fornecedorUncheckedCreateWithoutProdutosInput>
    connectOrCreate?: fornecedorCreateOrConnectWithoutProdutosInput
    upsert?: fornecedorUpsertWithoutProdutosInput
    disconnect?: fornecedorWhereInput | boolean
    delete?: fornecedorWhereInput | boolean
    connect?: fornecedorWhereUniqueInput
    update?: XOR<XOR<fornecedorUpdateToOneWithWhereWithoutProdutosInput, fornecedorUpdateWithoutProdutosInput>, fornecedorUncheckedUpdateWithoutProdutosInput>
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type estoqueUncheckedUpdateManyWithoutProdutoNestedInput = {
    create?: XOR<estoqueCreateWithoutProdutoInput, estoqueUncheckedCreateWithoutProdutoInput> | estoqueCreateWithoutProdutoInput[] | estoqueUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: estoqueCreateOrConnectWithoutProdutoInput | estoqueCreateOrConnectWithoutProdutoInput[]
    upsert?: estoqueUpsertWithWhereUniqueWithoutProdutoInput | estoqueUpsertWithWhereUniqueWithoutProdutoInput[]
    createMany?: estoqueCreateManyProdutoInputEnvelope
    set?: estoqueWhereUniqueInput | estoqueWhereUniqueInput[]
    disconnect?: estoqueWhereUniqueInput | estoqueWhereUniqueInput[]
    delete?: estoqueWhereUniqueInput | estoqueWhereUniqueInput[]
    connect?: estoqueWhereUniqueInput | estoqueWhereUniqueInput[]
    update?: estoqueUpdateWithWhereUniqueWithoutProdutoInput | estoqueUpdateWithWhereUniqueWithoutProdutoInput[]
    updateMany?: estoqueUpdateManyWithWhereWithoutProdutoInput | estoqueUpdateManyWithWhereWithoutProdutoInput[]
    deleteMany?: estoqueScalarWhereInput | estoqueScalarWhereInput[]
  }

  export type compraUncheckedUpdateManyWithoutProdutoNestedInput = {
    create?: XOR<compraCreateWithoutProdutoInput, compraUncheckedCreateWithoutProdutoInput> | compraCreateWithoutProdutoInput[] | compraUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: compraCreateOrConnectWithoutProdutoInput | compraCreateOrConnectWithoutProdutoInput[]
    upsert?: compraUpsertWithWhereUniqueWithoutProdutoInput | compraUpsertWithWhereUniqueWithoutProdutoInput[]
    createMany?: compraCreateManyProdutoInputEnvelope
    set?: compraWhereUniqueInput | compraWhereUniqueInput[]
    disconnect?: compraWhereUniqueInput | compraWhereUniqueInput[]
    delete?: compraWhereUniqueInput | compraWhereUniqueInput[]
    connect?: compraWhereUniqueInput | compraWhereUniqueInput[]
    update?: compraUpdateWithWhereUniqueWithoutProdutoInput | compraUpdateWithWhereUniqueWithoutProdutoInput[]
    updateMany?: compraUpdateManyWithWhereWithoutProdutoInput | compraUpdateManyWithWhereWithoutProdutoInput[]
    deleteMany?: compraScalarWhereInput | compraScalarWhereInput[]
  }

  export type alertaUncheckedUpdateManyWithoutProdutoNestedInput = {
    create?: XOR<alertaCreateWithoutProdutoInput, alertaUncheckedCreateWithoutProdutoInput> | alertaCreateWithoutProdutoInput[] | alertaUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: alertaCreateOrConnectWithoutProdutoInput | alertaCreateOrConnectWithoutProdutoInput[]
    upsert?: alertaUpsertWithWhereUniqueWithoutProdutoInput | alertaUpsertWithWhereUniqueWithoutProdutoInput[]
    createMany?: alertaCreateManyProdutoInputEnvelope
    set?: alertaWhereUniqueInput | alertaWhereUniqueInput[]
    disconnect?: alertaWhereUniqueInput | alertaWhereUniqueInput[]
    delete?: alertaWhereUniqueInput | alertaWhereUniqueInput[]
    connect?: alertaWhereUniqueInput | alertaWhereUniqueInput[]
    update?: alertaUpdateWithWhereUniqueWithoutProdutoInput | alertaUpdateWithWhereUniqueWithoutProdutoInput[]
    updateMany?: alertaUpdateManyWithWhereWithoutProdutoInput | alertaUpdateManyWithWhereWithoutProdutoInput[]
    deleteMany?: alertaScalarWhereInput | alertaScalarWhereInput[]
  }

  export type previsao_demandaUncheckedUpdateManyWithoutProdutoNestedInput = {
    create?: XOR<previsao_demandaCreateWithoutProdutoInput, previsao_demandaUncheckedCreateWithoutProdutoInput> | previsao_demandaCreateWithoutProdutoInput[] | previsao_demandaUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: previsao_demandaCreateOrConnectWithoutProdutoInput | previsao_demandaCreateOrConnectWithoutProdutoInput[]
    upsert?: previsao_demandaUpsertWithWhereUniqueWithoutProdutoInput | previsao_demandaUpsertWithWhereUniqueWithoutProdutoInput[]
    createMany?: previsao_demandaCreateManyProdutoInputEnvelope
    set?: previsao_demandaWhereUniqueInput | previsao_demandaWhereUniqueInput[]
    disconnect?: previsao_demandaWhereUniqueInput | previsao_demandaWhereUniqueInput[]
    delete?: previsao_demandaWhereUniqueInput | previsao_demandaWhereUniqueInput[]
    connect?: previsao_demandaWhereUniqueInput | previsao_demandaWhereUniqueInput[]
    update?: previsao_demandaUpdateWithWhereUniqueWithoutProdutoInput | previsao_demandaUpdateWithWhereUniqueWithoutProdutoInput[]
    updateMany?: previsao_demandaUpdateManyWithWhereWithoutProdutoInput | previsao_demandaUpdateManyWithWhereWithoutProdutoInput[]
    deleteMany?: previsao_demandaScalarWhereInput | previsao_demandaScalarWhereInput[]
  }

  export type historico_previsaoUncheckedUpdateManyWithoutProdutoNestedInput = {
    create?: XOR<historico_previsaoCreateWithoutProdutoInput, historico_previsaoUncheckedCreateWithoutProdutoInput> | historico_previsaoCreateWithoutProdutoInput[] | historico_previsaoUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: historico_previsaoCreateOrConnectWithoutProdutoInput | historico_previsaoCreateOrConnectWithoutProdutoInput[]
    upsert?: historico_previsaoUpsertWithWhereUniqueWithoutProdutoInput | historico_previsaoUpsertWithWhereUniqueWithoutProdutoInput[]
    createMany?: historico_previsaoCreateManyProdutoInputEnvelope
    set?: historico_previsaoWhereUniqueInput | historico_previsaoWhereUniqueInput[]
    disconnect?: historico_previsaoWhereUniqueInput | historico_previsaoWhereUniqueInput[]
    delete?: historico_previsaoWhereUniqueInput | historico_previsaoWhereUniqueInput[]
    connect?: historico_previsaoWhereUniqueInput | historico_previsaoWhereUniqueInput[]
    update?: historico_previsaoUpdateWithWhereUniqueWithoutProdutoInput | historico_previsaoUpdateWithWhereUniqueWithoutProdutoInput[]
    updateMany?: historico_previsaoUpdateManyWithWhereWithoutProdutoInput | historico_previsaoUpdateManyWithWhereWithoutProdutoInput[]
    deleteMany?: historico_previsaoScalarWhereInput | historico_previsaoScalarWhereInput[]
  }

  export type movimentacaoUncheckedUpdateManyWithoutProdutoNestedInput = {
    create?: XOR<movimentacaoCreateWithoutProdutoInput, movimentacaoUncheckedCreateWithoutProdutoInput> | movimentacaoCreateWithoutProdutoInput[] | movimentacaoUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: movimentacaoCreateOrConnectWithoutProdutoInput | movimentacaoCreateOrConnectWithoutProdutoInput[]
    upsert?: movimentacaoUpsertWithWhereUniqueWithoutProdutoInput | movimentacaoUpsertWithWhereUniqueWithoutProdutoInput[]
    createMany?: movimentacaoCreateManyProdutoInputEnvelope
    set?: movimentacaoWhereUniqueInput | movimentacaoWhereUniqueInput[]
    disconnect?: movimentacaoWhereUniqueInput | movimentacaoWhereUniqueInput[]
    delete?: movimentacaoWhereUniqueInput | movimentacaoWhereUniqueInput[]
    connect?: movimentacaoWhereUniqueInput | movimentacaoWhereUniqueInput[]
    update?: movimentacaoUpdateWithWhereUniqueWithoutProdutoInput | movimentacaoUpdateWithWhereUniqueWithoutProdutoInput[]
    updateMany?: movimentacaoUpdateManyWithWhereWithoutProdutoInput | movimentacaoUpdateManyWithWhereWithoutProdutoInput[]
    deleteMany?: movimentacaoScalarWhereInput | movimentacaoScalarWhereInput[]
  }

  export type garantiaUncheckedUpdateManyWithoutProdutoNestedInput = {
    create?: XOR<garantiaCreateWithoutProdutoInput, garantiaUncheckedCreateWithoutProdutoInput> | garantiaCreateWithoutProdutoInput[] | garantiaUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: garantiaCreateOrConnectWithoutProdutoInput | garantiaCreateOrConnectWithoutProdutoInput[]
    upsert?: garantiaUpsertWithWhereUniqueWithoutProdutoInput | garantiaUpsertWithWhereUniqueWithoutProdutoInput[]
    createMany?: garantiaCreateManyProdutoInputEnvelope
    set?: garantiaWhereUniqueInput | garantiaWhereUniqueInput[]
    disconnect?: garantiaWhereUniqueInput | garantiaWhereUniqueInput[]
    delete?: garantiaWhereUniqueInput | garantiaWhereUniqueInput[]
    connect?: garantiaWhereUniqueInput | garantiaWhereUniqueInput[]
    update?: garantiaUpdateWithWhereUniqueWithoutProdutoInput | garantiaUpdateWithWhereUniqueWithoutProdutoInput[]
    updateMany?: garantiaUpdateManyWithWhereWithoutProdutoInput | garantiaUpdateManyWithWhereWithoutProdutoInput[]
    deleteMany?: garantiaScalarWhereInput | garantiaScalarWhereInput[]
  }

  export type produtoCreateNestedOneWithoutEstoqueInput = {
    create?: XOR<produtoCreateWithoutEstoqueInput, produtoUncheckedCreateWithoutEstoqueInput>
    connectOrCreate?: produtoCreateOrConnectWithoutEstoqueInput
    connect?: produtoWhereUniqueInput
  }

  export type salaCreateNestedOneWithoutEstoquesInput = {
    create?: XOR<salaCreateWithoutEstoquesInput, salaUncheckedCreateWithoutEstoquesInput>
    connectOrCreate?: salaCreateOrConnectWithoutEstoquesInput
    connect?: salaWhereUniqueInput
  }

  export type produtoUpdateOneRequiredWithoutEstoqueNestedInput = {
    create?: XOR<produtoCreateWithoutEstoqueInput, produtoUncheckedCreateWithoutEstoqueInput>
    connectOrCreate?: produtoCreateOrConnectWithoutEstoqueInput
    upsert?: produtoUpsertWithoutEstoqueInput
    connect?: produtoWhereUniqueInput
    update?: XOR<XOR<produtoUpdateToOneWithWhereWithoutEstoqueInput, produtoUpdateWithoutEstoqueInput>, produtoUncheckedUpdateWithoutEstoqueInput>
  }

  export type salaUpdateOneRequiredWithoutEstoquesNestedInput = {
    create?: XOR<salaCreateWithoutEstoquesInput, salaUncheckedCreateWithoutEstoquesInput>
    connectOrCreate?: salaCreateOrConnectWithoutEstoquesInput
    upsert?: salaUpsertWithoutEstoquesInput
    connect?: salaWhereUniqueInput
    update?: XOR<XOR<salaUpdateToOneWithWhereWithoutEstoquesInput, salaUpdateWithoutEstoquesInput>, salaUncheckedUpdateWithoutEstoquesInput>
  }

  export type compraCreateNestedManyWithoutFinanceiroInput = {
    create?: XOR<compraCreateWithoutFinanceiroInput, compraUncheckedCreateWithoutFinanceiroInput> | compraCreateWithoutFinanceiroInput[] | compraUncheckedCreateWithoutFinanceiroInput[]
    connectOrCreate?: compraCreateOrConnectWithoutFinanceiroInput | compraCreateOrConnectWithoutFinanceiroInput[]
    createMany?: compraCreateManyFinanceiroInputEnvelope
    connect?: compraWhereUniqueInput | compraWhereUniqueInput[]
  }

  export type historico_previsaoCreateNestedManyWithoutFinanceiroInput = {
    create?: XOR<historico_previsaoCreateWithoutFinanceiroInput, historico_previsaoUncheckedCreateWithoutFinanceiroInput> | historico_previsaoCreateWithoutFinanceiroInput[] | historico_previsaoUncheckedCreateWithoutFinanceiroInput[]
    connectOrCreate?: historico_previsaoCreateOrConnectWithoutFinanceiroInput | historico_previsaoCreateOrConnectWithoutFinanceiroInput[]
    createMany?: historico_previsaoCreateManyFinanceiroInputEnvelope
    connect?: historico_previsaoWhereUniqueInput | historico_previsaoWhereUniqueInput[]
  }

  export type compraUncheckedCreateNestedManyWithoutFinanceiroInput = {
    create?: XOR<compraCreateWithoutFinanceiroInput, compraUncheckedCreateWithoutFinanceiroInput> | compraCreateWithoutFinanceiroInput[] | compraUncheckedCreateWithoutFinanceiroInput[]
    connectOrCreate?: compraCreateOrConnectWithoutFinanceiroInput | compraCreateOrConnectWithoutFinanceiroInput[]
    createMany?: compraCreateManyFinanceiroInputEnvelope
    connect?: compraWhereUniqueInput | compraWhereUniqueInput[]
  }

  export type historico_previsaoUncheckedCreateNestedManyWithoutFinanceiroInput = {
    create?: XOR<historico_previsaoCreateWithoutFinanceiroInput, historico_previsaoUncheckedCreateWithoutFinanceiroInput> | historico_previsaoCreateWithoutFinanceiroInput[] | historico_previsaoUncheckedCreateWithoutFinanceiroInput[]
    connectOrCreate?: historico_previsaoCreateOrConnectWithoutFinanceiroInput | historico_previsaoCreateOrConnectWithoutFinanceiroInput[]
    createMany?: historico_previsaoCreateManyFinanceiroInputEnvelope
    connect?: historico_previsaoWhereUniqueInput | historico_previsaoWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type compraUpdateManyWithoutFinanceiroNestedInput = {
    create?: XOR<compraCreateWithoutFinanceiroInput, compraUncheckedCreateWithoutFinanceiroInput> | compraCreateWithoutFinanceiroInput[] | compraUncheckedCreateWithoutFinanceiroInput[]
    connectOrCreate?: compraCreateOrConnectWithoutFinanceiroInput | compraCreateOrConnectWithoutFinanceiroInput[]
    upsert?: compraUpsertWithWhereUniqueWithoutFinanceiroInput | compraUpsertWithWhereUniqueWithoutFinanceiroInput[]
    createMany?: compraCreateManyFinanceiroInputEnvelope
    set?: compraWhereUniqueInput | compraWhereUniqueInput[]
    disconnect?: compraWhereUniqueInput | compraWhereUniqueInput[]
    delete?: compraWhereUniqueInput | compraWhereUniqueInput[]
    connect?: compraWhereUniqueInput | compraWhereUniqueInput[]
    update?: compraUpdateWithWhereUniqueWithoutFinanceiroInput | compraUpdateWithWhereUniqueWithoutFinanceiroInput[]
    updateMany?: compraUpdateManyWithWhereWithoutFinanceiroInput | compraUpdateManyWithWhereWithoutFinanceiroInput[]
    deleteMany?: compraScalarWhereInput | compraScalarWhereInput[]
  }

  export type historico_previsaoUpdateManyWithoutFinanceiroNestedInput = {
    create?: XOR<historico_previsaoCreateWithoutFinanceiroInput, historico_previsaoUncheckedCreateWithoutFinanceiroInput> | historico_previsaoCreateWithoutFinanceiroInput[] | historico_previsaoUncheckedCreateWithoutFinanceiroInput[]
    connectOrCreate?: historico_previsaoCreateOrConnectWithoutFinanceiroInput | historico_previsaoCreateOrConnectWithoutFinanceiroInput[]
    upsert?: historico_previsaoUpsertWithWhereUniqueWithoutFinanceiroInput | historico_previsaoUpsertWithWhereUniqueWithoutFinanceiroInput[]
    createMany?: historico_previsaoCreateManyFinanceiroInputEnvelope
    set?: historico_previsaoWhereUniqueInput | historico_previsaoWhereUniqueInput[]
    disconnect?: historico_previsaoWhereUniqueInput | historico_previsaoWhereUniqueInput[]
    delete?: historico_previsaoWhereUniqueInput | historico_previsaoWhereUniqueInput[]
    connect?: historico_previsaoWhereUniqueInput | historico_previsaoWhereUniqueInput[]
    update?: historico_previsaoUpdateWithWhereUniqueWithoutFinanceiroInput | historico_previsaoUpdateWithWhereUniqueWithoutFinanceiroInput[]
    updateMany?: historico_previsaoUpdateManyWithWhereWithoutFinanceiroInput | historico_previsaoUpdateManyWithWhereWithoutFinanceiroInput[]
    deleteMany?: historico_previsaoScalarWhereInput | historico_previsaoScalarWhereInput[]
  }

  export type compraUncheckedUpdateManyWithoutFinanceiroNestedInput = {
    create?: XOR<compraCreateWithoutFinanceiroInput, compraUncheckedCreateWithoutFinanceiroInput> | compraCreateWithoutFinanceiroInput[] | compraUncheckedCreateWithoutFinanceiroInput[]
    connectOrCreate?: compraCreateOrConnectWithoutFinanceiroInput | compraCreateOrConnectWithoutFinanceiroInput[]
    upsert?: compraUpsertWithWhereUniqueWithoutFinanceiroInput | compraUpsertWithWhereUniqueWithoutFinanceiroInput[]
    createMany?: compraCreateManyFinanceiroInputEnvelope
    set?: compraWhereUniqueInput | compraWhereUniqueInput[]
    disconnect?: compraWhereUniqueInput | compraWhereUniqueInput[]
    delete?: compraWhereUniqueInput | compraWhereUniqueInput[]
    connect?: compraWhereUniqueInput | compraWhereUniqueInput[]
    update?: compraUpdateWithWhereUniqueWithoutFinanceiroInput | compraUpdateWithWhereUniqueWithoutFinanceiroInput[]
    updateMany?: compraUpdateManyWithWhereWithoutFinanceiroInput | compraUpdateManyWithWhereWithoutFinanceiroInput[]
    deleteMany?: compraScalarWhereInput | compraScalarWhereInput[]
  }

  export type historico_previsaoUncheckedUpdateManyWithoutFinanceiroNestedInput = {
    create?: XOR<historico_previsaoCreateWithoutFinanceiroInput, historico_previsaoUncheckedCreateWithoutFinanceiroInput> | historico_previsaoCreateWithoutFinanceiroInput[] | historico_previsaoUncheckedCreateWithoutFinanceiroInput[]
    connectOrCreate?: historico_previsaoCreateOrConnectWithoutFinanceiroInput | historico_previsaoCreateOrConnectWithoutFinanceiroInput[]
    upsert?: historico_previsaoUpsertWithWhereUniqueWithoutFinanceiroInput | historico_previsaoUpsertWithWhereUniqueWithoutFinanceiroInput[]
    createMany?: historico_previsaoCreateManyFinanceiroInputEnvelope
    set?: historico_previsaoWhereUniqueInput | historico_previsaoWhereUniqueInput[]
    disconnect?: historico_previsaoWhereUniqueInput | historico_previsaoWhereUniqueInput[]
    delete?: historico_previsaoWhereUniqueInput | historico_previsaoWhereUniqueInput[]
    connect?: historico_previsaoWhereUniqueInput | historico_previsaoWhereUniqueInput[]
    update?: historico_previsaoUpdateWithWhereUniqueWithoutFinanceiroInput | historico_previsaoUpdateWithWhereUniqueWithoutFinanceiroInput[]
    updateMany?: historico_previsaoUpdateManyWithWhereWithoutFinanceiroInput | historico_previsaoUpdateManyWithWhereWithoutFinanceiroInput[]
    deleteMany?: historico_previsaoScalarWhereInput | historico_previsaoScalarWhereInput[]
  }

  export type produtoCreateNestedOneWithoutComprasInput = {
    create?: XOR<produtoCreateWithoutComprasInput, produtoUncheckedCreateWithoutComprasInput>
    connectOrCreate?: produtoCreateOrConnectWithoutComprasInput
    connect?: produtoWhereUniqueInput
  }

  export type fornecedorCreateNestedOneWithoutComprasInput = {
    create?: XOR<fornecedorCreateWithoutComprasInput, fornecedorUncheckedCreateWithoutComprasInput>
    connectOrCreate?: fornecedorCreateOrConnectWithoutComprasInput
    connect?: fornecedorWhereUniqueInput
  }

  export type financeiroCreateNestedOneWithoutComprasInput = {
    create?: XOR<financeiroCreateWithoutComprasInput, financeiroUncheckedCreateWithoutComprasInput>
    connectOrCreate?: financeiroCreateOrConnectWithoutComprasInput
    connect?: financeiroWhereUniqueInput
  }

  export type usuarioCreateNestedOneWithoutComprasInput = {
    create?: XOR<usuarioCreateWithoutComprasInput, usuarioUncheckedCreateWithoutComprasInput>
    connectOrCreate?: usuarioCreateOrConnectWithoutComprasInput
    connect?: usuarioWhereUniqueInput
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type produtoUpdateOneRequiredWithoutComprasNestedInput = {
    create?: XOR<produtoCreateWithoutComprasInput, produtoUncheckedCreateWithoutComprasInput>
    connectOrCreate?: produtoCreateOrConnectWithoutComprasInput
    upsert?: produtoUpsertWithoutComprasInput
    connect?: produtoWhereUniqueInput
    update?: XOR<XOR<produtoUpdateToOneWithWhereWithoutComprasInput, produtoUpdateWithoutComprasInput>, produtoUncheckedUpdateWithoutComprasInput>
  }

  export type fornecedorUpdateOneRequiredWithoutComprasNestedInput = {
    create?: XOR<fornecedorCreateWithoutComprasInput, fornecedorUncheckedCreateWithoutComprasInput>
    connectOrCreate?: fornecedorCreateOrConnectWithoutComprasInput
    upsert?: fornecedorUpsertWithoutComprasInput
    connect?: fornecedorWhereUniqueInput
    update?: XOR<XOR<fornecedorUpdateToOneWithWhereWithoutComprasInput, fornecedorUpdateWithoutComprasInput>, fornecedorUncheckedUpdateWithoutComprasInput>
  }

  export type financeiroUpdateOneRequiredWithoutComprasNestedInput = {
    create?: XOR<financeiroCreateWithoutComprasInput, financeiroUncheckedCreateWithoutComprasInput>
    connectOrCreate?: financeiroCreateOrConnectWithoutComprasInput
    upsert?: financeiroUpsertWithoutComprasInput
    connect?: financeiroWhereUniqueInput
    update?: XOR<XOR<financeiroUpdateToOneWithWhereWithoutComprasInput, financeiroUpdateWithoutComprasInput>, financeiroUncheckedUpdateWithoutComprasInput>
  }

  export type usuarioUpdateOneRequiredWithoutComprasNestedInput = {
    create?: XOR<usuarioCreateWithoutComprasInput, usuarioUncheckedCreateWithoutComprasInput>
    connectOrCreate?: usuarioCreateOrConnectWithoutComprasInput
    upsert?: usuarioUpsertWithoutComprasInput
    connect?: usuarioWhereUniqueInput
    update?: XOR<XOR<usuarioUpdateToOneWithWhereWithoutComprasInput, usuarioUpdateWithoutComprasInput>, usuarioUncheckedUpdateWithoutComprasInput>
  }

  export type estoqueCreateNestedManyWithoutSalaInput = {
    create?: XOR<estoqueCreateWithoutSalaInput, estoqueUncheckedCreateWithoutSalaInput> | estoqueCreateWithoutSalaInput[] | estoqueUncheckedCreateWithoutSalaInput[]
    connectOrCreate?: estoqueCreateOrConnectWithoutSalaInput | estoqueCreateOrConnectWithoutSalaInput[]
    createMany?: estoqueCreateManySalaInputEnvelope
    connect?: estoqueWhereUniqueInput | estoqueWhereUniqueInput[]
  }

  export type estoqueUncheckedCreateNestedManyWithoutSalaInput = {
    create?: XOR<estoqueCreateWithoutSalaInput, estoqueUncheckedCreateWithoutSalaInput> | estoqueCreateWithoutSalaInput[] | estoqueUncheckedCreateWithoutSalaInput[]
    connectOrCreate?: estoqueCreateOrConnectWithoutSalaInput | estoqueCreateOrConnectWithoutSalaInput[]
    createMany?: estoqueCreateManySalaInputEnvelope
    connect?: estoqueWhereUniqueInput | estoqueWhereUniqueInput[]
  }

  export type estoqueUpdateManyWithoutSalaNestedInput = {
    create?: XOR<estoqueCreateWithoutSalaInput, estoqueUncheckedCreateWithoutSalaInput> | estoqueCreateWithoutSalaInput[] | estoqueUncheckedCreateWithoutSalaInput[]
    connectOrCreate?: estoqueCreateOrConnectWithoutSalaInput | estoqueCreateOrConnectWithoutSalaInput[]
    upsert?: estoqueUpsertWithWhereUniqueWithoutSalaInput | estoqueUpsertWithWhereUniqueWithoutSalaInput[]
    createMany?: estoqueCreateManySalaInputEnvelope
    set?: estoqueWhereUniqueInput | estoqueWhereUniqueInput[]
    disconnect?: estoqueWhereUniqueInput | estoqueWhereUniqueInput[]
    delete?: estoqueWhereUniqueInput | estoqueWhereUniqueInput[]
    connect?: estoqueWhereUniqueInput | estoqueWhereUniqueInput[]
    update?: estoqueUpdateWithWhereUniqueWithoutSalaInput | estoqueUpdateWithWhereUniqueWithoutSalaInput[]
    updateMany?: estoqueUpdateManyWithWhereWithoutSalaInput | estoqueUpdateManyWithWhereWithoutSalaInput[]
    deleteMany?: estoqueScalarWhereInput | estoqueScalarWhereInput[]
  }

  export type estoqueUncheckedUpdateManyWithoutSalaNestedInput = {
    create?: XOR<estoqueCreateWithoutSalaInput, estoqueUncheckedCreateWithoutSalaInput> | estoqueCreateWithoutSalaInput[] | estoqueUncheckedCreateWithoutSalaInput[]
    connectOrCreate?: estoqueCreateOrConnectWithoutSalaInput | estoqueCreateOrConnectWithoutSalaInput[]
    upsert?: estoqueUpsertWithWhereUniqueWithoutSalaInput | estoqueUpsertWithWhereUniqueWithoutSalaInput[]
    createMany?: estoqueCreateManySalaInputEnvelope
    set?: estoqueWhereUniqueInput | estoqueWhereUniqueInput[]
    disconnect?: estoqueWhereUniqueInput | estoqueWhereUniqueInput[]
    delete?: estoqueWhereUniqueInput | estoqueWhereUniqueInput[]
    connect?: estoqueWhereUniqueInput | estoqueWhereUniqueInput[]
    update?: estoqueUpdateWithWhereUniqueWithoutSalaInput | estoqueUpdateWithWhereUniqueWithoutSalaInput[]
    updateMany?: estoqueUpdateManyWithWhereWithoutSalaInput | estoqueUpdateManyWithWhereWithoutSalaInput[]
    deleteMany?: estoqueScalarWhereInput | estoqueScalarWhereInput[]
  }

  export type produtoCreateNestedOneWithoutMovimentacoesInput = {
    create?: XOR<produtoCreateWithoutMovimentacoesInput, produtoUncheckedCreateWithoutMovimentacoesInput>
    connectOrCreate?: produtoCreateOrConnectWithoutMovimentacoesInput
    connect?: produtoWhereUniqueInput
  }

  export type usuarioCreateNestedOneWithoutMovimentacoesInput = {
    create?: XOR<usuarioCreateWithoutMovimentacoesInput, usuarioUncheckedCreateWithoutMovimentacoesInput>
    connectOrCreate?: usuarioCreateOrConnectWithoutMovimentacoesInput
    connect?: usuarioWhereUniqueInput
  }

  export type produtoUpdateOneRequiredWithoutMovimentacoesNestedInput = {
    create?: XOR<produtoCreateWithoutMovimentacoesInput, produtoUncheckedCreateWithoutMovimentacoesInput>
    connectOrCreate?: produtoCreateOrConnectWithoutMovimentacoesInput
    upsert?: produtoUpsertWithoutMovimentacoesInput
    connect?: produtoWhereUniqueInput
    update?: XOR<XOR<produtoUpdateToOneWithWhereWithoutMovimentacoesInput, produtoUpdateWithoutMovimentacoesInput>, produtoUncheckedUpdateWithoutMovimentacoesInput>
  }

  export type usuarioUpdateOneRequiredWithoutMovimentacoesNestedInput = {
    create?: XOR<usuarioCreateWithoutMovimentacoesInput, usuarioUncheckedCreateWithoutMovimentacoesInput>
    connectOrCreate?: usuarioCreateOrConnectWithoutMovimentacoesInput
    upsert?: usuarioUpsertWithoutMovimentacoesInput
    connect?: usuarioWhereUniqueInput
    update?: XOR<XOR<usuarioUpdateToOneWithWhereWithoutMovimentacoesInput, usuarioUpdateWithoutMovimentacoesInput>, usuarioUncheckedUpdateWithoutMovimentacoesInput>
  }

  export type produtoCreateNestedOneWithoutAlertasInput = {
    create?: XOR<produtoCreateWithoutAlertasInput, produtoUncheckedCreateWithoutAlertasInput>
    connectOrCreate?: produtoCreateOrConnectWithoutAlertasInput
    connect?: produtoWhereUniqueInput
  }

  export type produtoUpdateOneRequiredWithoutAlertasNestedInput = {
    create?: XOR<produtoCreateWithoutAlertasInput, produtoUncheckedCreateWithoutAlertasInput>
    connectOrCreate?: produtoCreateOrConnectWithoutAlertasInput
    upsert?: produtoUpsertWithoutAlertasInput
    connect?: produtoWhereUniqueInput
    update?: XOR<XOR<produtoUpdateToOneWithWhereWithoutAlertasInput, produtoUpdateWithoutAlertasInput>, produtoUncheckedUpdateWithoutAlertasInput>
  }

  export type produtoCreateNestedOneWithoutPrevisoesInput = {
    create?: XOR<produtoCreateWithoutPrevisoesInput, produtoUncheckedCreateWithoutPrevisoesInput>
    connectOrCreate?: produtoCreateOrConnectWithoutPrevisoesInput
    connect?: produtoWhereUniqueInput
  }

  export type historico_previsaoCreateNestedManyWithoutPrevisaoInput = {
    create?: XOR<historico_previsaoCreateWithoutPrevisaoInput, historico_previsaoUncheckedCreateWithoutPrevisaoInput> | historico_previsaoCreateWithoutPrevisaoInput[] | historico_previsaoUncheckedCreateWithoutPrevisaoInput[]
    connectOrCreate?: historico_previsaoCreateOrConnectWithoutPrevisaoInput | historico_previsaoCreateOrConnectWithoutPrevisaoInput[]
    createMany?: historico_previsaoCreateManyPrevisaoInputEnvelope
    connect?: historico_previsaoWhereUniqueInput | historico_previsaoWhereUniqueInput[]
  }

  export type historico_previsaoUncheckedCreateNestedManyWithoutPrevisaoInput = {
    create?: XOR<historico_previsaoCreateWithoutPrevisaoInput, historico_previsaoUncheckedCreateWithoutPrevisaoInput> | historico_previsaoCreateWithoutPrevisaoInput[] | historico_previsaoUncheckedCreateWithoutPrevisaoInput[]
    connectOrCreate?: historico_previsaoCreateOrConnectWithoutPrevisaoInput | historico_previsaoCreateOrConnectWithoutPrevisaoInput[]
    createMany?: historico_previsaoCreateManyPrevisaoInputEnvelope
    connect?: historico_previsaoWhereUniqueInput | historico_previsaoWhereUniqueInput[]
  }

  export type produtoUpdateOneRequiredWithoutPrevisoesNestedInput = {
    create?: XOR<produtoCreateWithoutPrevisoesInput, produtoUncheckedCreateWithoutPrevisoesInput>
    connectOrCreate?: produtoCreateOrConnectWithoutPrevisoesInput
    upsert?: produtoUpsertWithoutPrevisoesInput
    connect?: produtoWhereUniqueInput
    update?: XOR<XOR<produtoUpdateToOneWithWhereWithoutPrevisoesInput, produtoUpdateWithoutPrevisoesInput>, produtoUncheckedUpdateWithoutPrevisoesInput>
  }

  export type historico_previsaoUpdateManyWithoutPrevisaoNestedInput = {
    create?: XOR<historico_previsaoCreateWithoutPrevisaoInput, historico_previsaoUncheckedCreateWithoutPrevisaoInput> | historico_previsaoCreateWithoutPrevisaoInput[] | historico_previsaoUncheckedCreateWithoutPrevisaoInput[]
    connectOrCreate?: historico_previsaoCreateOrConnectWithoutPrevisaoInput | historico_previsaoCreateOrConnectWithoutPrevisaoInput[]
    upsert?: historico_previsaoUpsertWithWhereUniqueWithoutPrevisaoInput | historico_previsaoUpsertWithWhereUniqueWithoutPrevisaoInput[]
    createMany?: historico_previsaoCreateManyPrevisaoInputEnvelope
    set?: historico_previsaoWhereUniqueInput | historico_previsaoWhereUniqueInput[]
    disconnect?: historico_previsaoWhereUniqueInput | historico_previsaoWhereUniqueInput[]
    delete?: historico_previsaoWhereUniqueInput | historico_previsaoWhereUniqueInput[]
    connect?: historico_previsaoWhereUniqueInput | historico_previsaoWhereUniqueInput[]
    update?: historico_previsaoUpdateWithWhereUniqueWithoutPrevisaoInput | historico_previsaoUpdateWithWhereUniqueWithoutPrevisaoInput[]
    updateMany?: historico_previsaoUpdateManyWithWhereWithoutPrevisaoInput | historico_previsaoUpdateManyWithWhereWithoutPrevisaoInput[]
    deleteMany?: historico_previsaoScalarWhereInput | historico_previsaoScalarWhereInput[]
  }

  export type historico_previsaoUncheckedUpdateManyWithoutPrevisaoNestedInput = {
    create?: XOR<historico_previsaoCreateWithoutPrevisaoInput, historico_previsaoUncheckedCreateWithoutPrevisaoInput> | historico_previsaoCreateWithoutPrevisaoInput[] | historico_previsaoUncheckedCreateWithoutPrevisaoInput[]
    connectOrCreate?: historico_previsaoCreateOrConnectWithoutPrevisaoInput | historico_previsaoCreateOrConnectWithoutPrevisaoInput[]
    upsert?: historico_previsaoUpsertWithWhereUniqueWithoutPrevisaoInput | historico_previsaoUpsertWithWhereUniqueWithoutPrevisaoInput[]
    createMany?: historico_previsaoCreateManyPrevisaoInputEnvelope
    set?: historico_previsaoWhereUniqueInput | historico_previsaoWhereUniqueInput[]
    disconnect?: historico_previsaoWhereUniqueInput | historico_previsaoWhereUniqueInput[]
    delete?: historico_previsaoWhereUniqueInput | historico_previsaoWhereUniqueInput[]
    connect?: historico_previsaoWhereUniqueInput | historico_previsaoWhereUniqueInput[]
    update?: historico_previsaoUpdateWithWhereUniqueWithoutPrevisaoInput | historico_previsaoUpdateWithWhereUniqueWithoutPrevisaoInput[]
    updateMany?: historico_previsaoUpdateManyWithWhereWithoutPrevisaoInput | historico_previsaoUpdateManyWithWhereWithoutPrevisaoInput[]
    deleteMany?: historico_previsaoScalarWhereInput | historico_previsaoScalarWhereInput[]
  }

  export type compraCreateNestedManyWithoutFornecedorInput = {
    create?: XOR<compraCreateWithoutFornecedorInput, compraUncheckedCreateWithoutFornecedorInput> | compraCreateWithoutFornecedorInput[] | compraUncheckedCreateWithoutFornecedorInput[]
    connectOrCreate?: compraCreateOrConnectWithoutFornecedorInput | compraCreateOrConnectWithoutFornecedorInput[]
    createMany?: compraCreateManyFornecedorInputEnvelope
    connect?: compraWhereUniqueInput | compraWhereUniqueInput[]
  }

  export type produtoCreateNestedManyWithoutFornecedorInput = {
    create?: XOR<produtoCreateWithoutFornecedorInput, produtoUncheckedCreateWithoutFornecedorInput> | produtoCreateWithoutFornecedorInput[] | produtoUncheckedCreateWithoutFornecedorInput[]
    connectOrCreate?: produtoCreateOrConnectWithoutFornecedorInput | produtoCreateOrConnectWithoutFornecedorInput[]
    createMany?: produtoCreateManyFornecedorInputEnvelope
    connect?: produtoWhereUniqueInput | produtoWhereUniqueInput[]
  }

  export type compraUncheckedCreateNestedManyWithoutFornecedorInput = {
    create?: XOR<compraCreateWithoutFornecedorInput, compraUncheckedCreateWithoutFornecedorInput> | compraCreateWithoutFornecedorInput[] | compraUncheckedCreateWithoutFornecedorInput[]
    connectOrCreate?: compraCreateOrConnectWithoutFornecedorInput | compraCreateOrConnectWithoutFornecedorInput[]
    createMany?: compraCreateManyFornecedorInputEnvelope
    connect?: compraWhereUniqueInput | compraWhereUniqueInput[]
  }

  export type produtoUncheckedCreateNestedManyWithoutFornecedorInput = {
    create?: XOR<produtoCreateWithoutFornecedorInput, produtoUncheckedCreateWithoutFornecedorInput> | produtoCreateWithoutFornecedorInput[] | produtoUncheckedCreateWithoutFornecedorInput[]
    connectOrCreate?: produtoCreateOrConnectWithoutFornecedorInput | produtoCreateOrConnectWithoutFornecedorInput[]
    createMany?: produtoCreateManyFornecedorInputEnvelope
    connect?: produtoWhereUniqueInput | produtoWhereUniqueInput[]
  }

  export type compraUpdateManyWithoutFornecedorNestedInput = {
    create?: XOR<compraCreateWithoutFornecedorInput, compraUncheckedCreateWithoutFornecedorInput> | compraCreateWithoutFornecedorInput[] | compraUncheckedCreateWithoutFornecedorInput[]
    connectOrCreate?: compraCreateOrConnectWithoutFornecedorInput | compraCreateOrConnectWithoutFornecedorInput[]
    upsert?: compraUpsertWithWhereUniqueWithoutFornecedorInput | compraUpsertWithWhereUniqueWithoutFornecedorInput[]
    createMany?: compraCreateManyFornecedorInputEnvelope
    set?: compraWhereUniqueInput | compraWhereUniqueInput[]
    disconnect?: compraWhereUniqueInput | compraWhereUniqueInput[]
    delete?: compraWhereUniqueInput | compraWhereUniqueInput[]
    connect?: compraWhereUniqueInput | compraWhereUniqueInput[]
    update?: compraUpdateWithWhereUniqueWithoutFornecedorInput | compraUpdateWithWhereUniqueWithoutFornecedorInput[]
    updateMany?: compraUpdateManyWithWhereWithoutFornecedorInput | compraUpdateManyWithWhereWithoutFornecedorInput[]
    deleteMany?: compraScalarWhereInput | compraScalarWhereInput[]
  }

  export type produtoUpdateManyWithoutFornecedorNestedInput = {
    create?: XOR<produtoCreateWithoutFornecedorInput, produtoUncheckedCreateWithoutFornecedorInput> | produtoCreateWithoutFornecedorInput[] | produtoUncheckedCreateWithoutFornecedorInput[]
    connectOrCreate?: produtoCreateOrConnectWithoutFornecedorInput | produtoCreateOrConnectWithoutFornecedorInput[]
    upsert?: produtoUpsertWithWhereUniqueWithoutFornecedorInput | produtoUpsertWithWhereUniqueWithoutFornecedorInput[]
    createMany?: produtoCreateManyFornecedorInputEnvelope
    set?: produtoWhereUniqueInput | produtoWhereUniqueInput[]
    disconnect?: produtoWhereUniqueInput | produtoWhereUniqueInput[]
    delete?: produtoWhereUniqueInput | produtoWhereUniqueInput[]
    connect?: produtoWhereUniqueInput | produtoWhereUniqueInput[]
    update?: produtoUpdateWithWhereUniqueWithoutFornecedorInput | produtoUpdateWithWhereUniqueWithoutFornecedorInput[]
    updateMany?: produtoUpdateManyWithWhereWithoutFornecedorInput | produtoUpdateManyWithWhereWithoutFornecedorInput[]
    deleteMany?: produtoScalarWhereInput | produtoScalarWhereInput[]
  }

  export type compraUncheckedUpdateManyWithoutFornecedorNestedInput = {
    create?: XOR<compraCreateWithoutFornecedorInput, compraUncheckedCreateWithoutFornecedorInput> | compraCreateWithoutFornecedorInput[] | compraUncheckedCreateWithoutFornecedorInput[]
    connectOrCreate?: compraCreateOrConnectWithoutFornecedorInput | compraCreateOrConnectWithoutFornecedorInput[]
    upsert?: compraUpsertWithWhereUniqueWithoutFornecedorInput | compraUpsertWithWhereUniqueWithoutFornecedorInput[]
    createMany?: compraCreateManyFornecedorInputEnvelope
    set?: compraWhereUniqueInput | compraWhereUniqueInput[]
    disconnect?: compraWhereUniqueInput | compraWhereUniqueInput[]
    delete?: compraWhereUniqueInput | compraWhereUniqueInput[]
    connect?: compraWhereUniqueInput | compraWhereUniqueInput[]
    update?: compraUpdateWithWhereUniqueWithoutFornecedorInput | compraUpdateWithWhereUniqueWithoutFornecedorInput[]
    updateMany?: compraUpdateManyWithWhereWithoutFornecedorInput | compraUpdateManyWithWhereWithoutFornecedorInput[]
    deleteMany?: compraScalarWhereInput | compraScalarWhereInput[]
  }

  export type produtoUncheckedUpdateManyWithoutFornecedorNestedInput = {
    create?: XOR<produtoCreateWithoutFornecedorInput, produtoUncheckedCreateWithoutFornecedorInput> | produtoCreateWithoutFornecedorInput[] | produtoUncheckedCreateWithoutFornecedorInput[]
    connectOrCreate?: produtoCreateOrConnectWithoutFornecedorInput | produtoCreateOrConnectWithoutFornecedorInput[]
    upsert?: produtoUpsertWithWhereUniqueWithoutFornecedorInput | produtoUpsertWithWhereUniqueWithoutFornecedorInput[]
    createMany?: produtoCreateManyFornecedorInputEnvelope
    set?: produtoWhereUniqueInput | produtoWhereUniqueInput[]
    disconnect?: produtoWhereUniqueInput | produtoWhereUniqueInput[]
    delete?: produtoWhereUniqueInput | produtoWhereUniqueInput[]
    connect?: produtoWhereUniqueInput | produtoWhereUniqueInput[]
    update?: produtoUpdateWithWhereUniqueWithoutFornecedorInput | produtoUpdateWithWhereUniqueWithoutFornecedorInput[]
    updateMany?: produtoUpdateManyWithWhereWithoutFornecedorInput | produtoUpdateManyWithWhereWithoutFornecedorInput[]
    deleteMany?: produtoScalarWhereInput | produtoScalarWhereInput[]
  }

  export type produtoCreateNestedOneWithoutHistoricosInput = {
    create?: XOR<produtoCreateWithoutHistoricosInput, produtoUncheckedCreateWithoutHistoricosInput>
    connectOrCreate?: produtoCreateOrConnectWithoutHistoricosInput
    connect?: produtoWhereUniqueInput
  }

  export type previsao_demandaCreateNestedOneWithoutHistoricosInput = {
    create?: XOR<previsao_demandaCreateWithoutHistoricosInput, previsao_demandaUncheckedCreateWithoutHistoricosInput>
    connectOrCreate?: previsao_demandaCreateOrConnectWithoutHistoricosInput
    connect?: previsao_demandaWhereUniqueInput
  }

  export type financeiroCreateNestedOneWithoutHistoricosInput = {
    create?: XOR<financeiroCreateWithoutHistoricosInput, financeiroUncheckedCreateWithoutHistoricosInput>
    connectOrCreate?: financeiroCreateOrConnectWithoutHistoricosInput
    connect?: financeiroWhereUniqueInput
  }

  export type produtoUpdateOneRequiredWithoutHistoricosNestedInput = {
    create?: XOR<produtoCreateWithoutHistoricosInput, produtoUncheckedCreateWithoutHistoricosInput>
    connectOrCreate?: produtoCreateOrConnectWithoutHistoricosInput
    upsert?: produtoUpsertWithoutHistoricosInput
    connect?: produtoWhereUniqueInput
    update?: XOR<XOR<produtoUpdateToOneWithWhereWithoutHistoricosInput, produtoUpdateWithoutHistoricosInput>, produtoUncheckedUpdateWithoutHistoricosInput>
  }

  export type previsao_demandaUpdateOneRequiredWithoutHistoricosNestedInput = {
    create?: XOR<previsao_demandaCreateWithoutHistoricosInput, previsao_demandaUncheckedCreateWithoutHistoricosInput>
    connectOrCreate?: previsao_demandaCreateOrConnectWithoutHistoricosInput
    upsert?: previsao_demandaUpsertWithoutHistoricosInput
    connect?: previsao_demandaWhereUniqueInput
    update?: XOR<XOR<previsao_demandaUpdateToOneWithWhereWithoutHistoricosInput, previsao_demandaUpdateWithoutHistoricosInput>, previsao_demandaUncheckedUpdateWithoutHistoricosInput>
  }

  export type financeiroUpdateOneWithoutHistoricosNestedInput = {
    create?: XOR<financeiroCreateWithoutHistoricosInput, financeiroUncheckedCreateWithoutHistoricosInput>
    connectOrCreate?: financeiroCreateOrConnectWithoutHistoricosInput
    upsert?: financeiroUpsertWithoutHistoricosInput
    disconnect?: financeiroWhereInput | boolean
    delete?: financeiroWhereInput | boolean
    connect?: financeiroWhereUniqueInput
    update?: XOR<XOR<financeiroUpdateToOneWithWhereWithoutHistoricosInput, financeiroUpdateWithoutHistoricosInput>, financeiroUncheckedUpdateWithoutHistoricosInput>
  }

  export type usuarioCreateNestedOneWithoutRelatoriosInput = {
    create?: XOR<usuarioCreateWithoutRelatoriosInput, usuarioUncheckedCreateWithoutRelatoriosInput>
    connectOrCreate?: usuarioCreateOrConnectWithoutRelatoriosInput
    connect?: usuarioWhereUniqueInput
  }

  export type usuarioUpdateOneRequiredWithoutRelatoriosNestedInput = {
    create?: XOR<usuarioCreateWithoutRelatoriosInput, usuarioUncheckedCreateWithoutRelatoriosInput>
    connectOrCreate?: usuarioCreateOrConnectWithoutRelatoriosInput
    upsert?: usuarioUpsertWithoutRelatoriosInput
    connect?: usuarioWhereUniqueInput
    update?: XOR<XOR<usuarioUpdateToOneWithWhereWithoutRelatoriosInput, usuarioUpdateWithoutRelatoriosInput>, usuarioUncheckedUpdateWithoutRelatoriosInput>
  }

  export type produtoCreateNestedOneWithoutGarantiasInput = {
    create?: XOR<produtoCreateWithoutGarantiasInput, produtoUncheckedCreateWithoutGarantiasInput>
    connectOrCreate?: produtoCreateOrConnectWithoutGarantiasInput
    connect?: produtoWhereUniqueInput
  }

  export type usuarioCreateNestedOneWithoutGarantiasInput = {
    create?: XOR<usuarioCreateWithoutGarantiasInput, usuarioUncheckedCreateWithoutGarantiasInput>
    connectOrCreate?: usuarioCreateOrConnectWithoutGarantiasInput
    connect?: usuarioWhereUniqueInput
  }

  export type produtoUpdateOneRequiredWithoutGarantiasNestedInput = {
    create?: XOR<produtoCreateWithoutGarantiasInput, produtoUncheckedCreateWithoutGarantiasInput>
    connectOrCreate?: produtoCreateOrConnectWithoutGarantiasInput
    upsert?: produtoUpsertWithoutGarantiasInput
    connect?: produtoWhereUniqueInput
    update?: XOR<XOR<produtoUpdateToOneWithWhereWithoutGarantiasInput, produtoUpdateWithoutGarantiasInput>, produtoUncheckedUpdateWithoutGarantiasInput>
  }

  export type usuarioUpdateOneRequiredWithoutGarantiasNestedInput = {
    create?: XOR<usuarioCreateWithoutGarantiasInput, usuarioUncheckedCreateWithoutGarantiasInput>
    connectOrCreate?: usuarioCreateOrConnectWithoutGarantiasInput
    upsert?: usuarioUpsertWithoutGarantiasInput
    connect?: usuarioWhereUniqueInput
    update?: XOR<XOR<usuarioUpdateToOneWithWhereWithoutGarantiasInput, usuarioUpdateWithoutGarantiasInput>, usuarioUncheckedUpdateWithoutGarantiasInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type tipo_usuarioCreateWithoutUsuariosInput = {
    descricao: string
  }

  export type tipo_usuarioUncheckedCreateWithoutUsuariosInput = {
    id_tipo_usuario?: number
    descricao: string
  }

  export type tipo_usuarioCreateOrConnectWithoutUsuariosInput = {
    where: tipo_usuarioWhereUniqueInput
    create: XOR<tipo_usuarioCreateWithoutUsuariosInput, tipo_usuarioUncheckedCreateWithoutUsuariosInput>
  }

  export type compraCreateWithoutUsuarioInput = {
    data_pedido: Date | string
    data_recebimento?: Date | string | null
    valor_total: number
    origem?: string | null
    observacoes?: string | null
    produto: produtoCreateNestedOneWithoutComprasInput
    fornecedor: fornecedorCreateNestedOneWithoutComprasInput
    financeiro: financeiroCreateNestedOneWithoutComprasInput
  }

  export type compraUncheckedCreateWithoutUsuarioInput = {
    id_compra?: number
    id_produto: number
    id_fornecedor: number
    id_financeiro: number
    data_pedido: Date | string
    data_recebimento?: Date | string | null
    valor_total: number
    origem?: string | null
    observacoes?: string | null
  }

  export type compraCreateOrConnectWithoutUsuarioInput = {
    where: compraWhereUniqueInput
    create: XOR<compraCreateWithoutUsuarioInput, compraUncheckedCreateWithoutUsuarioInput>
  }

  export type compraCreateManyUsuarioInputEnvelope = {
    data: compraCreateManyUsuarioInput | compraCreateManyUsuarioInput[]
  }

  export type movimentacaoCreateWithoutUsuarioInput = {
    tipo_movimentacao: string
    origem?: string | null
    data_movimento: Date | string
    status?: string | null
    observacao?: string | null
    produto: produtoCreateNestedOneWithoutMovimentacoesInput
  }

  export type movimentacaoUncheckedCreateWithoutUsuarioInput = {
    id_movimentacao?: number
    id_produto: number
    tipo_movimentacao: string
    origem?: string | null
    data_movimento: Date | string
    status?: string | null
    observacao?: string | null
  }

  export type movimentacaoCreateOrConnectWithoutUsuarioInput = {
    where: movimentacaoWhereUniqueInput
    create: XOR<movimentacaoCreateWithoutUsuarioInput, movimentacaoUncheckedCreateWithoutUsuarioInput>
  }

  export type movimentacaoCreateManyUsuarioInputEnvelope = {
    data: movimentacaoCreateManyUsuarioInput | movimentacaoCreateManyUsuarioInput[]
  }

  export type relatorioCreateWithoutUsuarioInput = {
    tipo_relatorio: string
    caminho_arquivo: string
    gerado_por: string
    gerado_em: Date | string
    status?: string | null
  }

  export type relatorioUncheckedCreateWithoutUsuarioInput = {
    id_relatorio?: number
    tipo_relatorio: string
    caminho_arquivo: string
    gerado_por: string
    gerado_em: Date | string
    status?: string | null
  }

  export type relatorioCreateOrConnectWithoutUsuarioInput = {
    where: relatorioWhereUniqueInput
    create: XOR<relatorioCreateWithoutUsuarioInput, relatorioUncheckedCreateWithoutUsuarioInput>
  }

  export type relatorioCreateManyUsuarioInputEnvelope = {
    data: relatorioCreateManyUsuarioInput | relatorioCreateManyUsuarioInput[]
  }

  export type garantiaCreateWithoutUsuarioInput = {
    data_inicio: Date | string
    data_fim: Date | string
    descricao?: string | null
    status?: string
    produto: produtoCreateNestedOneWithoutGarantiasInput
  }

  export type garantiaUncheckedCreateWithoutUsuarioInput = {
    id_garantia?: number
    id_produto: number
    data_inicio: Date | string
    data_fim: Date | string
    descricao?: string | null
    status?: string
  }

  export type garantiaCreateOrConnectWithoutUsuarioInput = {
    where: garantiaWhereUniqueInput
    create: XOR<garantiaCreateWithoutUsuarioInput, garantiaUncheckedCreateWithoutUsuarioInput>
  }

  export type garantiaCreateManyUsuarioInputEnvelope = {
    data: garantiaCreateManyUsuarioInput | garantiaCreateManyUsuarioInput[]
  }

  export type tipo_usuarioUpsertWithoutUsuariosInput = {
    update: XOR<tipo_usuarioUpdateWithoutUsuariosInput, tipo_usuarioUncheckedUpdateWithoutUsuariosInput>
    create: XOR<tipo_usuarioCreateWithoutUsuariosInput, tipo_usuarioUncheckedCreateWithoutUsuariosInput>
    where?: tipo_usuarioWhereInput
  }

  export type tipo_usuarioUpdateToOneWithWhereWithoutUsuariosInput = {
    where?: tipo_usuarioWhereInput
    data: XOR<tipo_usuarioUpdateWithoutUsuariosInput, tipo_usuarioUncheckedUpdateWithoutUsuariosInput>
  }

  export type tipo_usuarioUpdateWithoutUsuariosInput = {
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type tipo_usuarioUncheckedUpdateWithoutUsuariosInput = {
    id_tipo_usuario?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type compraUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: compraWhereUniqueInput
    update: XOR<compraUpdateWithoutUsuarioInput, compraUncheckedUpdateWithoutUsuarioInput>
    create: XOR<compraCreateWithoutUsuarioInput, compraUncheckedCreateWithoutUsuarioInput>
  }

  export type compraUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: compraWhereUniqueInput
    data: XOR<compraUpdateWithoutUsuarioInput, compraUncheckedUpdateWithoutUsuarioInput>
  }

  export type compraUpdateManyWithWhereWithoutUsuarioInput = {
    where: compraScalarWhereInput
    data: XOR<compraUpdateManyMutationInput, compraUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type compraScalarWhereInput = {
    AND?: compraScalarWhereInput | compraScalarWhereInput[]
    OR?: compraScalarWhereInput[]
    NOT?: compraScalarWhereInput | compraScalarWhereInput[]
    id_compra?: IntFilter<"compra"> | number
    id_produto?: IntFilter<"compra"> | number
    id_fornecedor?: IntFilter<"compra"> | number
    id_financeiro?: IntFilter<"compra"> | number
    id_usuario?: IntFilter<"compra"> | number
    data_pedido?: DateTimeFilter<"compra"> | Date | string
    data_recebimento?: DateTimeNullableFilter<"compra"> | Date | string | null
    valor_total?: FloatFilter<"compra"> | number
    origem?: StringNullableFilter<"compra"> | string | null
    observacoes?: StringNullableFilter<"compra"> | string | null
  }

  export type movimentacaoUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: movimentacaoWhereUniqueInput
    update: XOR<movimentacaoUpdateWithoutUsuarioInput, movimentacaoUncheckedUpdateWithoutUsuarioInput>
    create: XOR<movimentacaoCreateWithoutUsuarioInput, movimentacaoUncheckedCreateWithoutUsuarioInput>
  }

  export type movimentacaoUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: movimentacaoWhereUniqueInput
    data: XOR<movimentacaoUpdateWithoutUsuarioInput, movimentacaoUncheckedUpdateWithoutUsuarioInput>
  }

  export type movimentacaoUpdateManyWithWhereWithoutUsuarioInput = {
    where: movimentacaoScalarWhereInput
    data: XOR<movimentacaoUpdateManyMutationInput, movimentacaoUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type movimentacaoScalarWhereInput = {
    AND?: movimentacaoScalarWhereInput | movimentacaoScalarWhereInput[]
    OR?: movimentacaoScalarWhereInput[]
    NOT?: movimentacaoScalarWhereInput | movimentacaoScalarWhereInput[]
    id_movimentacao?: IntFilter<"movimentacao"> | number
    id_produto?: IntFilter<"movimentacao"> | number
    id_usuario?: IntFilter<"movimentacao"> | number
    tipo_movimentacao?: StringFilter<"movimentacao"> | string
    origem?: StringNullableFilter<"movimentacao"> | string | null
    data_movimento?: DateTimeFilter<"movimentacao"> | Date | string
    status?: StringNullableFilter<"movimentacao"> | string | null
    observacao?: StringNullableFilter<"movimentacao"> | string | null
  }

  export type relatorioUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: relatorioWhereUniqueInput
    update: XOR<relatorioUpdateWithoutUsuarioInput, relatorioUncheckedUpdateWithoutUsuarioInput>
    create: XOR<relatorioCreateWithoutUsuarioInput, relatorioUncheckedCreateWithoutUsuarioInput>
  }

  export type relatorioUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: relatorioWhereUniqueInput
    data: XOR<relatorioUpdateWithoutUsuarioInput, relatorioUncheckedUpdateWithoutUsuarioInput>
  }

  export type relatorioUpdateManyWithWhereWithoutUsuarioInput = {
    where: relatorioScalarWhereInput
    data: XOR<relatorioUpdateManyMutationInput, relatorioUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type relatorioScalarWhereInput = {
    AND?: relatorioScalarWhereInput | relatorioScalarWhereInput[]
    OR?: relatorioScalarWhereInput[]
    NOT?: relatorioScalarWhereInput | relatorioScalarWhereInput[]
    id_relatorio?: IntFilter<"relatorio"> | number
    id_usuario?: IntFilter<"relatorio"> | number
    tipo_relatorio?: StringFilter<"relatorio"> | string
    caminho_arquivo?: StringFilter<"relatorio"> | string
    gerado_por?: StringFilter<"relatorio"> | string
    gerado_em?: DateTimeFilter<"relatorio"> | Date | string
    status?: StringNullableFilter<"relatorio"> | string | null
  }

  export type garantiaUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: garantiaWhereUniqueInput
    update: XOR<garantiaUpdateWithoutUsuarioInput, garantiaUncheckedUpdateWithoutUsuarioInput>
    create: XOR<garantiaCreateWithoutUsuarioInput, garantiaUncheckedCreateWithoutUsuarioInput>
  }

  export type garantiaUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: garantiaWhereUniqueInput
    data: XOR<garantiaUpdateWithoutUsuarioInput, garantiaUncheckedUpdateWithoutUsuarioInput>
  }

  export type garantiaUpdateManyWithWhereWithoutUsuarioInput = {
    where: garantiaScalarWhereInput
    data: XOR<garantiaUpdateManyMutationInput, garantiaUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type garantiaScalarWhereInput = {
    AND?: garantiaScalarWhereInput | garantiaScalarWhereInput[]
    OR?: garantiaScalarWhereInput[]
    NOT?: garantiaScalarWhereInput | garantiaScalarWhereInput[]
    id_garantia?: IntFilter<"garantia"> | number
    id_produto?: IntFilter<"garantia"> | number
    id_usuario?: IntFilter<"garantia"> | number
    data_inicio?: DateTimeFilter<"garantia"> | Date | string
    data_fim?: DateTimeFilter<"garantia"> | Date | string
    descricao?: StringNullableFilter<"garantia"> | string | null
    status?: StringFilter<"garantia"> | string
  }

  export type usuarioCreateWithoutTipo_usuarioInput = {
    nome: string
    email: string
    senha_hash: string
    ativo: boolean
    criado_em?: Date | string
    CPF?: string | null
    compras?: compraCreateNestedManyWithoutUsuarioInput
    movimentacoes?: movimentacaoCreateNestedManyWithoutUsuarioInput
    relatorios?: relatorioCreateNestedManyWithoutUsuarioInput
    garantias?: garantiaCreateNestedManyWithoutUsuarioInput
  }

  export type usuarioUncheckedCreateWithoutTipo_usuarioInput = {
    id_usuario?: number
    nome: string
    email: string
    senha_hash: string
    ativo: boolean
    criado_em?: Date | string
    CPF?: string | null
    compras?: compraUncheckedCreateNestedManyWithoutUsuarioInput
    movimentacoes?: movimentacaoUncheckedCreateNestedManyWithoutUsuarioInput
    relatorios?: relatorioUncheckedCreateNestedManyWithoutUsuarioInput
    garantias?: garantiaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type usuarioCreateOrConnectWithoutTipo_usuarioInput = {
    where: usuarioWhereUniqueInput
    create: XOR<usuarioCreateWithoutTipo_usuarioInput, usuarioUncheckedCreateWithoutTipo_usuarioInput>
  }

  export type usuarioCreateManyTipo_usuarioInputEnvelope = {
    data: usuarioCreateManyTipo_usuarioInput | usuarioCreateManyTipo_usuarioInput[]
  }

  export type usuarioUpsertWithWhereUniqueWithoutTipo_usuarioInput = {
    where: usuarioWhereUniqueInput
    update: XOR<usuarioUpdateWithoutTipo_usuarioInput, usuarioUncheckedUpdateWithoutTipo_usuarioInput>
    create: XOR<usuarioCreateWithoutTipo_usuarioInput, usuarioUncheckedCreateWithoutTipo_usuarioInput>
  }

  export type usuarioUpdateWithWhereUniqueWithoutTipo_usuarioInput = {
    where: usuarioWhereUniqueInput
    data: XOR<usuarioUpdateWithoutTipo_usuarioInput, usuarioUncheckedUpdateWithoutTipo_usuarioInput>
  }

  export type usuarioUpdateManyWithWhereWithoutTipo_usuarioInput = {
    where: usuarioScalarWhereInput
    data: XOR<usuarioUpdateManyMutationInput, usuarioUncheckedUpdateManyWithoutTipo_usuarioInput>
  }

  export type usuarioScalarWhereInput = {
    AND?: usuarioScalarWhereInput | usuarioScalarWhereInput[]
    OR?: usuarioScalarWhereInput[]
    NOT?: usuarioScalarWhereInput | usuarioScalarWhereInput[]
    id_usuario?: IntFilter<"usuario"> | number
    nome?: StringFilter<"usuario"> | string
    email?: StringFilter<"usuario"> | string
    senha_hash?: StringFilter<"usuario"> | string
    id_tipo_usuario?: IntFilter<"usuario"> | number
    ativo?: BoolFilter<"usuario"> | boolean
    criado_em?: DateTimeFilter<"usuario"> | Date | string
    CPF?: StringNullableFilter<"usuario"> | string | null
  }

  export type estoqueCreateWithoutProdutoInput = {
    quantidade_atual: number
    quantidade_minima: number
    ultima_atualizacao: Date | string
    status?: string | null
    sala: salaCreateNestedOneWithoutEstoquesInput
  }

  export type estoqueUncheckedCreateWithoutProdutoInput = {
    id_estoque?: number
    id_sala: number
    quantidade_atual: number
    quantidade_minima: number
    ultima_atualizacao: Date | string
    status?: string | null
  }

  export type estoqueCreateOrConnectWithoutProdutoInput = {
    where: estoqueWhereUniqueInput
    create: XOR<estoqueCreateWithoutProdutoInput, estoqueUncheckedCreateWithoutProdutoInput>
  }

  export type estoqueCreateManyProdutoInputEnvelope = {
    data: estoqueCreateManyProdutoInput | estoqueCreateManyProdutoInput[]
  }

  export type compraCreateWithoutProdutoInput = {
    data_pedido: Date | string
    data_recebimento?: Date | string | null
    valor_total: number
    origem?: string | null
    observacoes?: string | null
    fornecedor: fornecedorCreateNestedOneWithoutComprasInput
    financeiro: financeiroCreateNestedOneWithoutComprasInput
    usuario: usuarioCreateNestedOneWithoutComprasInput
  }

  export type compraUncheckedCreateWithoutProdutoInput = {
    id_compra?: number
    id_fornecedor: number
    id_financeiro: number
    id_usuario: number
    data_pedido: Date | string
    data_recebimento?: Date | string | null
    valor_total: number
    origem?: string | null
    observacoes?: string | null
  }

  export type compraCreateOrConnectWithoutProdutoInput = {
    where: compraWhereUniqueInput
    create: XOR<compraCreateWithoutProdutoInput, compraUncheckedCreateWithoutProdutoInput>
  }

  export type compraCreateManyProdutoInputEnvelope = {
    data: compraCreateManyProdutoInput | compraCreateManyProdutoInput[]
  }

  export type alertaCreateWithoutProdutoInput = {
    tipo_alerta: string
    mensagem: string
  }

  export type alertaUncheckedCreateWithoutProdutoInput = {
    id_alerta?: number
    tipo_alerta: string
    mensagem: string
  }

  export type alertaCreateOrConnectWithoutProdutoInput = {
    where: alertaWhereUniqueInput
    create: XOR<alertaCreateWithoutProdutoInput, alertaUncheckedCreateWithoutProdutoInput>
  }

  export type alertaCreateManyProdutoInputEnvelope = {
    data: alertaCreateManyProdutoInput | alertaCreateManyProdutoInput[]
  }

  export type previsao_demandaCreateWithoutProdutoInput = {
    data_prevista: Date | string
    demanda_prevista: number
    id_financeiro?: number | null
    confianca_modelo?: number | null
    historicos?: historico_previsaoCreateNestedManyWithoutPrevisaoInput
  }

  export type previsao_demandaUncheckedCreateWithoutProdutoInput = {
    id_previsao?: number
    data_prevista: Date | string
    demanda_prevista: number
    id_financeiro?: number | null
    confianca_modelo?: number | null
    historicos?: historico_previsaoUncheckedCreateNestedManyWithoutPrevisaoInput
  }

  export type previsao_demandaCreateOrConnectWithoutProdutoInput = {
    where: previsao_demandaWhereUniqueInput
    create: XOR<previsao_demandaCreateWithoutProdutoInput, previsao_demandaUncheckedCreateWithoutProdutoInput>
  }

  export type previsao_demandaCreateManyProdutoInputEnvelope = {
    data: previsao_demandaCreateManyProdutoInput | previsao_demandaCreateManyProdutoInput[]
  }

  export type historico_previsaoCreateWithoutProdutoInput = {
    demanda_real: number
    diferenca: number
    precisao_modelo?: number | null
    previsao: previsao_demandaCreateNestedOneWithoutHistoricosInput
    financeiro?: financeiroCreateNestedOneWithoutHistoricosInput
  }

  export type historico_previsaoUncheckedCreateWithoutProdutoInput = {
    id_historico?: number
    id_previsao: number
    id_financeiro?: number | null
    demanda_real: number
    diferenca: number
    precisao_modelo?: number | null
  }

  export type historico_previsaoCreateOrConnectWithoutProdutoInput = {
    where: historico_previsaoWhereUniqueInput
    create: XOR<historico_previsaoCreateWithoutProdutoInput, historico_previsaoUncheckedCreateWithoutProdutoInput>
  }

  export type historico_previsaoCreateManyProdutoInputEnvelope = {
    data: historico_previsaoCreateManyProdutoInput | historico_previsaoCreateManyProdutoInput[]
  }

  export type movimentacaoCreateWithoutProdutoInput = {
    tipo_movimentacao: string
    origem?: string | null
    data_movimento: Date | string
    status?: string | null
    observacao?: string | null
    usuario: usuarioCreateNestedOneWithoutMovimentacoesInput
  }

  export type movimentacaoUncheckedCreateWithoutProdutoInput = {
    id_movimentacao?: number
    id_usuario: number
    tipo_movimentacao: string
    origem?: string | null
    data_movimento: Date | string
    status?: string | null
    observacao?: string | null
  }

  export type movimentacaoCreateOrConnectWithoutProdutoInput = {
    where: movimentacaoWhereUniqueInput
    create: XOR<movimentacaoCreateWithoutProdutoInput, movimentacaoUncheckedCreateWithoutProdutoInput>
  }

  export type movimentacaoCreateManyProdutoInputEnvelope = {
    data: movimentacaoCreateManyProdutoInput | movimentacaoCreateManyProdutoInput[]
  }

  export type garantiaCreateWithoutProdutoInput = {
    data_inicio: Date | string
    data_fim: Date | string
    descricao?: string | null
    status?: string
    usuario: usuarioCreateNestedOneWithoutGarantiasInput
  }

  export type garantiaUncheckedCreateWithoutProdutoInput = {
    id_garantia?: number
    id_usuario: number
    data_inicio: Date | string
    data_fim: Date | string
    descricao?: string | null
    status?: string
  }

  export type garantiaCreateOrConnectWithoutProdutoInput = {
    where: garantiaWhereUniqueInput
    create: XOR<garantiaCreateWithoutProdutoInput, garantiaUncheckedCreateWithoutProdutoInput>
  }

  export type garantiaCreateManyProdutoInputEnvelope = {
    data: garantiaCreateManyProdutoInput | garantiaCreateManyProdutoInput[]
  }

  export type fornecedorCreateWithoutProdutosInput = {
    nome: string
    cnpj: string
    telefone?: string | null
    email?: string | null
    endereco?: string | null
    compras?: compraCreateNestedManyWithoutFornecedorInput
  }

  export type fornecedorUncheckedCreateWithoutProdutosInput = {
    id_fornecedor?: number
    nome: string
    cnpj: string
    telefone?: string | null
    email?: string | null
    endereco?: string | null
    compras?: compraUncheckedCreateNestedManyWithoutFornecedorInput
  }

  export type fornecedorCreateOrConnectWithoutProdutosInput = {
    where: fornecedorWhereUniqueInput
    create: XOR<fornecedorCreateWithoutProdutosInput, fornecedorUncheckedCreateWithoutProdutosInput>
  }

  export type estoqueUpsertWithWhereUniqueWithoutProdutoInput = {
    where: estoqueWhereUniqueInput
    update: XOR<estoqueUpdateWithoutProdutoInput, estoqueUncheckedUpdateWithoutProdutoInput>
    create: XOR<estoqueCreateWithoutProdutoInput, estoqueUncheckedCreateWithoutProdutoInput>
  }

  export type estoqueUpdateWithWhereUniqueWithoutProdutoInput = {
    where: estoqueWhereUniqueInput
    data: XOR<estoqueUpdateWithoutProdutoInput, estoqueUncheckedUpdateWithoutProdutoInput>
  }

  export type estoqueUpdateManyWithWhereWithoutProdutoInput = {
    where: estoqueScalarWhereInput
    data: XOR<estoqueUpdateManyMutationInput, estoqueUncheckedUpdateManyWithoutProdutoInput>
  }

  export type estoqueScalarWhereInput = {
    AND?: estoqueScalarWhereInput | estoqueScalarWhereInput[]
    OR?: estoqueScalarWhereInput[]
    NOT?: estoqueScalarWhereInput | estoqueScalarWhereInput[]
    id_estoque?: IntFilter<"estoque"> | number
    id_produto?: IntFilter<"estoque"> | number
    id_sala?: IntFilter<"estoque"> | number
    quantidade_atual?: IntFilter<"estoque"> | number
    quantidade_minima?: IntFilter<"estoque"> | number
    ultima_atualizacao?: DateTimeFilter<"estoque"> | Date | string
    status?: StringNullableFilter<"estoque"> | string | null
  }

  export type compraUpsertWithWhereUniqueWithoutProdutoInput = {
    where: compraWhereUniqueInput
    update: XOR<compraUpdateWithoutProdutoInput, compraUncheckedUpdateWithoutProdutoInput>
    create: XOR<compraCreateWithoutProdutoInput, compraUncheckedCreateWithoutProdutoInput>
  }

  export type compraUpdateWithWhereUniqueWithoutProdutoInput = {
    where: compraWhereUniqueInput
    data: XOR<compraUpdateWithoutProdutoInput, compraUncheckedUpdateWithoutProdutoInput>
  }

  export type compraUpdateManyWithWhereWithoutProdutoInput = {
    where: compraScalarWhereInput
    data: XOR<compraUpdateManyMutationInput, compraUncheckedUpdateManyWithoutProdutoInput>
  }

  export type alertaUpsertWithWhereUniqueWithoutProdutoInput = {
    where: alertaWhereUniqueInput
    update: XOR<alertaUpdateWithoutProdutoInput, alertaUncheckedUpdateWithoutProdutoInput>
    create: XOR<alertaCreateWithoutProdutoInput, alertaUncheckedCreateWithoutProdutoInput>
  }

  export type alertaUpdateWithWhereUniqueWithoutProdutoInput = {
    where: alertaWhereUniqueInput
    data: XOR<alertaUpdateWithoutProdutoInput, alertaUncheckedUpdateWithoutProdutoInput>
  }

  export type alertaUpdateManyWithWhereWithoutProdutoInput = {
    where: alertaScalarWhereInput
    data: XOR<alertaUpdateManyMutationInput, alertaUncheckedUpdateManyWithoutProdutoInput>
  }

  export type alertaScalarWhereInput = {
    AND?: alertaScalarWhereInput | alertaScalarWhereInput[]
    OR?: alertaScalarWhereInput[]
    NOT?: alertaScalarWhereInput | alertaScalarWhereInput[]
    id_alerta?: IntFilter<"alerta"> | number
    id_produto?: IntFilter<"alerta"> | number
    tipo_alerta?: StringFilter<"alerta"> | string
    mensagem?: StringFilter<"alerta"> | string
  }

  export type previsao_demandaUpsertWithWhereUniqueWithoutProdutoInput = {
    where: previsao_demandaWhereUniqueInput
    update: XOR<previsao_demandaUpdateWithoutProdutoInput, previsao_demandaUncheckedUpdateWithoutProdutoInput>
    create: XOR<previsao_demandaCreateWithoutProdutoInput, previsao_demandaUncheckedCreateWithoutProdutoInput>
  }

  export type previsao_demandaUpdateWithWhereUniqueWithoutProdutoInput = {
    where: previsao_demandaWhereUniqueInput
    data: XOR<previsao_demandaUpdateWithoutProdutoInput, previsao_demandaUncheckedUpdateWithoutProdutoInput>
  }

  export type previsao_demandaUpdateManyWithWhereWithoutProdutoInput = {
    where: previsao_demandaScalarWhereInput
    data: XOR<previsao_demandaUpdateManyMutationInput, previsao_demandaUncheckedUpdateManyWithoutProdutoInput>
  }

  export type previsao_demandaScalarWhereInput = {
    AND?: previsao_demandaScalarWhereInput | previsao_demandaScalarWhereInput[]
    OR?: previsao_demandaScalarWhereInput[]
    NOT?: previsao_demandaScalarWhereInput | previsao_demandaScalarWhereInput[]
    id_previsao?: IntFilter<"previsao_demanda"> | number
    id_produto?: IntFilter<"previsao_demanda"> | number
    data_prevista?: DateTimeFilter<"previsao_demanda"> | Date | string
    demanda_prevista?: IntFilter<"previsao_demanda"> | number
    id_financeiro?: IntNullableFilter<"previsao_demanda"> | number | null
    confianca_modelo?: FloatNullableFilter<"previsao_demanda"> | number | null
  }

  export type historico_previsaoUpsertWithWhereUniqueWithoutProdutoInput = {
    where: historico_previsaoWhereUniqueInput
    update: XOR<historico_previsaoUpdateWithoutProdutoInput, historico_previsaoUncheckedUpdateWithoutProdutoInput>
    create: XOR<historico_previsaoCreateWithoutProdutoInput, historico_previsaoUncheckedCreateWithoutProdutoInput>
  }

  export type historico_previsaoUpdateWithWhereUniqueWithoutProdutoInput = {
    where: historico_previsaoWhereUniqueInput
    data: XOR<historico_previsaoUpdateWithoutProdutoInput, historico_previsaoUncheckedUpdateWithoutProdutoInput>
  }

  export type historico_previsaoUpdateManyWithWhereWithoutProdutoInput = {
    where: historico_previsaoScalarWhereInput
    data: XOR<historico_previsaoUpdateManyMutationInput, historico_previsaoUncheckedUpdateManyWithoutProdutoInput>
  }

  export type historico_previsaoScalarWhereInput = {
    AND?: historico_previsaoScalarWhereInput | historico_previsaoScalarWhereInput[]
    OR?: historico_previsaoScalarWhereInput[]
    NOT?: historico_previsaoScalarWhereInput | historico_previsaoScalarWhereInput[]
    id_historico?: IntFilter<"historico_previsao"> | number
    id_produto?: IntFilter<"historico_previsao"> | number
    id_previsao?: IntFilter<"historico_previsao"> | number
    id_financeiro?: IntNullableFilter<"historico_previsao"> | number | null
    demanda_real?: IntFilter<"historico_previsao"> | number
    diferenca?: IntFilter<"historico_previsao"> | number
    precisao_modelo?: FloatNullableFilter<"historico_previsao"> | number | null
  }

  export type movimentacaoUpsertWithWhereUniqueWithoutProdutoInput = {
    where: movimentacaoWhereUniqueInput
    update: XOR<movimentacaoUpdateWithoutProdutoInput, movimentacaoUncheckedUpdateWithoutProdutoInput>
    create: XOR<movimentacaoCreateWithoutProdutoInput, movimentacaoUncheckedCreateWithoutProdutoInput>
  }

  export type movimentacaoUpdateWithWhereUniqueWithoutProdutoInput = {
    where: movimentacaoWhereUniqueInput
    data: XOR<movimentacaoUpdateWithoutProdutoInput, movimentacaoUncheckedUpdateWithoutProdutoInput>
  }

  export type movimentacaoUpdateManyWithWhereWithoutProdutoInput = {
    where: movimentacaoScalarWhereInput
    data: XOR<movimentacaoUpdateManyMutationInput, movimentacaoUncheckedUpdateManyWithoutProdutoInput>
  }

  export type garantiaUpsertWithWhereUniqueWithoutProdutoInput = {
    where: garantiaWhereUniqueInput
    update: XOR<garantiaUpdateWithoutProdutoInput, garantiaUncheckedUpdateWithoutProdutoInput>
    create: XOR<garantiaCreateWithoutProdutoInput, garantiaUncheckedCreateWithoutProdutoInput>
  }

  export type garantiaUpdateWithWhereUniqueWithoutProdutoInput = {
    where: garantiaWhereUniqueInput
    data: XOR<garantiaUpdateWithoutProdutoInput, garantiaUncheckedUpdateWithoutProdutoInput>
  }

  export type garantiaUpdateManyWithWhereWithoutProdutoInput = {
    where: garantiaScalarWhereInput
    data: XOR<garantiaUpdateManyMutationInput, garantiaUncheckedUpdateManyWithoutProdutoInput>
  }

  export type fornecedorUpsertWithoutProdutosInput = {
    update: XOR<fornecedorUpdateWithoutProdutosInput, fornecedorUncheckedUpdateWithoutProdutosInput>
    create: XOR<fornecedorCreateWithoutProdutosInput, fornecedorUncheckedCreateWithoutProdutosInput>
    where?: fornecedorWhereInput
  }

  export type fornecedorUpdateToOneWithWhereWithoutProdutosInput = {
    where?: fornecedorWhereInput
    data: XOR<fornecedorUpdateWithoutProdutosInput, fornecedorUncheckedUpdateWithoutProdutosInput>
  }

  export type fornecedorUpdateWithoutProdutosInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    compras?: compraUpdateManyWithoutFornecedorNestedInput
  }

  export type fornecedorUncheckedUpdateWithoutProdutosInput = {
    id_fornecedor?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    compras?: compraUncheckedUpdateManyWithoutFornecedorNestedInput
  }

  export type produtoCreateWithoutEstoqueInput = {
    nome: string
    descricao?: string | null
    categoria?: string | null
    codigo_publico?: string | null
    preco_unitario?: number | null
    unidade_medida?: string | null
    compras?: compraCreateNestedManyWithoutProdutoInput
    alertas?: alertaCreateNestedManyWithoutProdutoInput
    previsoes?: previsao_demandaCreateNestedManyWithoutProdutoInput
    historicos?: historico_previsaoCreateNestedManyWithoutProdutoInput
    movimentacoes?: movimentacaoCreateNestedManyWithoutProdutoInput
    garantias?: garantiaCreateNestedManyWithoutProdutoInput
    fornecedor?: fornecedorCreateNestedOneWithoutProdutosInput
  }

  export type produtoUncheckedCreateWithoutEstoqueInput = {
    id_produto?: number
    nome: string
    descricao?: string | null
    categoria?: string | null
    codigo_publico?: string | null
    preco_unitario?: number | null
    unidade_medida?: string | null
    id_fornecedor?: number | null
    compras?: compraUncheckedCreateNestedManyWithoutProdutoInput
    alertas?: alertaUncheckedCreateNestedManyWithoutProdutoInput
    previsoes?: previsao_demandaUncheckedCreateNestedManyWithoutProdutoInput
    historicos?: historico_previsaoUncheckedCreateNestedManyWithoutProdutoInput
    movimentacoes?: movimentacaoUncheckedCreateNestedManyWithoutProdutoInput
    garantias?: garantiaUncheckedCreateNestedManyWithoutProdutoInput
  }

  export type produtoCreateOrConnectWithoutEstoqueInput = {
    where: produtoWhereUniqueInput
    create: XOR<produtoCreateWithoutEstoqueInput, produtoUncheckedCreateWithoutEstoqueInput>
  }

  export type salaCreateWithoutEstoquesInput = {
    nome_sala: string
    descricao?: string | null
    capacidade: number
    localizacao?: string | null
  }

  export type salaUncheckedCreateWithoutEstoquesInput = {
    id_sala?: number
    nome_sala: string
    descricao?: string | null
    capacidade: number
    localizacao?: string | null
  }

  export type salaCreateOrConnectWithoutEstoquesInput = {
    where: salaWhereUniqueInput
    create: XOR<salaCreateWithoutEstoquesInput, salaUncheckedCreateWithoutEstoquesInput>
  }

  export type produtoUpsertWithoutEstoqueInput = {
    update: XOR<produtoUpdateWithoutEstoqueInput, produtoUncheckedUpdateWithoutEstoqueInput>
    create: XOR<produtoCreateWithoutEstoqueInput, produtoUncheckedCreateWithoutEstoqueInput>
    where?: produtoWhereInput
  }

  export type produtoUpdateToOneWithWhereWithoutEstoqueInput = {
    where?: produtoWhereInput
    data: XOR<produtoUpdateWithoutEstoqueInput, produtoUncheckedUpdateWithoutEstoqueInput>
  }

  export type produtoUpdateWithoutEstoqueInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_publico?: NullableStringFieldUpdateOperationsInput | string | null
    preco_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
    unidade_medida?: NullableStringFieldUpdateOperationsInput | string | null
    compras?: compraUpdateManyWithoutProdutoNestedInput
    alertas?: alertaUpdateManyWithoutProdutoNestedInput
    previsoes?: previsao_demandaUpdateManyWithoutProdutoNestedInput
    historicos?: historico_previsaoUpdateManyWithoutProdutoNestedInput
    movimentacoes?: movimentacaoUpdateManyWithoutProdutoNestedInput
    garantias?: garantiaUpdateManyWithoutProdutoNestedInput
    fornecedor?: fornecedorUpdateOneWithoutProdutosNestedInput
  }

  export type produtoUncheckedUpdateWithoutEstoqueInput = {
    id_produto?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_publico?: NullableStringFieldUpdateOperationsInput | string | null
    preco_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
    unidade_medida?: NullableStringFieldUpdateOperationsInput | string | null
    id_fornecedor?: NullableIntFieldUpdateOperationsInput | number | null
    compras?: compraUncheckedUpdateManyWithoutProdutoNestedInput
    alertas?: alertaUncheckedUpdateManyWithoutProdutoNestedInput
    previsoes?: previsao_demandaUncheckedUpdateManyWithoutProdutoNestedInput
    historicos?: historico_previsaoUncheckedUpdateManyWithoutProdutoNestedInput
    movimentacoes?: movimentacaoUncheckedUpdateManyWithoutProdutoNestedInput
    garantias?: garantiaUncheckedUpdateManyWithoutProdutoNestedInput
  }

  export type salaUpsertWithoutEstoquesInput = {
    update: XOR<salaUpdateWithoutEstoquesInput, salaUncheckedUpdateWithoutEstoquesInput>
    create: XOR<salaCreateWithoutEstoquesInput, salaUncheckedCreateWithoutEstoquesInput>
    where?: salaWhereInput
  }

  export type salaUpdateToOneWithWhereWithoutEstoquesInput = {
    where?: salaWhereInput
    data: XOR<salaUpdateWithoutEstoquesInput, salaUncheckedUpdateWithoutEstoquesInput>
  }

  export type salaUpdateWithoutEstoquesInput = {
    nome_sala?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    capacidade?: IntFieldUpdateOperationsInput | number
    localizacao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type salaUncheckedUpdateWithoutEstoquesInput = {
    id_sala?: IntFieldUpdateOperationsInput | number
    nome_sala?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    capacidade?: IntFieldUpdateOperationsInput | number
    localizacao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type compraCreateWithoutFinanceiroInput = {
    data_pedido: Date | string
    data_recebimento?: Date | string | null
    valor_total: number
    origem?: string | null
    observacoes?: string | null
    produto: produtoCreateNestedOneWithoutComprasInput
    fornecedor: fornecedorCreateNestedOneWithoutComprasInput
    usuario: usuarioCreateNestedOneWithoutComprasInput
  }

  export type compraUncheckedCreateWithoutFinanceiroInput = {
    id_compra?: number
    id_produto: number
    id_fornecedor: number
    id_usuario: number
    data_pedido: Date | string
    data_recebimento?: Date | string | null
    valor_total: number
    origem?: string | null
    observacoes?: string | null
  }

  export type compraCreateOrConnectWithoutFinanceiroInput = {
    where: compraWhereUniqueInput
    create: XOR<compraCreateWithoutFinanceiroInput, compraUncheckedCreateWithoutFinanceiroInput>
  }

  export type compraCreateManyFinanceiroInputEnvelope = {
    data: compraCreateManyFinanceiroInput | compraCreateManyFinanceiroInput[]
  }

  export type historico_previsaoCreateWithoutFinanceiroInput = {
    demanda_real: number
    diferenca: number
    precisao_modelo?: number | null
    produto: produtoCreateNestedOneWithoutHistoricosInput
    previsao: previsao_demandaCreateNestedOneWithoutHistoricosInput
  }

  export type historico_previsaoUncheckedCreateWithoutFinanceiroInput = {
    id_historico?: number
    id_produto: number
    id_previsao: number
    demanda_real: number
    diferenca: number
    precisao_modelo?: number | null
  }

  export type historico_previsaoCreateOrConnectWithoutFinanceiroInput = {
    where: historico_previsaoWhereUniqueInput
    create: XOR<historico_previsaoCreateWithoutFinanceiroInput, historico_previsaoUncheckedCreateWithoutFinanceiroInput>
  }

  export type historico_previsaoCreateManyFinanceiroInputEnvelope = {
    data: historico_previsaoCreateManyFinanceiroInput | historico_previsaoCreateManyFinanceiroInput[]
  }

  export type compraUpsertWithWhereUniqueWithoutFinanceiroInput = {
    where: compraWhereUniqueInput
    update: XOR<compraUpdateWithoutFinanceiroInput, compraUncheckedUpdateWithoutFinanceiroInput>
    create: XOR<compraCreateWithoutFinanceiroInput, compraUncheckedCreateWithoutFinanceiroInput>
  }

  export type compraUpdateWithWhereUniqueWithoutFinanceiroInput = {
    where: compraWhereUniqueInput
    data: XOR<compraUpdateWithoutFinanceiroInput, compraUncheckedUpdateWithoutFinanceiroInput>
  }

  export type compraUpdateManyWithWhereWithoutFinanceiroInput = {
    where: compraScalarWhereInput
    data: XOR<compraUpdateManyMutationInput, compraUncheckedUpdateManyWithoutFinanceiroInput>
  }

  export type historico_previsaoUpsertWithWhereUniqueWithoutFinanceiroInput = {
    where: historico_previsaoWhereUniqueInput
    update: XOR<historico_previsaoUpdateWithoutFinanceiroInput, historico_previsaoUncheckedUpdateWithoutFinanceiroInput>
    create: XOR<historico_previsaoCreateWithoutFinanceiroInput, historico_previsaoUncheckedCreateWithoutFinanceiroInput>
  }

  export type historico_previsaoUpdateWithWhereUniqueWithoutFinanceiroInput = {
    where: historico_previsaoWhereUniqueInput
    data: XOR<historico_previsaoUpdateWithoutFinanceiroInput, historico_previsaoUncheckedUpdateWithoutFinanceiroInput>
  }

  export type historico_previsaoUpdateManyWithWhereWithoutFinanceiroInput = {
    where: historico_previsaoScalarWhereInput
    data: XOR<historico_previsaoUpdateManyMutationInput, historico_previsaoUncheckedUpdateManyWithoutFinanceiroInput>
  }

  export type produtoCreateWithoutComprasInput = {
    nome: string
    descricao?: string | null
    categoria?: string | null
    codigo_publico?: string | null
    preco_unitario?: number | null
    unidade_medida?: string | null
    estoque?: estoqueCreateNestedManyWithoutProdutoInput
    alertas?: alertaCreateNestedManyWithoutProdutoInput
    previsoes?: previsao_demandaCreateNestedManyWithoutProdutoInput
    historicos?: historico_previsaoCreateNestedManyWithoutProdutoInput
    movimentacoes?: movimentacaoCreateNestedManyWithoutProdutoInput
    garantias?: garantiaCreateNestedManyWithoutProdutoInput
    fornecedor?: fornecedorCreateNestedOneWithoutProdutosInput
  }

  export type produtoUncheckedCreateWithoutComprasInput = {
    id_produto?: number
    nome: string
    descricao?: string | null
    categoria?: string | null
    codigo_publico?: string | null
    preco_unitario?: number | null
    unidade_medida?: string | null
    id_fornecedor?: number | null
    estoque?: estoqueUncheckedCreateNestedManyWithoutProdutoInput
    alertas?: alertaUncheckedCreateNestedManyWithoutProdutoInput
    previsoes?: previsao_demandaUncheckedCreateNestedManyWithoutProdutoInput
    historicos?: historico_previsaoUncheckedCreateNestedManyWithoutProdutoInput
    movimentacoes?: movimentacaoUncheckedCreateNestedManyWithoutProdutoInput
    garantias?: garantiaUncheckedCreateNestedManyWithoutProdutoInput
  }

  export type produtoCreateOrConnectWithoutComprasInput = {
    where: produtoWhereUniqueInput
    create: XOR<produtoCreateWithoutComprasInput, produtoUncheckedCreateWithoutComprasInput>
  }

  export type fornecedorCreateWithoutComprasInput = {
    nome: string
    cnpj: string
    telefone?: string | null
    email?: string | null
    endereco?: string | null
    produtos?: produtoCreateNestedManyWithoutFornecedorInput
  }

  export type fornecedorUncheckedCreateWithoutComprasInput = {
    id_fornecedor?: number
    nome: string
    cnpj: string
    telefone?: string | null
    email?: string | null
    endereco?: string | null
    produtos?: produtoUncheckedCreateNestedManyWithoutFornecedorInput
  }

  export type fornecedorCreateOrConnectWithoutComprasInput = {
    where: fornecedorWhereUniqueInput
    create: XOR<fornecedorCreateWithoutComprasInput, fornecedorUncheckedCreateWithoutComprasInput>
  }

  export type financeiroCreateWithoutComprasInput = {
    tipo: string
    descricao: string
    valor: number
    data_movimento: Date | string
    status?: string | null
    historicos?: historico_previsaoCreateNestedManyWithoutFinanceiroInput
  }

  export type financeiroUncheckedCreateWithoutComprasInput = {
    id_financeiro?: number
    tipo: string
    descricao: string
    valor: number
    data_movimento: Date | string
    status?: string | null
    historicos?: historico_previsaoUncheckedCreateNestedManyWithoutFinanceiroInput
  }

  export type financeiroCreateOrConnectWithoutComprasInput = {
    where: financeiroWhereUniqueInput
    create: XOR<financeiroCreateWithoutComprasInput, financeiroUncheckedCreateWithoutComprasInput>
  }

  export type usuarioCreateWithoutComprasInput = {
    nome: string
    email: string
    senha_hash: string
    ativo: boolean
    criado_em?: Date | string
    CPF?: string | null
    tipo_usuario: tipo_usuarioCreateNestedOneWithoutUsuariosInput
    movimentacoes?: movimentacaoCreateNestedManyWithoutUsuarioInput
    relatorios?: relatorioCreateNestedManyWithoutUsuarioInput
    garantias?: garantiaCreateNestedManyWithoutUsuarioInput
  }

  export type usuarioUncheckedCreateWithoutComprasInput = {
    id_usuario?: number
    nome: string
    email: string
    senha_hash: string
    id_tipo_usuario: number
    ativo: boolean
    criado_em?: Date | string
    CPF?: string | null
    movimentacoes?: movimentacaoUncheckedCreateNestedManyWithoutUsuarioInput
    relatorios?: relatorioUncheckedCreateNestedManyWithoutUsuarioInput
    garantias?: garantiaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type usuarioCreateOrConnectWithoutComprasInput = {
    where: usuarioWhereUniqueInput
    create: XOR<usuarioCreateWithoutComprasInput, usuarioUncheckedCreateWithoutComprasInput>
  }

  export type produtoUpsertWithoutComprasInput = {
    update: XOR<produtoUpdateWithoutComprasInput, produtoUncheckedUpdateWithoutComprasInput>
    create: XOR<produtoCreateWithoutComprasInput, produtoUncheckedCreateWithoutComprasInput>
    where?: produtoWhereInput
  }

  export type produtoUpdateToOneWithWhereWithoutComprasInput = {
    where?: produtoWhereInput
    data: XOR<produtoUpdateWithoutComprasInput, produtoUncheckedUpdateWithoutComprasInput>
  }

  export type produtoUpdateWithoutComprasInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_publico?: NullableStringFieldUpdateOperationsInput | string | null
    preco_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
    unidade_medida?: NullableStringFieldUpdateOperationsInput | string | null
    estoque?: estoqueUpdateManyWithoutProdutoNestedInput
    alertas?: alertaUpdateManyWithoutProdutoNestedInput
    previsoes?: previsao_demandaUpdateManyWithoutProdutoNestedInput
    historicos?: historico_previsaoUpdateManyWithoutProdutoNestedInput
    movimentacoes?: movimentacaoUpdateManyWithoutProdutoNestedInput
    garantias?: garantiaUpdateManyWithoutProdutoNestedInput
    fornecedor?: fornecedorUpdateOneWithoutProdutosNestedInput
  }

  export type produtoUncheckedUpdateWithoutComprasInput = {
    id_produto?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_publico?: NullableStringFieldUpdateOperationsInput | string | null
    preco_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
    unidade_medida?: NullableStringFieldUpdateOperationsInput | string | null
    id_fornecedor?: NullableIntFieldUpdateOperationsInput | number | null
    estoque?: estoqueUncheckedUpdateManyWithoutProdutoNestedInput
    alertas?: alertaUncheckedUpdateManyWithoutProdutoNestedInput
    previsoes?: previsao_demandaUncheckedUpdateManyWithoutProdutoNestedInput
    historicos?: historico_previsaoUncheckedUpdateManyWithoutProdutoNestedInput
    movimentacoes?: movimentacaoUncheckedUpdateManyWithoutProdutoNestedInput
    garantias?: garantiaUncheckedUpdateManyWithoutProdutoNestedInput
  }

  export type fornecedorUpsertWithoutComprasInput = {
    update: XOR<fornecedorUpdateWithoutComprasInput, fornecedorUncheckedUpdateWithoutComprasInput>
    create: XOR<fornecedorCreateWithoutComprasInput, fornecedorUncheckedCreateWithoutComprasInput>
    where?: fornecedorWhereInput
  }

  export type fornecedorUpdateToOneWithWhereWithoutComprasInput = {
    where?: fornecedorWhereInput
    data: XOR<fornecedorUpdateWithoutComprasInput, fornecedorUncheckedUpdateWithoutComprasInput>
  }

  export type fornecedorUpdateWithoutComprasInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    produtos?: produtoUpdateManyWithoutFornecedorNestedInput
  }

  export type fornecedorUncheckedUpdateWithoutComprasInput = {
    id_fornecedor?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    produtos?: produtoUncheckedUpdateManyWithoutFornecedorNestedInput
  }

  export type financeiroUpsertWithoutComprasInput = {
    update: XOR<financeiroUpdateWithoutComprasInput, financeiroUncheckedUpdateWithoutComprasInput>
    create: XOR<financeiroCreateWithoutComprasInput, financeiroUncheckedCreateWithoutComprasInput>
    where?: financeiroWhereInput
  }

  export type financeiroUpdateToOneWithWhereWithoutComprasInput = {
    where?: financeiroWhereInput
    data: XOR<financeiroUpdateWithoutComprasInput, financeiroUncheckedUpdateWithoutComprasInput>
  }

  export type financeiroUpdateWithoutComprasInput = {
    tipo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    data_movimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    historicos?: historico_previsaoUpdateManyWithoutFinanceiroNestedInput
  }

  export type financeiroUncheckedUpdateWithoutComprasInput = {
    id_financeiro?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    data_movimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    historicos?: historico_previsaoUncheckedUpdateManyWithoutFinanceiroNestedInput
  }

  export type usuarioUpsertWithoutComprasInput = {
    update: XOR<usuarioUpdateWithoutComprasInput, usuarioUncheckedUpdateWithoutComprasInput>
    create: XOR<usuarioCreateWithoutComprasInput, usuarioUncheckedCreateWithoutComprasInput>
    where?: usuarioWhereInput
  }

  export type usuarioUpdateToOneWithWhereWithoutComprasInput = {
    where?: usuarioWhereInput
    data: XOR<usuarioUpdateWithoutComprasInput, usuarioUncheckedUpdateWithoutComprasInput>
  }

  export type usuarioUpdateWithoutComprasInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    CPF?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_usuario?: tipo_usuarioUpdateOneRequiredWithoutUsuariosNestedInput
    movimentacoes?: movimentacaoUpdateManyWithoutUsuarioNestedInput
    relatorios?: relatorioUpdateManyWithoutUsuarioNestedInput
    garantias?: garantiaUpdateManyWithoutUsuarioNestedInput
  }

  export type usuarioUncheckedUpdateWithoutComprasInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    id_tipo_usuario?: IntFieldUpdateOperationsInput | number
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    CPF?: NullableStringFieldUpdateOperationsInput | string | null
    movimentacoes?: movimentacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    relatorios?: relatorioUncheckedUpdateManyWithoutUsuarioNestedInput
    garantias?: garantiaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type estoqueCreateWithoutSalaInput = {
    quantidade_atual: number
    quantidade_minima: number
    ultima_atualizacao: Date | string
    status?: string | null
    produto: produtoCreateNestedOneWithoutEstoqueInput
  }

  export type estoqueUncheckedCreateWithoutSalaInput = {
    id_estoque?: number
    id_produto: number
    quantidade_atual: number
    quantidade_minima: number
    ultima_atualizacao: Date | string
    status?: string | null
  }

  export type estoqueCreateOrConnectWithoutSalaInput = {
    where: estoqueWhereUniqueInput
    create: XOR<estoqueCreateWithoutSalaInput, estoqueUncheckedCreateWithoutSalaInput>
  }

  export type estoqueCreateManySalaInputEnvelope = {
    data: estoqueCreateManySalaInput | estoqueCreateManySalaInput[]
  }

  export type estoqueUpsertWithWhereUniqueWithoutSalaInput = {
    where: estoqueWhereUniqueInput
    update: XOR<estoqueUpdateWithoutSalaInput, estoqueUncheckedUpdateWithoutSalaInput>
    create: XOR<estoqueCreateWithoutSalaInput, estoqueUncheckedCreateWithoutSalaInput>
  }

  export type estoqueUpdateWithWhereUniqueWithoutSalaInput = {
    where: estoqueWhereUniqueInput
    data: XOR<estoqueUpdateWithoutSalaInput, estoqueUncheckedUpdateWithoutSalaInput>
  }

  export type estoqueUpdateManyWithWhereWithoutSalaInput = {
    where: estoqueScalarWhereInput
    data: XOR<estoqueUpdateManyMutationInput, estoqueUncheckedUpdateManyWithoutSalaInput>
  }

  export type produtoCreateWithoutMovimentacoesInput = {
    nome: string
    descricao?: string | null
    categoria?: string | null
    codigo_publico?: string | null
    preco_unitario?: number | null
    unidade_medida?: string | null
    estoque?: estoqueCreateNestedManyWithoutProdutoInput
    compras?: compraCreateNestedManyWithoutProdutoInput
    alertas?: alertaCreateNestedManyWithoutProdutoInput
    previsoes?: previsao_demandaCreateNestedManyWithoutProdutoInput
    historicos?: historico_previsaoCreateNestedManyWithoutProdutoInput
    garantias?: garantiaCreateNestedManyWithoutProdutoInput
    fornecedor?: fornecedorCreateNestedOneWithoutProdutosInput
  }

  export type produtoUncheckedCreateWithoutMovimentacoesInput = {
    id_produto?: number
    nome: string
    descricao?: string | null
    categoria?: string | null
    codigo_publico?: string | null
    preco_unitario?: number | null
    unidade_medida?: string | null
    id_fornecedor?: number | null
    estoque?: estoqueUncheckedCreateNestedManyWithoutProdutoInput
    compras?: compraUncheckedCreateNestedManyWithoutProdutoInput
    alertas?: alertaUncheckedCreateNestedManyWithoutProdutoInput
    previsoes?: previsao_demandaUncheckedCreateNestedManyWithoutProdutoInput
    historicos?: historico_previsaoUncheckedCreateNestedManyWithoutProdutoInput
    garantias?: garantiaUncheckedCreateNestedManyWithoutProdutoInput
  }

  export type produtoCreateOrConnectWithoutMovimentacoesInput = {
    where: produtoWhereUniqueInput
    create: XOR<produtoCreateWithoutMovimentacoesInput, produtoUncheckedCreateWithoutMovimentacoesInput>
  }

  export type usuarioCreateWithoutMovimentacoesInput = {
    nome: string
    email: string
    senha_hash: string
    ativo: boolean
    criado_em?: Date | string
    CPF?: string | null
    tipo_usuario: tipo_usuarioCreateNestedOneWithoutUsuariosInput
    compras?: compraCreateNestedManyWithoutUsuarioInput
    relatorios?: relatorioCreateNestedManyWithoutUsuarioInput
    garantias?: garantiaCreateNestedManyWithoutUsuarioInput
  }

  export type usuarioUncheckedCreateWithoutMovimentacoesInput = {
    id_usuario?: number
    nome: string
    email: string
    senha_hash: string
    id_tipo_usuario: number
    ativo: boolean
    criado_em?: Date | string
    CPF?: string | null
    compras?: compraUncheckedCreateNestedManyWithoutUsuarioInput
    relatorios?: relatorioUncheckedCreateNestedManyWithoutUsuarioInput
    garantias?: garantiaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type usuarioCreateOrConnectWithoutMovimentacoesInput = {
    where: usuarioWhereUniqueInput
    create: XOR<usuarioCreateWithoutMovimentacoesInput, usuarioUncheckedCreateWithoutMovimentacoesInput>
  }

  export type produtoUpsertWithoutMovimentacoesInput = {
    update: XOR<produtoUpdateWithoutMovimentacoesInput, produtoUncheckedUpdateWithoutMovimentacoesInput>
    create: XOR<produtoCreateWithoutMovimentacoesInput, produtoUncheckedCreateWithoutMovimentacoesInput>
    where?: produtoWhereInput
  }

  export type produtoUpdateToOneWithWhereWithoutMovimentacoesInput = {
    where?: produtoWhereInput
    data: XOR<produtoUpdateWithoutMovimentacoesInput, produtoUncheckedUpdateWithoutMovimentacoesInput>
  }

  export type produtoUpdateWithoutMovimentacoesInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_publico?: NullableStringFieldUpdateOperationsInput | string | null
    preco_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
    unidade_medida?: NullableStringFieldUpdateOperationsInput | string | null
    estoque?: estoqueUpdateManyWithoutProdutoNestedInput
    compras?: compraUpdateManyWithoutProdutoNestedInput
    alertas?: alertaUpdateManyWithoutProdutoNestedInput
    previsoes?: previsao_demandaUpdateManyWithoutProdutoNestedInput
    historicos?: historico_previsaoUpdateManyWithoutProdutoNestedInput
    garantias?: garantiaUpdateManyWithoutProdutoNestedInput
    fornecedor?: fornecedorUpdateOneWithoutProdutosNestedInput
  }

  export type produtoUncheckedUpdateWithoutMovimentacoesInput = {
    id_produto?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_publico?: NullableStringFieldUpdateOperationsInput | string | null
    preco_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
    unidade_medida?: NullableStringFieldUpdateOperationsInput | string | null
    id_fornecedor?: NullableIntFieldUpdateOperationsInput | number | null
    estoque?: estoqueUncheckedUpdateManyWithoutProdutoNestedInput
    compras?: compraUncheckedUpdateManyWithoutProdutoNestedInput
    alertas?: alertaUncheckedUpdateManyWithoutProdutoNestedInput
    previsoes?: previsao_demandaUncheckedUpdateManyWithoutProdutoNestedInput
    historicos?: historico_previsaoUncheckedUpdateManyWithoutProdutoNestedInput
    garantias?: garantiaUncheckedUpdateManyWithoutProdutoNestedInput
  }

  export type usuarioUpsertWithoutMovimentacoesInput = {
    update: XOR<usuarioUpdateWithoutMovimentacoesInput, usuarioUncheckedUpdateWithoutMovimentacoesInput>
    create: XOR<usuarioCreateWithoutMovimentacoesInput, usuarioUncheckedCreateWithoutMovimentacoesInput>
    where?: usuarioWhereInput
  }

  export type usuarioUpdateToOneWithWhereWithoutMovimentacoesInput = {
    where?: usuarioWhereInput
    data: XOR<usuarioUpdateWithoutMovimentacoesInput, usuarioUncheckedUpdateWithoutMovimentacoesInput>
  }

  export type usuarioUpdateWithoutMovimentacoesInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    CPF?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_usuario?: tipo_usuarioUpdateOneRequiredWithoutUsuariosNestedInput
    compras?: compraUpdateManyWithoutUsuarioNestedInput
    relatorios?: relatorioUpdateManyWithoutUsuarioNestedInput
    garantias?: garantiaUpdateManyWithoutUsuarioNestedInput
  }

  export type usuarioUncheckedUpdateWithoutMovimentacoesInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    id_tipo_usuario?: IntFieldUpdateOperationsInput | number
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    CPF?: NullableStringFieldUpdateOperationsInput | string | null
    compras?: compraUncheckedUpdateManyWithoutUsuarioNestedInput
    relatorios?: relatorioUncheckedUpdateManyWithoutUsuarioNestedInput
    garantias?: garantiaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type produtoCreateWithoutAlertasInput = {
    nome: string
    descricao?: string | null
    categoria?: string | null
    codigo_publico?: string | null
    preco_unitario?: number | null
    unidade_medida?: string | null
    estoque?: estoqueCreateNestedManyWithoutProdutoInput
    compras?: compraCreateNestedManyWithoutProdutoInput
    previsoes?: previsao_demandaCreateNestedManyWithoutProdutoInput
    historicos?: historico_previsaoCreateNestedManyWithoutProdutoInput
    movimentacoes?: movimentacaoCreateNestedManyWithoutProdutoInput
    garantias?: garantiaCreateNestedManyWithoutProdutoInput
    fornecedor?: fornecedorCreateNestedOneWithoutProdutosInput
  }

  export type produtoUncheckedCreateWithoutAlertasInput = {
    id_produto?: number
    nome: string
    descricao?: string | null
    categoria?: string | null
    codigo_publico?: string | null
    preco_unitario?: number | null
    unidade_medida?: string | null
    id_fornecedor?: number | null
    estoque?: estoqueUncheckedCreateNestedManyWithoutProdutoInput
    compras?: compraUncheckedCreateNestedManyWithoutProdutoInput
    previsoes?: previsao_demandaUncheckedCreateNestedManyWithoutProdutoInput
    historicos?: historico_previsaoUncheckedCreateNestedManyWithoutProdutoInput
    movimentacoes?: movimentacaoUncheckedCreateNestedManyWithoutProdutoInput
    garantias?: garantiaUncheckedCreateNestedManyWithoutProdutoInput
  }

  export type produtoCreateOrConnectWithoutAlertasInput = {
    where: produtoWhereUniqueInput
    create: XOR<produtoCreateWithoutAlertasInput, produtoUncheckedCreateWithoutAlertasInput>
  }

  export type produtoUpsertWithoutAlertasInput = {
    update: XOR<produtoUpdateWithoutAlertasInput, produtoUncheckedUpdateWithoutAlertasInput>
    create: XOR<produtoCreateWithoutAlertasInput, produtoUncheckedCreateWithoutAlertasInput>
    where?: produtoWhereInput
  }

  export type produtoUpdateToOneWithWhereWithoutAlertasInput = {
    where?: produtoWhereInput
    data: XOR<produtoUpdateWithoutAlertasInput, produtoUncheckedUpdateWithoutAlertasInput>
  }

  export type produtoUpdateWithoutAlertasInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_publico?: NullableStringFieldUpdateOperationsInput | string | null
    preco_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
    unidade_medida?: NullableStringFieldUpdateOperationsInput | string | null
    estoque?: estoqueUpdateManyWithoutProdutoNestedInput
    compras?: compraUpdateManyWithoutProdutoNestedInput
    previsoes?: previsao_demandaUpdateManyWithoutProdutoNestedInput
    historicos?: historico_previsaoUpdateManyWithoutProdutoNestedInput
    movimentacoes?: movimentacaoUpdateManyWithoutProdutoNestedInput
    garantias?: garantiaUpdateManyWithoutProdutoNestedInput
    fornecedor?: fornecedorUpdateOneWithoutProdutosNestedInput
  }

  export type produtoUncheckedUpdateWithoutAlertasInput = {
    id_produto?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_publico?: NullableStringFieldUpdateOperationsInput | string | null
    preco_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
    unidade_medida?: NullableStringFieldUpdateOperationsInput | string | null
    id_fornecedor?: NullableIntFieldUpdateOperationsInput | number | null
    estoque?: estoqueUncheckedUpdateManyWithoutProdutoNestedInput
    compras?: compraUncheckedUpdateManyWithoutProdutoNestedInput
    previsoes?: previsao_demandaUncheckedUpdateManyWithoutProdutoNestedInput
    historicos?: historico_previsaoUncheckedUpdateManyWithoutProdutoNestedInput
    movimentacoes?: movimentacaoUncheckedUpdateManyWithoutProdutoNestedInput
    garantias?: garantiaUncheckedUpdateManyWithoutProdutoNestedInput
  }

  export type produtoCreateWithoutPrevisoesInput = {
    nome: string
    descricao?: string | null
    categoria?: string | null
    codigo_publico?: string | null
    preco_unitario?: number | null
    unidade_medida?: string | null
    estoque?: estoqueCreateNestedManyWithoutProdutoInput
    compras?: compraCreateNestedManyWithoutProdutoInput
    alertas?: alertaCreateNestedManyWithoutProdutoInput
    historicos?: historico_previsaoCreateNestedManyWithoutProdutoInput
    movimentacoes?: movimentacaoCreateNestedManyWithoutProdutoInput
    garantias?: garantiaCreateNestedManyWithoutProdutoInput
    fornecedor?: fornecedorCreateNestedOneWithoutProdutosInput
  }

  export type produtoUncheckedCreateWithoutPrevisoesInput = {
    id_produto?: number
    nome: string
    descricao?: string | null
    categoria?: string | null
    codigo_publico?: string | null
    preco_unitario?: number | null
    unidade_medida?: string | null
    id_fornecedor?: number | null
    estoque?: estoqueUncheckedCreateNestedManyWithoutProdutoInput
    compras?: compraUncheckedCreateNestedManyWithoutProdutoInput
    alertas?: alertaUncheckedCreateNestedManyWithoutProdutoInput
    historicos?: historico_previsaoUncheckedCreateNestedManyWithoutProdutoInput
    movimentacoes?: movimentacaoUncheckedCreateNestedManyWithoutProdutoInput
    garantias?: garantiaUncheckedCreateNestedManyWithoutProdutoInput
  }

  export type produtoCreateOrConnectWithoutPrevisoesInput = {
    where: produtoWhereUniqueInput
    create: XOR<produtoCreateWithoutPrevisoesInput, produtoUncheckedCreateWithoutPrevisoesInput>
  }

  export type historico_previsaoCreateWithoutPrevisaoInput = {
    demanda_real: number
    diferenca: number
    precisao_modelo?: number | null
    produto: produtoCreateNestedOneWithoutHistoricosInput
    financeiro?: financeiroCreateNestedOneWithoutHistoricosInput
  }

  export type historico_previsaoUncheckedCreateWithoutPrevisaoInput = {
    id_historico?: number
    id_produto: number
    id_financeiro?: number | null
    demanda_real: number
    diferenca: number
    precisao_modelo?: number | null
  }

  export type historico_previsaoCreateOrConnectWithoutPrevisaoInput = {
    where: historico_previsaoWhereUniqueInput
    create: XOR<historico_previsaoCreateWithoutPrevisaoInput, historico_previsaoUncheckedCreateWithoutPrevisaoInput>
  }

  export type historico_previsaoCreateManyPrevisaoInputEnvelope = {
    data: historico_previsaoCreateManyPrevisaoInput | historico_previsaoCreateManyPrevisaoInput[]
  }

  export type produtoUpsertWithoutPrevisoesInput = {
    update: XOR<produtoUpdateWithoutPrevisoesInput, produtoUncheckedUpdateWithoutPrevisoesInput>
    create: XOR<produtoCreateWithoutPrevisoesInput, produtoUncheckedCreateWithoutPrevisoesInput>
    where?: produtoWhereInput
  }

  export type produtoUpdateToOneWithWhereWithoutPrevisoesInput = {
    where?: produtoWhereInput
    data: XOR<produtoUpdateWithoutPrevisoesInput, produtoUncheckedUpdateWithoutPrevisoesInput>
  }

  export type produtoUpdateWithoutPrevisoesInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_publico?: NullableStringFieldUpdateOperationsInput | string | null
    preco_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
    unidade_medida?: NullableStringFieldUpdateOperationsInput | string | null
    estoque?: estoqueUpdateManyWithoutProdutoNestedInput
    compras?: compraUpdateManyWithoutProdutoNestedInput
    alertas?: alertaUpdateManyWithoutProdutoNestedInput
    historicos?: historico_previsaoUpdateManyWithoutProdutoNestedInput
    movimentacoes?: movimentacaoUpdateManyWithoutProdutoNestedInput
    garantias?: garantiaUpdateManyWithoutProdutoNestedInput
    fornecedor?: fornecedorUpdateOneWithoutProdutosNestedInput
  }

  export type produtoUncheckedUpdateWithoutPrevisoesInput = {
    id_produto?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_publico?: NullableStringFieldUpdateOperationsInput | string | null
    preco_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
    unidade_medida?: NullableStringFieldUpdateOperationsInput | string | null
    id_fornecedor?: NullableIntFieldUpdateOperationsInput | number | null
    estoque?: estoqueUncheckedUpdateManyWithoutProdutoNestedInput
    compras?: compraUncheckedUpdateManyWithoutProdutoNestedInput
    alertas?: alertaUncheckedUpdateManyWithoutProdutoNestedInput
    historicos?: historico_previsaoUncheckedUpdateManyWithoutProdutoNestedInput
    movimentacoes?: movimentacaoUncheckedUpdateManyWithoutProdutoNestedInput
    garantias?: garantiaUncheckedUpdateManyWithoutProdutoNestedInput
  }

  export type historico_previsaoUpsertWithWhereUniqueWithoutPrevisaoInput = {
    where: historico_previsaoWhereUniqueInput
    update: XOR<historico_previsaoUpdateWithoutPrevisaoInput, historico_previsaoUncheckedUpdateWithoutPrevisaoInput>
    create: XOR<historico_previsaoCreateWithoutPrevisaoInput, historico_previsaoUncheckedCreateWithoutPrevisaoInput>
  }

  export type historico_previsaoUpdateWithWhereUniqueWithoutPrevisaoInput = {
    where: historico_previsaoWhereUniqueInput
    data: XOR<historico_previsaoUpdateWithoutPrevisaoInput, historico_previsaoUncheckedUpdateWithoutPrevisaoInput>
  }

  export type historico_previsaoUpdateManyWithWhereWithoutPrevisaoInput = {
    where: historico_previsaoScalarWhereInput
    data: XOR<historico_previsaoUpdateManyMutationInput, historico_previsaoUncheckedUpdateManyWithoutPrevisaoInput>
  }

  export type compraCreateWithoutFornecedorInput = {
    data_pedido: Date | string
    data_recebimento?: Date | string | null
    valor_total: number
    origem?: string | null
    observacoes?: string | null
    produto: produtoCreateNestedOneWithoutComprasInput
    financeiro: financeiroCreateNestedOneWithoutComprasInput
    usuario: usuarioCreateNestedOneWithoutComprasInput
  }

  export type compraUncheckedCreateWithoutFornecedorInput = {
    id_compra?: number
    id_produto: number
    id_financeiro: number
    id_usuario: number
    data_pedido: Date | string
    data_recebimento?: Date | string | null
    valor_total: number
    origem?: string | null
    observacoes?: string | null
  }

  export type compraCreateOrConnectWithoutFornecedorInput = {
    where: compraWhereUniqueInput
    create: XOR<compraCreateWithoutFornecedorInput, compraUncheckedCreateWithoutFornecedorInput>
  }

  export type compraCreateManyFornecedorInputEnvelope = {
    data: compraCreateManyFornecedorInput | compraCreateManyFornecedorInput[]
  }

  export type produtoCreateWithoutFornecedorInput = {
    nome: string
    descricao?: string | null
    categoria?: string | null
    codigo_publico?: string | null
    preco_unitario?: number | null
    unidade_medida?: string | null
    estoque?: estoqueCreateNestedManyWithoutProdutoInput
    compras?: compraCreateNestedManyWithoutProdutoInput
    alertas?: alertaCreateNestedManyWithoutProdutoInput
    previsoes?: previsao_demandaCreateNestedManyWithoutProdutoInput
    historicos?: historico_previsaoCreateNestedManyWithoutProdutoInput
    movimentacoes?: movimentacaoCreateNestedManyWithoutProdutoInput
    garantias?: garantiaCreateNestedManyWithoutProdutoInput
  }

  export type produtoUncheckedCreateWithoutFornecedorInput = {
    id_produto?: number
    nome: string
    descricao?: string | null
    categoria?: string | null
    codigo_publico?: string | null
    preco_unitario?: number | null
    unidade_medida?: string | null
    estoque?: estoqueUncheckedCreateNestedManyWithoutProdutoInput
    compras?: compraUncheckedCreateNestedManyWithoutProdutoInput
    alertas?: alertaUncheckedCreateNestedManyWithoutProdutoInput
    previsoes?: previsao_demandaUncheckedCreateNestedManyWithoutProdutoInput
    historicos?: historico_previsaoUncheckedCreateNestedManyWithoutProdutoInput
    movimentacoes?: movimentacaoUncheckedCreateNestedManyWithoutProdutoInput
    garantias?: garantiaUncheckedCreateNestedManyWithoutProdutoInput
  }

  export type produtoCreateOrConnectWithoutFornecedorInput = {
    where: produtoWhereUniqueInput
    create: XOR<produtoCreateWithoutFornecedorInput, produtoUncheckedCreateWithoutFornecedorInput>
  }

  export type produtoCreateManyFornecedorInputEnvelope = {
    data: produtoCreateManyFornecedorInput | produtoCreateManyFornecedorInput[]
  }

  export type compraUpsertWithWhereUniqueWithoutFornecedorInput = {
    where: compraWhereUniqueInput
    update: XOR<compraUpdateWithoutFornecedorInput, compraUncheckedUpdateWithoutFornecedorInput>
    create: XOR<compraCreateWithoutFornecedorInput, compraUncheckedCreateWithoutFornecedorInput>
  }

  export type compraUpdateWithWhereUniqueWithoutFornecedorInput = {
    where: compraWhereUniqueInput
    data: XOR<compraUpdateWithoutFornecedorInput, compraUncheckedUpdateWithoutFornecedorInput>
  }

  export type compraUpdateManyWithWhereWithoutFornecedorInput = {
    where: compraScalarWhereInput
    data: XOR<compraUpdateManyMutationInput, compraUncheckedUpdateManyWithoutFornecedorInput>
  }

  export type produtoUpsertWithWhereUniqueWithoutFornecedorInput = {
    where: produtoWhereUniqueInput
    update: XOR<produtoUpdateWithoutFornecedorInput, produtoUncheckedUpdateWithoutFornecedorInput>
    create: XOR<produtoCreateWithoutFornecedorInput, produtoUncheckedCreateWithoutFornecedorInput>
  }

  export type produtoUpdateWithWhereUniqueWithoutFornecedorInput = {
    where: produtoWhereUniqueInput
    data: XOR<produtoUpdateWithoutFornecedorInput, produtoUncheckedUpdateWithoutFornecedorInput>
  }

  export type produtoUpdateManyWithWhereWithoutFornecedorInput = {
    where: produtoScalarWhereInput
    data: XOR<produtoUpdateManyMutationInput, produtoUncheckedUpdateManyWithoutFornecedorInput>
  }

  export type produtoScalarWhereInput = {
    AND?: produtoScalarWhereInput | produtoScalarWhereInput[]
    OR?: produtoScalarWhereInput[]
    NOT?: produtoScalarWhereInput | produtoScalarWhereInput[]
    id_produto?: IntFilter<"produto"> | number
    nome?: StringFilter<"produto"> | string
    descricao?: StringNullableFilter<"produto"> | string | null
    categoria?: StringNullableFilter<"produto"> | string | null
    codigo_publico?: StringNullableFilter<"produto"> | string | null
    preco_unitario?: FloatNullableFilter<"produto"> | number | null
    unidade_medida?: StringNullableFilter<"produto"> | string | null
    id_fornecedor?: IntNullableFilter<"produto"> | number | null
  }

  export type produtoCreateWithoutHistoricosInput = {
    nome: string
    descricao?: string | null
    categoria?: string | null
    codigo_publico?: string | null
    preco_unitario?: number | null
    unidade_medida?: string | null
    estoque?: estoqueCreateNestedManyWithoutProdutoInput
    compras?: compraCreateNestedManyWithoutProdutoInput
    alertas?: alertaCreateNestedManyWithoutProdutoInput
    previsoes?: previsao_demandaCreateNestedManyWithoutProdutoInput
    movimentacoes?: movimentacaoCreateNestedManyWithoutProdutoInput
    garantias?: garantiaCreateNestedManyWithoutProdutoInput
    fornecedor?: fornecedorCreateNestedOneWithoutProdutosInput
  }

  export type produtoUncheckedCreateWithoutHistoricosInput = {
    id_produto?: number
    nome: string
    descricao?: string | null
    categoria?: string | null
    codigo_publico?: string | null
    preco_unitario?: number | null
    unidade_medida?: string | null
    id_fornecedor?: number | null
    estoque?: estoqueUncheckedCreateNestedManyWithoutProdutoInput
    compras?: compraUncheckedCreateNestedManyWithoutProdutoInput
    alertas?: alertaUncheckedCreateNestedManyWithoutProdutoInput
    previsoes?: previsao_demandaUncheckedCreateNestedManyWithoutProdutoInput
    movimentacoes?: movimentacaoUncheckedCreateNestedManyWithoutProdutoInput
    garantias?: garantiaUncheckedCreateNestedManyWithoutProdutoInput
  }

  export type produtoCreateOrConnectWithoutHistoricosInput = {
    where: produtoWhereUniqueInput
    create: XOR<produtoCreateWithoutHistoricosInput, produtoUncheckedCreateWithoutHistoricosInput>
  }

  export type previsao_demandaCreateWithoutHistoricosInput = {
    data_prevista: Date | string
    demanda_prevista: number
    id_financeiro?: number | null
    confianca_modelo?: number | null
    produto: produtoCreateNestedOneWithoutPrevisoesInput
  }

  export type previsao_demandaUncheckedCreateWithoutHistoricosInput = {
    id_previsao?: number
    id_produto: number
    data_prevista: Date | string
    demanda_prevista: number
    id_financeiro?: number | null
    confianca_modelo?: number | null
  }

  export type previsao_demandaCreateOrConnectWithoutHistoricosInput = {
    where: previsao_demandaWhereUniqueInput
    create: XOR<previsao_demandaCreateWithoutHistoricosInput, previsao_demandaUncheckedCreateWithoutHistoricosInput>
  }

  export type financeiroCreateWithoutHistoricosInput = {
    tipo: string
    descricao: string
    valor: number
    data_movimento: Date | string
    status?: string | null
    compras?: compraCreateNestedManyWithoutFinanceiroInput
  }

  export type financeiroUncheckedCreateWithoutHistoricosInput = {
    id_financeiro?: number
    tipo: string
    descricao: string
    valor: number
    data_movimento: Date | string
    status?: string | null
    compras?: compraUncheckedCreateNestedManyWithoutFinanceiroInput
  }

  export type financeiroCreateOrConnectWithoutHistoricosInput = {
    where: financeiroWhereUniqueInput
    create: XOR<financeiroCreateWithoutHistoricosInput, financeiroUncheckedCreateWithoutHistoricosInput>
  }

  export type produtoUpsertWithoutHistoricosInput = {
    update: XOR<produtoUpdateWithoutHistoricosInput, produtoUncheckedUpdateWithoutHistoricosInput>
    create: XOR<produtoCreateWithoutHistoricosInput, produtoUncheckedCreateWithoutHistoricosInput>
    where?: produtoWhereInput
  }

  export type produtoUpdateToOneWithWhereWithoutHistoricosInput = {
    where?: produtoWhereInput
    data: XOR<produtoUpdateWithoutHistoricosInput, produtoUncheckedUpdateWithoutHistoricosInput>
  }

  export type produtoUpdateWithoutHistoricosInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_publico?: NullableStringFieldUpdateOperationsInput | string | null
    preco_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
    unidade_medida?: NullableStringFieldUpdateOperationsInput | string | null
    estoque?: estoqueUpdateManyWithoutProdutoNestedInput
    compras?: compraUpdateManyWithoutProdutoNestedInput
    alertas?: alertaUpdateManyWithoutProdutoNestedInput
    previsoes?: previsao_demandaUpdateManyWithoutProdutoNestedInput
    movimentacoes?: movimentacaoUpdateManyWithoutProdutoNestedInput
    garantias?: garantiaUpdateManyWithoutProdutoNestedInput
    fornecedor?: fornecedorUpdateOneWithoutProdutosNestedInput
  }

  export type produtoUncheckedUpdateWithoutHistoricosInput = {
    id_produto?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_publico?: NullableStringFieldUpdateOperationsInput | string | null
    preco_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
    unidade_medida?: NullableStringFieldUpdateOperationsInput | string | null
    id_fornecedor?: NullableIntFieldUpdateOperationsInput | number | null
    estoque?: estoqueUncheckedUpdateManyWithoutProdutoNestedInput
    compras?: compraUncheckedUpdateManyWithoutProdutoNestedInput
    alertas?: alertaUncheckedUpdateManyWithoutProdutoNestedInput
    previsoes?: previsao_demandaUncheckedUpdateManyWithoutProdutoNestedInput
    movimentacoes?: movimentacaoUncheckedUpdateManyWithoutProdutoNestedInput
    garantias?: garantiaUncheckedUpdateManyWithoutProdutoNestedInput
  }

  export type previsao_demandaUpsertWithoutHistoricosInput = {
    update: XOR<previsao_demandaUpdateWithoutHistoricosInput, previsao_demandaUncheckedUpdateWithoutHistoricosInput>
    create: XOR<previsao_demandaCreateWithoutHistoricosInput, previsao_demandaUncheckedCreateWithoutHistoricosInput>
    where?: previsao_demandaWhereInput
  }

  export type previsao_demandaUpdateToOneWithWhereWithoutHistoricosInput = {
    where?: previsao_demandaWhereInput
    data: XOR<previsao_demandaUpdateWithoutHistoricosInput, previsao_demandaUncheckedUpdateWithoutHistoricosInput>
  }

  export type previsao_demandaUpdateWithoutHistoricosInput = {
    data_prevista?: DateTimeFieldUpdateOperationsInput | Date | string
    demanda_prevista?: IntFieldUpdateOperationsInput | number
    id_financeiro?: NullableIntFieldUpdateOperationsInput | number | null
    confianca_modelo?: NullableFloatFieldUpdateOperationsInput | number | null
    produto?: produtoUpdateOneRequiredWithoutPrevisoesNestedInput
  }

  export type previsao_demandaUncheckedUpdateWithoutHistoricosInput = {
    id_previsao?: IntFieldUpdateOperationsInput | number
    id_produto?: IntFieldUpdateOperationsInput | number
    data_prevista?: DateTimeFieldUpdateOperationsInput | Date | string
    demanda_prevista?: IntFieldUpdateOperationsInput | number
    id_financeiro?: NullableIntFieldUpdateOperationsInput | number | null
    confianca_modelo?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type financeiroUpsertWithoutHistoricosInput = {
    update: XOR<financeiroUpdateWithoutHistoricosInput, financeiroUncheckedUpdateWithoutHistoricosInput>
    create: XOR<financeiroCreateWithoutHistoricosInput, financeiroUncheckedCreateWithoutHistoricosInput>
    where?: financeiroWhereInput
  }

  export type financeiroUpdateToOneWithWhereWithoutHistoricosInput = {
    where?: financeiroWhereInput
    data: XOR<financeiroUpdateWithoutHistoricosInput, financeiroUncheckedUpdateWithoutHistoricosInput>
  }

  export type financeiroUpdateWithoutHistoricosInput = {
    tipo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    data_movimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    compras?: compraUpdateManyWithoutFinanceiroNestedInput
  }

  export type financeiroUncheckedUpdateWithoutHistoricosInput = {
    id_financeiro?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    data_movimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    compras?: compraUncheckedUpdateManyWithoutFinanceiroNestedInput
  }

  export type usuarioCreateWithoutRelatoriosInput = {
    nome: string
    email: string
    senha_hash: string
    ativo: boolean
    criado_em?: Date | string
    CPF?: string | null
    tipo_usuario: tipo_usuarioCreateNestedOneWithoutUsuariosInput
    compras?: compraCreateNestedManyWithoutUsuarioInput
    movimentacoes?: movimentacaoCreateNestedManyWithoutUsuarioInput
    garantias?: garantiaCreateNestedManyWithoutUsuarioInput
  }

  export type usuarioUncheckedCreateWithoutRelatoriosInput = {
    id_usuario?: number
    nome: string
    email: string
    senha_hash: string
    id_tipo_usuario: number
    ativo: boolean
    criado_em?: Date | string
    CPF?: string | null
    compras?: compraUncheckedCreateNestedManyWithoutUsuarioInput
    movimentacoes?: movimentacaoUncheckedCreateNestedManyWithoutUsuarioInput
    garantias?: garantiaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type usuarioCreateOrConnectWithoutRelatoriosInput = {
    where: usuarioWhereUniqueInput
    create: XOR<usuarioCreateWithoutRelatoriosInput, usuarioUncheckedCreateWithoutRelatoriosInput>
  }

  export type usuarioUpsertWithoutRelatoriosInput = {
    update: XOR<usuarioUpdateWithoutRelatoriosInput, usuarioUncheckedUpdateWithoutRelatoriosInput>
    create: XOR<usuarioCreateWithoutRelatoriosInput, usuarioUncheckedCreateWithoutRelatoriosInput>
    where?: usuarioWhereInput
  }

  export type usuarioUpdateToOneWithWhereWithoutRelatoriosInput = {
    where?: usuarioWhereInput
    data: XOR<usuarioUpdateWithoutRelatoriosInput, usuarioUncheckedUpdateWithoutRelatoriosInput>
  }

  export type usuarioUpdateWithoutRelatoriosInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    CPF?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_usuario?: tipo_usuarioUpdateOneRequiredWithoutUsuariosNestedInput
    compras?: compraUpdateManyWithoutUsuarioNestedInput
    movimentacoes?: movimentacaoUpdateManyWithoutUsuarioNestedInput
    garantias?: garantiaUpdateManyWithoutUsuarioNestedInput
  }

  export type usuarioUncheckedUpdateWithoutRelatoriosInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    id_tipo_usuario?: IntFieldUpdateOperationsInput | number
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    CPF?: NullableStringFieldUpdateOperationsInput | string | null
    compras?: compraUncheckedUpdateManyWithoutUsuarioNestedInput
    movimentacoes?: movimentacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    garantias?: garantiaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type produtoCreateWithoutGarantiasInput = {
    nome: string
    descricao?: string | null
    categoria?: string | null
    codigo_publico?: string | null
    preco_unitario?: number | null
    unidade_medida?: string | null
    estoque?: estoqueCreateNestedManyWithoutProdutoInput
    compras?: compraCreateNestedManyWithoutProdutoInput
    alertas?: alertaCreateNestedManyWithoutProdutoInput
    previsoes?: previsao_demandaCreateNestedManyWithoutProdutoInput
    historicos?: historico_previsaoCreateNestedManyWithoutProdutoInput
    movimentacoes?: movimentacaoCreateNestedManyWithoutProdutoInput
    fornecedor?: fornecedorCreateNestedOneWithoutProdutosInput
  }

  export type produtoUncheckedCreateWithoutGarantiasInput = {
    id_produto?: number
    nome: string
    descricao?: string | null
    categoria?: string | null
    codigo_publico?: string | null
    preco_unitario?: number | null
    unidade_medida?: string | null
    id_fornecedor?: number | null
    estoque?: estoqueUncheckedCreateNestedManyWithoutProdutoInput
    compras?: compraUncheckedCreateNestedManyWithoutProdutoInput
    alertas?: alertaUncheckedCreateNestedManyWithoutProdutoInput
    previsoes?: previsao_demandaUncheckedCreateNestedManyWithoutProdutoInput
    historicos?: historico_previsaoUncheckedCreateNestedManyWithoutProdutoInput
    movimentacoes?: movimentacaoUncheckedCreateNestedManyWithoutProdutoInput
  }

  export type produtoCreateOrConnectWithoutGarantiasInput = {
    where: produtoWhereUniqueInput
    create: XOR<produtoCreateWithoutGarantiasInput, produtoUncheckedCreateWithoutGarantiasInput>
  }

  export type usuarioCreateWithoutGarantiasInput = {
    nome: string
    email: string
    senha_hash: string
    ativo: boolean
    criado_em?: Date | string
    CPF?: string | null
    tipo_usuario: tipo_usuarioCreateNestedOneWithoutUsuariosInput
    compras?: compraCreateNestedManyWithoutUsuarioInput
    movimentacoes?: movimentacaoCreateNestedManyWithoutUsuarioInput
    relatorios?: relatorioCreateNestedManyWithoutUsuarioInput
  }

  export type usuarioUncheckedCreateWithoutGarantiasInput = {
    id_usuario?: number
    nome: string
    email: string
    senha_hash: string
    id_tipo_usuario: number
    ativo: boolean
    criado_em?: Date | string
    CPF?: string | null
    compras?: compraUncheckedCreateNestedManyWithoutUsuarioInput
    movimentacoes?: movimentacaoUncheckedCreateNestedManyWithoutUsuarioInput
    relatorios?: relatorioUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type usuarioCreateOrConnectWithoutGarantiasInput = {
    where: usuarioWhereUniqueInput
    create: XOR<usuarioCreateWithoutGarantiasInput, usuarioUncheckedCreateWithoutGarantiasInput>
  }

  export type produtoUpsertWithoutGarantiasInput = {
    update: XOR<produtoUpdateWithoutGarantiasInput, produtoUncheckedUpdateWithoutGarantiasInput>
    create: XOR<produtoCreateWithoutGarantiasInput, produtoUncheckedCreateWithoutGarantiasInput>
    where?: produtoWhereInput
  }

  export type produtoUpdateToOneWithWhereWithoutGarantiasInput = {
    where?: produtoWhereInput
    data: XOR<produtoUpdateWithoutGarantiasInput, produtoUncheckedUpdateWithoutGarantiasInput>
  }

  export type produtoUpdateWithoutGarantiasInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_publico?: NullableStringFieldUpdateOperationsInput | string | null
    preco_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
    unidade_medida?: NullableStringFieldUpdateOperationsInput | string | null
    estoque?: estoqueUpdateManyWithoutProdutoNestedInput
    compras?: compraUpdateManyWithoutProdutoNestedInput
    alertas?: alertaUpdateManyWithoutProdutoNestedInput
    previsoes?: previsao_demandaUpdateManyWithoutProdutoNestedInput
    historicos?: historico_previsaoUpdateManyWithoutProdutoNestedInput
    movimentacoes?: movimentacaoUpdateManyWithoutProdutoNestedInput
    fornecedor?: fornecedorUpdateOneWithoutProdutosNestedInput
  }

  export type produtoUncheckedUpdateWithoutGarantiasInput = {
    id_produto?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_publico?: NullableStringFieldUpdateOperationsInput | string | null
    preco_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
    unidade_medida?: NullableStringFieldUpdateOperationsInput | string | null
    id_fornecedor?: NullableIntFieldUpdateOperationsInput | number | null
    estoque?: estoqueUncheckedUpdateManyWithoutProdutoNestedInput
    compras?: compraUncheckedUpdateManyWithoutProdutoNestedInput
    alertas?: alertaUncheckedUpdateManyWithoutProdutoNestedInput
    previsoes?: previsao_demandaUncheckedUpdateManyWithoutProdutoNestedInput
    historicos?: historico_previsaoUncheckedUpdateManyWithoutProdutoNestedInput
    movimentacoes?: movimentacaoUncheckedUpdateManyWithoutProdutoNestedInput
  }

  export type usuarioUpsertWithoutGarantiasInput = {
    update: XOR<usuarioUpdateWithoutGarantiasInput, usuarioUncheckedUpdateWithoutGarantiasInput>
    create: XOR<usuarioCreateWithoutGarantiasInput, usuarioUncheckedCreateWithoutGarantiasInput>
    where?: usuarioWhereInput
  }

  export type usuarioUpdateToOneWithWhereWithoutGarantiasInput = {
    where?: usuarioWhereInput
    data: XOR<usuarioUpdateWithoutGarantiasInput, usuarioUncheckedUpdateWithoutGarantiasInput>
  }

  export type usuarioUpdateWithoutGarantiasInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    CPF?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_usuario?: tipo_usuarioUpdateOneRequiredWithoutUsuariosNestedInput
    compras?: compraUpdateManyWithoutUsuarioNestedInput
    movimentacoes?: movimentacaoUpdateManyWithoutUsuarioNestedInput
    relatorios?: relatorioUpdateManyWithoutUsuarioNestedInput
  }

  export type usuarioUncheckedUpdateWithoutGarantiasInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    id_tipo_usuario?: IntFieldUpdateOperationsInput | number
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    CPF?: NullableStringFieldUpdateOperationsInput | string | null
    compras?: compraUncheckedUpdateManyWithoutUsuarioNestedInput
    movimentacoes?: movimentacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    relatorios?: relatorioUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type compraCreateManyUsuarioInput = {
    id_compra?: number
    id_produto: number
    id_fornecedor: number
    id_financeiro: number
    data_pedido: Date | string
    data_recebimento?: Date | string | null
    valor_total: number
    origem?: string | null
    observacoes?: string | null
  }

  export type movimentacaoCreateManyUsuarioInput = {
    id_movimentacao?: number
    id_produto: number
    tipo_movimentacao: string
    origem?: string | null
    data_movimento: Date | string
    status?: string | null
    observacao?: string | null
  }

  export type relatorioCreateManyUsuarioInput = {
    id_relatorio?: number
    tipo_relatorio: string
    caminho_arquivo: string
    gerado_por: string
    gerado_em: Date | string
    status?: string | null
  }

  export type garantiaCreateManyUsuarioInput = {
    id_garantia?: number
    id_produto: number
    data_inicio: Date | string
    data_fim: Date | string
    descricao?: string | null
    status?: string
  }

  export type compraUpdateWithoutUsuarioInput = {
    data_pedido?: DateTimeFieldUpdateOperationsInput | Date | string
    data_recebimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor_total?: FloatFieldUpdateOperationsInput | number
    origem?: NullableStringFieldUpdateOperationsInput | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    produto?: produtoUpdateOneRequiredWithoutComprasNestedInput
    fornecedor?: fornecedorUpdateOneRequiredWithoutComprasNestedInput
    financeiro?: financeiroUpdateOneRequiredWithoutComprasNestedInput
  }

  export type compraUncheckedUpdateWithoutUsuarioInput = {
    id_compra?: IntFieldUpdateOperationsInput | number
    id_produto?: IntFieldUpdateOperationsInput | number
    id_fornecedor?: IntFieldUpdateOperationsInput | number
    id_financeiro?: IntFieldUpdateOperationsInput | number
    data_pedido?: DateTimeFieldUpdateOperationsInput | Date | string
    data_recebimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor_total?: FloatFieldUpdateOperationsInput | number
    origem?: NullableStringFieldUpdateOperationsInput | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type compraUncheckedUpdateManyWithoutUsuarioInput = {
    id_compra?: IntFieldUpdateOperationsInput | number
    id_produto?: IntFieldUpdateOperationsInput | number
    id_fornecedor?: IntFieldUpdateOperationsInput | number
    id_financeiro?: IntFieldUpdateOperationsInput | number
    data_pedido?: DateTimeFieldUpdateOperationsInput | Date | string
    data_recebimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor_total?: FloatFieldUpdateOperationsInput | number
    origem?: NullableStringFieldUpdateOperationsInput | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type movimentacaoUpdateWithoutUsuarioInput = {
    tipo_movimentacao?: StringFieldUpdateOperationsInput | string
    origem?: NullableStringFieldUpdateOperationsInput | string | null
    data_movimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
    produto?: produtoUpdateOneRequiredWithoutMovimentacoesNestedInput
  }

  export type movimentacaoUncheckedUpdateWithoutUsuarioInput = {
    id_movimentacao?: IntFieldUpdateOperationsInput | number
    id_produto?: IntFieldUpdateOperationsInput | number
    tipo_movimentacao?: StringFieldUpdateOperationsInput | string
    origem?: NullableStringFieldUpdateOperationsInput | string | null
    data_movimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type movimentacaoUncheckedUpdateManyWithoutUsuarioInput = {
    id_movimentacao?: IntFieldUpdateOperationsInput | number
    id_produto?: IntFieldUpdateOperationsInput | number
    tipo_movimentacao?: StringFieldUpdateOperationsInput | string
    origem?: NullableStringFieldUpdateOperationsInput | string | null
    data_movimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type relatorioUpdateWithoutUsuarioInput = {
    tipo_relatorio?: StringFieldUpdateOperationsInput | string
    caminho_arquivo?: StringFieldUpdateOperationsInput | string
    gerado_por?: StringFieldUpdateOperationsInput | string
    gerado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type relatorioUncheckedUpdateWithoutUsuarioInput = {
    id_relatorio?: IntFieldUpdateOperationsInput | number
    tipo_relatorio?: StringFieldUpdateOperationsInput | string
    caminho_arquivo?: StringFieldUpdateOperationsInput | string
    gerado_por?: StringFieldUpdateOperationsInput | string
    gerado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type relatorioUncheckedUpdateManyWithoutUsuarioInput = {
    id_relatorio?: IntFieldUpdateOperationsInput | number
    tipo_relatorio?: StringFieldUpdateOperationsInput | string
    caminho_arquivo?: StringFieldUpdateOperationsInput | string
    gerado_por?: StringFieldUpdateOperationsInput | string
    gerado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type garantiaUpdateWithoutUsuarioInput = {
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    produto?: produtoUpdateOneRequiredWithoutGarantiasNestedInput
  }

  export type garantiaUncheckedUpdateWithoutUsuarioInput = {
    id_garantia?: IntFieldUpdateOperationsInput | number
    id_produto?: IntFieldUpdateOperationsInput | number
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
  }

  export type garantiaUncheckedUpdateManyWithoutUsuarioInput = {
    id_garantia?: IntFieldUpdateOperationsInput | number
    id_produto?: IntFieldUpdateOperationsInput | number
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
  }

  export type usuarioCreateManyTipo_usuarioInput = {
    id_usuario?: number
    nome: string
    email: string
    senha_hash: string
    ativo: boolean
    criado_em?: Date | string
    CPF?: string | null
  }

  export type usuarioUpdateWithoutTipo_usuarioInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    CPF?: NullableStringFieldUpdateOperationsInput | string | null
    compras?: compraUpdateManyWithoutUsuarioNestedInput
    movimentacoes?: movimentacaoUpdateManyWithoutUsuarioNestedInput
    relatorios?: relatorioUpdateManyWithoutUsuarioNestedInput
    garantias?: garantiaUpdateManyWithoutUsuarioNestedInput
  }

  export type usuarioUncheckedUpdateWithoutTipo_usuarioInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    CPF?: NullableStringFieldUpdateOperationsInput | string | null
    compras?: compraUncheckedUpdateManyWithoutUsuarioNestedInput
    movimentacoes?: movimentacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    relatorios?: relatorioUncheckedUpdateManyWithoutUsuarioNestedInput
    garantias?: garantiaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type usuarioUncheckedUpdateManyWithoutTipo_usuarioInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    CPF?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type estoqueCreateManyProdutoInput = {
    id_estoque?: number
    id_sala: number
    quantidade_atual: number
    quantidade_minima: number
    ultima_atualizacao: Date | string
    status?: string | null
  }

  export type compraCreateManyProdutoInput = {
    id_compra?: number
    id_fornecedor: number
    id_financeiro: number
    id_usuario: number
    data_pedido: Date | string
    data_recebimento?: Date | string | null
    valor_total: number
    origem?: string | null
    observacoes?: string | null
  }

  export type alertaCreateManyProdutoInput = {
    id_alerta?: number
    tipo_alerta: string
    mensagem: string
  }

  export type previsao_demandaCreateManyProdutoInput = {
    id_previsao?: number
    data_prevista: Date | string
    demanda_prevista: number
    id_financeiro?: number | null
    confianca_modelo?: number | null
  }

  export type historico_previsaoCreateManyProdutoInput = {
    id_historico?: number
    id_previsao: number
    id_financeiro?: number | null
    demanda_real: number
    diferenca: number
    precisao_modelo?: number | null
  }

  export type movimentacaoCreateManyProdutoInput = {
    id_movimentacao?: number
    id_usuario: number
    tipo_movimentacao: string
    origem?: string | null
    data_movimento: Date | string
    status?: string | null
    observacao?: string | null
  }

  export type garantiaCreateManyProdutoInput = {
    id_garantia?: number
    id_usuario: number
    data_inicio: Date | string
    data_fim: Date | string
    descricao?: string | null
    status?: string
  }

  export type estoqueUpdateWithoutProdutoInput = {
    quantidade_atual?: IntFieldUpdateOperationsInput | number
    quantidade_minima?: IntFieldUpdateOperationsInput | number
    ultima_atualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    sala?: salaUpdateOneRequiredWithoutEstoquesNestedInput
  }

  export type estoqueUncheckedUpdateWithoutProdutoInput = {
    id_estoque?: IntFieldUpdateOperationsInput | number
    id_sala?: IntFieldUpdateOperationsInput | number
    quantidade_atual?: IntFieldUpdateOperationsInput | number
    quantidade_minima?: IntFieldUpdateOperationsInput | number
    ultima_atualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type estoqueUncheckedUpdateManyWithoutProdutoInput = {
    id_estoque?: IntFieldUpdateOperationsInput | number
    id_sala?: IntFieldUpdateOperationsInput | number
    quantidade_atual?: IntFieldUpdateOperationsInput | number
    quantidade_minima?: IntFieldUpdateOperationsInput | number
    ultima_atualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type compraUpdateWithoutProdutoInput = {
    data_pedido?: DateTimeFieldUpdateOperationsInput | Date | string
    data_recebimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor_total?: FloatFieldUpdateOperationsInput | number
    origem?: NullableStringFieldUpdateOperationsInput | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    fornecedor?: fornecedorUpdateOneRequiredWithoutComprasNestedInput
    financeiro?: financeiroUpdateOneRequiredWithoutComprasNestedInput
    usuario?: usuarioUpdateOneRequiredWithoutComprasNestedInput
  }

  export type compraUncheckedUpdateWithoutProdutoInput = {
    id_compra?: IntFieldUpdateOperationsInput | number
    id_fornecedor?: IntFieldUpdateOperationsInput | number
    id_financeiro?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    data_pedido?: DateTimeFieldUpdateOperationsInput | Date | string
    data_recebimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor_total?: FloatFieldUpdateOperationsInput | number
    origem?: NullableStringFieldUpdateOperationsInput | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type compraUncheckedUpdateManyWithoutProdutoInput = {
    id_compra?: IntFieldUpdateOperationsInput | number
    id_fornecedor?: IntFieldUpdateOperationsInput | number
    id_financeiro?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    data_pedido?: DateTimeFieldUpdateOperationsInput | Date | string
    data_recebimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor_total?: FloatFieldUpdateOperationsInput | number
    origem?: NullableStringFieldUpdateOperationsInput | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type alertaUpdateWithoutProdutoInput = {
    tipo_alerta?: StringFieldUpdateOperationsInput | string
    mensagem?: StringFieldUpdateOperationsInput | string
  }

  export type alertaUncheckedUpdateWithoutProdutoInput = {
    id_alerta?: IntFieldUpdateOperationsInput | number
    tipo_alerta?: StringFieldUpdateOperationsInput | string
    mensagem?: StringFieldUpdateOperationsInput | string
  }

  export type alertaUncheckedUpdateManyWithoutProdutoInput = {
    id_alerta?: IntFieldUpdateOperationsInput | number
    tipo_alerta?: StringFieldUpdateOperationsInput | string
    mensagem?: StringFieldUpdateOperationsInput | string
  }

  export type previsao_demandaUpdateWithoutProdutoInput = {
    data_prevista?: DateTimeFieldUpdateOperationsInput | Date | string
    demanda_prevista?: IntFieldUpdateOperationsInput | number
    id_financeiro?: NullableIntFieldUpdateOperationsInput | number | null
    confianca_modelo?: NullableFloatFieldUpdateOperationsInput | number | null
    historicos?: historico_previsaoUpdateManyWithoutPrevisaoNestedInput
  }

  export type previsao_demandaUncheckedUpdateWithoutProdutoInput = {
    id_previsao?: IntFieldUpdateOperationsInput | number
    data_prevista?: DateTimeFieldUpdateOperationsInput | Date | string
    demanda_prevista?: IntFieldUpdateOperationsInput | number
    id_financeiro?: NullableIntFieldUpdateOperationsInput | number | null
    confianca_modelo?: NullableFloatFieldUpdateOperationsInput | number | null
    historicos?: historico_previsaoUncheckedUpdateManyWithoutPrevisaoNestedInput
  }

  export type previsao_demandaUncheckedUpdateManyWithoutProdutoInput = {
    id_previsao?: IntFieldUpdateOperationsInput | number
    data_prevista?: DateTimeFieldUpdateOperationsInput | Date | string
    demanda_prevista?: IntFieldUpdateOperationsInput | number
    id_financeiro?: NullableIntFieldUpdateOperationsInput | number | null
    confianca_modelo?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type historico_previsaoUpdateWithoutProdutoInput = {
    demanda_real?: IntFieldUpdateOperationsInput | number
    diferenca?: IntFieldUpdateOperationsInput | number
    precisao_modelo?: NullableFloatFieldUpdateOperationsInput | number | null
    previsao?: previsao_demandaUpdateOneRequiredWithoutHistoricosNestedInput
    financeiro?: financeiroUpdateOneWithoutHistoricosNestedInput
  }

  export type historico_previsaoUncheckedUpdateWithoutProdutoInput = {
    id_historico?: IntFieldUpdateOperationsInput | number
    id_previsao?: IntFieldUpdateOperationsInput | number
    id_financeiro?: NullableIntFieldUpdateOperationsInput | number | null
    demanda_real?: IntFieldUpdateOperationsInput | number
    diferenca?: IntFieldUpdateOperationsInput | number
    precisao_modelo?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type historico_previsaoUncheckedUpdateManyWithoutProdutoInput = {
    id_historico?: IntFieldUpdateOperationsInput | number
    id_previsao?: IntFieldUpdateOperationsInput | number
    id_financeiro?: NullableIntFieldUpdateOperationsInput | number | null
    demanda_real?: IntFieldUpdateOperationsInput | number
    diferenca?: IntFieldUpdateOperationsInput | number
    precisao_modelo?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type movimentacaoUpdateWithoutProdutoInput = {
    tipo_movimentacao?: StringFieldUpdateOperationsInput | string
    origem?: NullableStringFieldUpdateOperationsInput | string | null
    data_movimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: usuarioUpdateOneRequiredWithoutMovimentacoesNestedInput
  }

  export type movimentacaoUncheckedUpdateWithoutProdutoInput = {
    id_movimentacao?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    tipo_movimentacao?: StringFieldUpdateOperationsInput | string
    origem?: NullableStringFieldUpdateOperationsInput | string | null
    data_movimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type movimentacaoUncheckedUpdateManyWithoutProdutoInput = {
    id_movimentacao?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    tipo_movimentacao?: StringFieldUpdateOperationsInput | string
    origem?: NullableStringFieldUpdateOperationsInput | string | null
    data_movimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type garantiaUpdateWithoutProdutoInput = {
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    usuario?: usuarioUpdateOneRequiredWithoutGarantiasNestedInput
  }

  export type garantiaUncheckedUpdateWithoutProdutoInput = {
    id_garantia?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
  }

  export type garantiaUncheckedUpdateManyWithoutProdutoInput = {
    id_garantia?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
  }

  export type compraCreateManyFinanceiroInput = {
    id_compra?: number
    id_produto: number
    id_fornecedor: number
    id_usuario: number
    data_pedido: Date | string
    data_recebimento?: Date | string | null
    valor_total: number
    origem?: string | null
    observacoes?: string | null
  }

  export type historico_previsaoCreateManyFinanceiroInput = {
    id_historico?: number
    id_produto: number
    id_previsao: number
    demanda_real: number
    diferenca: number
    precisao_modelo?: number | null
  }

  export type compraUpdateWithoutFinanceiroInput = {
    data_pedido?: DateTimeFieldUpdateOperationsInput | Date | string
    data_recebimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor_total?: FloatFieldUpdateOperationsInput | number
    origem?: NullableStringFieldUpdateOperationsInput | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    produto?: produtoUpdateOneRequiredWithoutComprasNestedInput
    fornecedor?: fornecedorUpdateOneRequiredWithoutComprasNestedInput
    usuario?: usuarioUpdateOneRequiredWithoutComprasNestedInput
  }

  export type compraUncheckedUpdateWithoutFinanceiroInput = {
    id_compra?: IntFieldUpdateOperationsInput | number
    id_produto?: IntFieldUpdateOperationsInput | number
    id_fornecedor?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    data_pedido?: DateTimeFieldUpdateOperationsInput | Date | string
    data_recebimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor_total?: FloatFieldUpdateOperationsInput | number
    origem?: NullableStringFieldUpdateOperationsInput | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type compraUncheckedUpdateManyWithoutFinanceiroInput = {
    id_compra?: IntFieldUpdateOperationsInput | number
    id_produto?: IntFieldUpdateOperationsInput | number
    id_fornecedor?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    data_pedido?: DateTimeFieldUpdateOperationsInput | Date | string
    data_recebimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor_total?: FloatFieldUpdateOperationsInput | number
    origem?: NullableStringFieldUpdateOperationsInput | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type historico_previsaoUpdateWithoutFinanceiroInput = {
    demanda_real?: IntFieldUpdateOperationsInput | number
    diferenca?: IntFieldUpdateOperationsInput | number
    precisao_modelo?: NullableFloatFieldUpdateOperationsInput | number | null
    produto?: produtoUpdateOneRequiredWithoutHistoricosNestedInput
    previsao?: previsao_demandaUpdateOneRequiredWithoutHistoricosNestedInput
  }

  export type historico_previsaoUncheckedUpdateWithoutFinanceiroInput = {
    id_historico?: IntFieldUpdateOperationsInput | number
    id_produto?: IntFieldUpdateOperationsInput | number
    id_previsao?: IntFieldUpdateOperationsInput | number
    demanda_real?: IntFieldUpdateOperationsInput | number
    diferenca?: IntFieldUpdateOperationsInput | number
    precisao_modelo?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type historico_previsaoUncheckedUpdateManyWithoutFinanceiroInput = {
    id_historico?: IntFieldUpdateOperationsInput | number
    id_produto?: IntFieldUpdateOperationsInput | number
    id_previsao?: IntFieldUpdateOperationsInput | number
    demanda_real?: IntFieldUpdateOperationsInput | number
    diferenca?: IntFieldUpdateOperationsInput | number
    precisao_modelo?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type estoqueCreateManySalaInput = {
    id_estoque?: number
    id_produto: number
    quantidade_atual: number
    quantidade_minima: number
    ultima_atualizacao: Date | string
    status?: string | null
  }

  export type estoqueUpdateWithoutSalaInput = {
    quantidade_atual?: IntFieldUpdateOperationsInput | number
    quantidade_minima?: IntFieldUpdateOperationsInput | number
    ultima_atualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    produto?: produtoUpdateOneRequiredWithoutEstoqueNestedInput
  }

  export type estoqueUncheckedUpdateWithoutSalaInput = {
    id_estoque?: IntFieldUpdateOperationsInput | number
    id_produto?: IntFieldUpdateOperationsInput | number
    quantidade_atual?: IntFieldUpdateOperationsInput | number
    quantidade_minima?: IntFieldUpdateOperationsInput | number
    ultima_atualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type estoqueUncheckedUpdateManyWithoutSalaInput = {
    id_estoque?: IntFieldUpdateOperationsInput | number
    id_produto?: IntFieldUpdateOperationsInput | number
    quantidade_atual?: IntFieldUpdateOperationsInput | number
    quantidade_minima?: IntFieldUpdateOperationsInput | number
    ultima_atualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type historico_previsaoCreateManyPrevisaoInput = {
    id_historico?: number
    id_produto: number
    id_financeiro?: number | null
    demanda_real: number
    diferenca: number
    precisao_modelo?: number | null
  }

  export type historico_previsaoUpdateWithoutPrevisaoInput = {
    demanda_real?: IntFieldUpdateOperationsInput | number
    diferenca?: IntFieldUpdateOperationsInput | number
    precisao_modelo?: NullableFloatFieldUpdateOperationsInput | number | null
    produto?: produtoUpdateOneRequiredWithoutHistoricosNestedInput
    financeiro?: financeiroUpdateOneWithoutHistoricosNestedInput
  }

  export type historico_previsaoUncheckedUpdateWithoutPrevisaoInput = {
    id_historico?: IntFieldUpdateOperationsInput | number
    id_produto?: IntFieldUpdateOperationsInput | number
    id_financeiro?: NullableIntFieldUpdateOperationsInput | number | null
    demanda_real?: IntFieldUpdateOperationsInput | number
    diferenca?: IntFieldUpdateOperationsInput | number
    precisao_modelo?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type historico_previsaoUncheckedUpdateManyWithoutPrevisaoInput = {
    id_historico?: IntFieldUpdateOperationsInput | number
    id_produto?: IntFieldUpdateOperationsInput | number
    id_financeiro?: NullableIntFieldUpdateOperationsInput | number | null
    demanda_real?: IntFieldUpdateOperationsInput | number
    diferenca?: IntFieldUpdateOperationsInput | number
    precisao_modelo?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type compraCreateManyFornecedorInput = {
    id_compra?: number
    id_produto: number
    id_financeiro: number
    id_usuario: number
    data_pedido: Date | string
    data_recebimento?: Date | string | null
    valor_total: number
    origem?: string | null
    observacoes?: string | null
  }

  export type produtoCreateManyFornecedorInput = {
    id_produto?: number
    nome: string
    descricao?: string | null
    categoria?: string | null
    codigo_publico?: string | null
    preco_unitario?: number | null
    unidade_medida?: string | null
  }

  export type compraUpdateWithoutFornecedorInput = {
    data_pedido?: DateTimeFieldUpdateOperationsInput | Date | string
    data_recebimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor_total?: FloatFieldUpdateOperationsInput | number
    origem?: NullableStringFieldUpdateOperationsInput | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    produto?: produtoUpdateOneRequiredWithoutComprasNestedInput
    financeiro?: financeiroUpdateOneRequiredWithoutComprasNestedInput
    usuario?: usuarioUpdateOneRequiredWithoutComprasNestedInput
  }

  export type compraUncheckedUpdateWithoutFornecedorInput = {
    id_compra?: IntFieldUpdateOperationsInput | number
    id_produto?: IntFieldUpdateOperationsInput | number
    id_financeiro?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    data_pedido?: DateTimeFieldUpdateOperationsInput | Date | string
    data_recebimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor_total?: FloatFieldUpdateOperationsInput | number
    origem?: NullableStringFieldUpdateOperationsInput | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type compraUncheckedUpdateManyWithoutFornecedorInput = {
    id_compra?: IntFieldUpdateOperationsInput | number
    id_produto?: IntFieldUpdateOperationsInput | number
    id_financeiro?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    data_pedido?: DateTimeFieldUpdateOperationsInput | Date | string
    data_recebimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor_total?: FloatFieldUpdateOperationsInput | number
    origem?: NullableStringFieldUpdateOperationsInput | string | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type produtoUpdateWithoutFornecedorInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_publico?: NullableStringFieldUpdateOperationsInput | string | null
    preco_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
    unidade_medida?: NullableStringFieldUpdateOperationsInput | string | null
    estoque?: estoqueUpdateManyWithoutProdutoNestedInput
    compras?: compraUpdateManyWithoutProdutoNestedInput
    alertas?: alertaUpdateManyWithoutProdutoNestedInput
    previsoes?: previsao_demandaUpdateManyWithoutProdutoNestedInput
    historicos?: historico_previsaoUpdateManyWithoutProdutoNestedInput
    movimentacoes?: movimentacaoUpdateManyWithoutProdutoNestedInput
    garantias?: garantiaUpdateManyWithoutProdutoNestedInput
  }

  export type produtoUncheckedUpdateWithoutFornecedorInput = {
    id_produto?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_publico?: NullableStringFieldUpdateOperationsInput | string | null
    preco_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
    unidade_medida?: NullableStringFieldUpdateOperationsInput | string | null
    estoque?: estoqueUncheckedUpdateManyWithoutProdutoNestedInput
    compras?: compraUncheckedUpdateManyWithoutProdutoNestedInput
    alertas?: alertaUncheckedUpdateManyWithoutProdutoNestedInput
    previsoes?: previsao_demandaUncheckedUpdateManyWithoutProdutoNestedInput
    historicos?: historico_previsaoUncheckedUpdateManyWithoutProdutoNestedInput
    movimentacoes?: movimentacaoUncheckedUpdateManyWithoutProdutoNestedInput
    garantias?: garantiaUncheckedUpdateManyWithoutProdutoNestedInput
  }

  export type produtoUncheckedUpdateManyWithoutFornecedorInput = {
    id_produto?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_publico?: NullableStringFieldUpdateOperationsInput | string | null
    preco_unitario?: NullableFloatFieldUpdateOperationsInput | number | null
    unidade_medida?: NullableStringFieldUpdateOperationsInput | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}